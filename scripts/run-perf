#!/bin/bash

# these scripts are intended to be run from the top level
# of the project

cport=11113
port=$(( $cport + 1 ))

source scripts/common.bash

transport=infrc
ip=`hostname -i`

masterLocator=$transport:host=$ip,port=$port
coordinatorLocator=$transport:host=$ip,port=$cport

# Check to see if master and coordinator servers are running. If so, kill 'em!
portslay $port
portslay $cport

atexit "portslay $port"
atexit "portslay $cport"

# Start a server and run tests
$OBJDIR/coordinator -C $coordinatorLocator &
sleep .1

# number of backups is loop end
numBackups=1
for ((i=1; i <= numBackups ; i++))
do
   port=$(( $port + 1 ))
   bhost=rc0$((2+$i))ib
   backupLocator=$transport:host=$bhost,port=$port
   ssh $bhost "$PWD/$OBJDIR/backup -L $backupLocator -C $coordinatorLocator" &
   echo "Started backup $i - $bhost"
done
sleep 2

# backups need to be started before the master
$OBJDIR/server -m17000 -r $numBackups -L $masterLocator -C $coordinatorLocator &
sleep 2

date=`date +"%Y%m%d.%H%M"`
objSize=100

# now call perl script to do the rest of the work
scripts/latencyVSload.pl -co $coordinatorLocator -b $OBJDIR/Bench -t $transport --dump $date.$objSize.$transport.load.dump -cl 'rc[01,07-35]ib.rccluster' --loadStart 2 --loadEnd 5 --objSize $objSize
RETVAL=$?

# kill backups now
for ((i=1; i <= numBackups ; i++))
do
    bhost=rc0$((2+$i))ib
    ssh $bhost "pkill backup"
done

exit $RETVAL

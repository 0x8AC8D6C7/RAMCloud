OBJDIRS += $(OBJDIR)

AUTO_GEN_HEADERS := $(patsubst src/%.proto, $(OBJDIR)/%.pb.h, $(wildcard src/*.proto))
.SECONDARY: $(AUTO_GEN_HEADERS)
$(OBJDIR)/%.pb.cc $(OBJDIR)/%.pb.h: $(TOP)/src/%.proto
	@mkdir -p $(OBJDIR)
	@echo protoc ... $$(basename $<)
	@cd $(TOP)/src/; \
	protoc --cpp_out=$(TOP)/$(OBJDIR) $$(basename $<); \
	echo "// RAMCloud pragma [GCCWARN=0]" >> $(TOP)/$(OBJDIR)/$$(basename $< .proto).pb.h; \
	echo "// RAMCloud pragma [GCCWARN=0]" >> $(TOP)/$(OBJDIR)/$$(basename $< .proto).pb.cc


ifeq ($(INFINIBAND),yes)
INFINIBAND_SRCFILES := \
           src/InfRCTransport.cc \
           $(NULL)
else
INFINIBAND_SRCFILES :=
endif

SHARED_SRCFILES := \
		   src/Client.cc \
		   src/ClientException.cc \
		   src/Coordinator.cc \
		   src/BackupClient.cc \
		   src/BenchUtil.cc \
		   src/Buffer.cc \
		   src/ClientException.cc \
		   src/Common.cc \
		   src/Driver.cc \
		   src/FastTransport.cc \
		   src/IpAddress.cc \
		   src/Log.cc \
		   src/LogCleaner.cc \
		   src/Logging.cc \
		   src/Metrics.cc \
		   src/OptionParser.cc \
		   src/Segment.cc \
		   src/SegmentIterator.cc \
		   src/Server.cc \
		   src/ServiceLocator.cc \
		   src/Status.cc \
		   src/TcpTransport.cc \
		   src/Table.cc \
		   src/TransportManager.cc \
		   src/UdpDriver.cc \
		   src/rabinpoly.cc \
		   $(INFINIBAND_SRCFILES) \
		   $(OBJDIR)/ServerList.pb.cc \
		   $(NULL)

SHARED_OBJFILES := $(SHARED_SRCFILES)
SHARED_OBJFILES := $(patsubst src/%.cc, $(OBJDIR)/%.o, $(SHARED_OBJFILES))
SHARED_OBJFILES := $(patsubst $(OBJDIR)/%.cc, $(OBJDIR)/%.o, $(SHARED_OBJFILES))

$(TOP)/src/config.h: $(TOP)/src/config.h.tmpl
	cp $(TOP)/src/config.h.tmpl $@

$(OBJDIR)/%.o: $(TOP)/src/%.cc $(TOP)/src/config.h $(AUTO_GEN_HEADERS)
	@mkdir -p $(@D)
	$(call run-cxx,$@,$<, -fPIC)

# If there's a cc file in the object dir, build it.
# This is for auto-generated source code.
$(OBJDIR)/%.o: $(OBJDIR)/%.cc $(TOP)/src/config.h $(AUTO_GEN_HEADERS)
	@mkdir -p $(@D)
	$(call run-cxx,$@,$<, -fPIC)

all: $(TOP)/src/config.h

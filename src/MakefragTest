OBJDIRS += tests

TESTS_PYMOCK_SRCFILES := \
		src/TCPTransportTest.in.cc
TESTS_PYMOCK_OUTFILES := $(patsubst src/%.in.cc, $(OBJDIR)/%.cc, $(TESTS_PYMOCK_SRCFILES))

TESTS_SRCFILES := \
		src/ServerTest.cc \
		src/BackupServerTest.cc \
		src/BackupClientTest.cc \
		src/BitmapTest.cc \
		src/BufferTest.cc \
		src/ServiceTest.cc \
		src/HashTableTest.cc \
		src/ChecksumTest.cc \
		src/SegmentTest.cc \
		src/LogTest.cc \
		src/LoggingTest.cc \
                src/MetricsTest.cc \
		src/TestRunner.cc \
		src/TestUtil.cc \
		$(TESTS_PYMOCK_OUTFILES)

TESTS_OBJFILES := $(TESTS_SRCFILES)
TESTS_OBJFILES := $(patsubst src/%.cc, $(OBJDIR)/%.o, $(TESTS_OBJFILES))
TESTS_OBJFILES := $(patsubst $(OBJDIR)/%.cc, $(OBJDIR)/%.o, $(TESTS_OBJFILES))
TESTS_OBJFILES := $(TESTS_OBJFILES) \
               $(SHARED_OBJFILES) \
               $(SERVER_OBJFILES) \
               $(BACKUP_OBJFILES)

TESTS_LIB := -lcppunit -ldl

$(OBJDIR)/%Test.cc: $(TOP)/src/%Test.in.cc $(TOP)/mock.py
	$(TOP)/mock.py $< $@

$(OBJDIR)/test: $(TESTS_OBJFILES)
	@mkdir -p $(@D)
	$(CXX) $(TESTS_LIB) -o $@ $^

# TODO(ongaro) The unit tests don't actually call HashTableBenchmark, Echo, or
# Telnet. I just wanted to make sure it continues to build over time.
test: $(OBJDIR)/test $(OBJDIR)/HashTableBenchmark $(OBJDIR)/Echo $(OBJDIR)/Telnet
	$(OBJDIR)/test

$(OBJDIR)/HashTableBenchmark: $(OBJDIR)/HashTableBenchmark.o $(SHARED_OBJFILES) $(SERVER_OBJFILES)
	@mkdir -p $(@D)
	$(CXX) -o $@ $^

$(OBJDIR)/Echo: $(OBJDIR)/Echo.o $(SHARED_OBJFILES) $(SERVER_OBJFILES)
	@mkdir -p $(@D)
	$(CXX) -o $@ $^

$(OBJDIR)/Telnet: $(OBJDIR)/Telnet.o $(SHARED_OBJFILES) $(SERVER_OBJFILES)
	@mkdir -p $(@D)
	$(CXX) -o $@ $^

$(OBJDIR)/Bench: $(OBJDIR)/Bench.o $(OBJDIR)/libramcloud.a
	@mkdir -p $(@D)
	$(CXX) -o $@ $^

.PHONY: mockpy-test
mockpy-test:
	$(TOP)/mock.py src/tests/mockpy.in.cc $(OBJDIR)/mockpytest.out.cc
	@diff -q src/tests/mockpy.out.cc $(OBJDIR)/mockpytest.out.cc || \
	 diff -u src/tests/mockpy.out.cc $(OBJDIR)/mockpytest.out.cc

tests-clean:
	rm -f $(TOP)/src/TCPTransportTest.cc

.PHONY: test-smack
test-smack: client $(OBJDIR)/server
	scripts/smack

.PHONY: test-bench
test-bench: $(OBJDIR)/server $(OBJDIR)/Bench
	scripts/run-bench

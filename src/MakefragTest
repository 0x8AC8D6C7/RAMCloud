OBJDIRS += tests

TESTS_PYMOCK_SRCFILES := \
		src/TcpTransportTest.in.cc
TESTS_PYMOCK_OUTFILES := $(patsubst src/%.in.cc, $(OBJDIR)/%.cc, $(TESTS_PYMOCK_SRCFILES))

TESTS_SRCFILES := \
		  src/BackupClientTest.cc \
		  src/BackupServerTest.cc \
		  src/BackupStorage.cc \
		  src/BackupStorageTest.cc \
		  src/BoostIntrusiveTest.cc \
		  src/BufferTest.cc \
		  src/ChecksumTest.cc \
		  src/ClientExceptionTest.cc \
		  src/ClientTest.cc \
		  src/CommonTest.cc \
		  src/CoordinatorServerTest.cc \
		  src/CoordinatorTest.cc \
		  src/FastTransportTest.cc \
		  src/HashTableTest.cc \
		  src/IpAddressTest.cc \
          src/LogTest.cc \
          src/LogCleanerTest.cc \
		  src/LoggingTest.cc \
		  src/MasterTest.cc \
		  src/MetricsTest.cc \
		  src/MockDriver.cc \
		  src/MockTransport.cc \
		  src/OptionParser.cc \
		  src/OptionParserTest.cc \
		  src/RamCloudCClientTest.cc \
		  src/RamCloudClientTest.cc \
		  src/SegmentTest.cc \
		  src/SegmentIteratorTest.cc \
		  src/ServerTest.cc \
		  src/ServiceLocatorTest.cc \
		  src/StatusTest.cc \
		  src/StringConverterTest.cc \
		  src/TestRunner.cc \
		  src/TestUtil.cc \
		  src/TestUtilTest.cc \
		  src/TransportManagerTest.cc \
		  src/UdpDriverTest.cc \
		  src/WindowTest.cc \
		  $(TESTS_PYMOCK_OUTFILES)

TESTS_OBJFILES := $(TESTS_SRCFILES)
TESTS_OBJFILES := $(patsubst src/%.cc, $(OBJDIR)/%.o, $(TESTS_OBJFILES))
TESTS_OBJFILES := $(patsubst $(OBJDIR)/%.cc, $(OBJDIR)/%.o, $(TESTS_OBJFILES))
TESTS_OBJFILES := $(sort \
               $(TESTS_OBJFILES) \
               $(SHARED_OBJFILES) \
               $(SERVER_OBJFILES) \
               $(COORDINATOR_OBJFILES) \
               $(CLIENT_OBJFILES) \
               $(BACKUP_OBJFILES))

TESTS_LIB := -lcppunit -ldl $(LIBS)

$(OBJDIR)/%Test.cc: $(TOP)/src/%Test.in.cc $(TOP)/mock.py
	$(TOP)/mock.py $< $@

$(OBJDIR)/test: $(TESTS_OBJFILES)
	@mkdir -p $(@D)
	$(CXX) $(TESTS_LIB) -o $@ $^

# TODO(ongaro) The unit tests don't actually call HashTableBenchmark, Echo, or
# Telnet. I just wanted to make sure it continues to build over time.
test: $(OBJDIR)/test $(OBJDIR)/HashTableBenchmark $(OBJDIR)/Echo $(OBJDIR)/Telnet $(OBJDIR)/Bench
	$(OBJDIR)/test

ftest: $(OBJDIR)/test
	scripts/forking_test_runner.py

$(OBJDIR)/HashTableBenchmark: $(OBJDIR)/HashTableBenchmark.o $(SHARED_OBJFILES) $(SERVER_OBJFILES)
	@mkdir -p $(@D)
	$(CXX) $(LIBS) -o $@ $^

$(OBJDIR)/Echo: $(OBJDIR)/Echo.o $(SHARED_OBJFILES) $(SERVER_OBJFILES)
	@mkdir -p $(@D)
	$(CXX) $(LIBS) -o $@ $^

$(OBJDIR)/Telnet: $(OBJDIR)/Telnet.o $(SHARED_OBJFILES) $(SERVER_OBJFILES)
	@mkdir -p $(@D)
	$(CXX) $(LIBS) -o $@ $^

$(OBJDIR)/Bench: $(OBJDIR)/Bench.o $(OBJDIR)/libramcloud.a
	@mkdir -p $(@D)
	$(CXX) $(LIBS) -o $@ $^

.PHONY: mockpy-test
mockpy-test:
	$(TOP)/mock.py src/tests/mockpy.in.cc $(OBJDIR)/mockpytest.out.cc
	@diff -q src/tests/mockpy.out.cc $(OBJDIR)/mockpytest.out.cc || \
	 diff -u src/tests/mockpy.out.cc $(OBJDIR)/mockpytest.out.cc

tests-clean:
	rm -f $(TOP)/src/TcpTransportTest.cc

.PHONY: test-smack
test-smack: client $(OBJDIR)/server
	scripts/smack

.PHONY: test-bench
test-bench: $(OBJDIR)/server $(OBJDIR)/Bench
	scripts/run-bench

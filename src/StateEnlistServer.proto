/* Copyright (c) 2010-2011 Stanford University
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR(S) DISCLAIM ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL AUTHORS BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

package RAMCloud.ProtoBuf;

// The information appended to LogCabin by the Coordinator
// to store its state during the enlistServer operation.
message StateEnlistServer {

    /// Entry type for this LogCabin entry.
    required string entry_type = 1;

	/// Server id of the server that the enlisting server is replacing.
    required fixed64 replaces_id = 2;

	/// The id assigned to the enlisting server.
    required fixed64 new_server_id = 3;

	/// Services supported by the enlisting server.
    required uint32 service_mask = 4;

    /// Read speed of the enlisting server.
    required uint32 read_speed = 5;

	/// Write speed of the enlisting server.
    required uint32 write_speed = 6;

	/// Service Locator of the enlisting server.
    required string service_locator = 7;
}

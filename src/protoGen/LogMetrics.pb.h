// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LogMetrics.proto

#ifndef PROTOBUF_LogMetrics_2eproto__INCLUDED
#define PROTOBUF_LogMetrics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Histogram.pb.h"
// @@protoc_insertion_point(includes)

namespace RAMCloud {
namespace ProtoBuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_LogMetrics_2eproto();
void protobuf_AssignDesc_LogMetrics_2eproto();
void protobuf_ShutdownFile_LogMetrics_2eproto();

class LogMetrics;
class LogMetrics_CleanerMetrics;
class LogMetrics_CleanerMetrics_InMemoryMetrics;
class LogMetrics_CleanerMetrics_OnDiskMetrics;
class LogMetrics_CleanerMetrics_ThreadMetrics;
class LogMetrics_SegletMetrics;
class LogMetrics_SegmentMetrics;

// ===================================================================

class LogMetrics_CleanerMetrics_InMemoryMetrics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics) */ {
 public:
  LogMetrics_CleanerMetrics_InMemoryMetrics();
  virtual ~LogMetrics_CleanerMetrics_InMemoryMetrics();

  LogMetrics_CleanerMetrics_InMemoryMetrics(const LogMetrics_CleanerMetrics_InMemoryMetrics& from);

  inline LogMetrics_CleanerMetrics_InMemoryMetrics& operator=(const LogMetrics_CleanerMetrics_InMemoryMetrics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogMetrics_CleanerMetrics_InMemoryMetrics& default_instance();

  void Swap(LogMetrics_CleanerMetrics_InMemoryMetrics* other);

  // implements Message ----------------------------------------------

  inline LogMetrics_CleanerMetrics_InMemoryMetrics* New() const { return New(NULL); }

  LogMetrics_CleanerMetrics_InMemoryMetrics* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogMetrics_CleanerMetrics_InMemoryMetrics& from);
  void MergeFrom(const LogMetrics_CleanerMetrics_InMemoryMetrics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogMetrics_CleanerMetrics_InMemoryMetrics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 total_relocation_callbacks = 1;
  bool has_total_relocation_callbacks() const;
  void clear_total_relocation_callbacks();
  static const int kTotalRelocationCallbacksFieldNumber = 1;
  ::google::protobuf::uint64 total_relocation_callbacks() const;
  void set_total_relocation_callbacks(::google::protobuf::uint64 value);

  // required fixed64 total_relocation_appends = 2;
  bool has_total_relocation_appends() const;
  void clear_total_relocation_appends();
  static const int kTotalRelocationAppendsFieldNumber = 2;
  ::google::protobuf::uint64 total_relocation_appends() const;
  void set_total_relocation_appends(::google::protobuf::uint64 value);

  // required fixed64 total_bytes_freed = 3;
  bool has_total_bytes_freed() const;
  void clear_total_bytes_freed();
  static const int kTotalBytesFreedFieldNumber = 3;
  ::google::protobuf::uint64 total_bytes_freed() const;
  void set_total_bytes_freed(::google::protobuf::uint64 value);

  // required fixed64 total_bytes_in_compacted_segments = 4;
  bool has_total_bytes_in_compacted_segments() const;
  void clear_total_bytes_in_compacted_segments();
  static const int kTotalBytesInCompactedSegmentsFieldNumber = 4;
  ::google::protobuf::uint64 total_bytes_in_compacted_segments() const;
  void set_total_bytes_in_compacted_segments(::google::protobuf::uint64 value);

  // required fixed64 total_bytes_appended_to_survivors = 5;
  bool has_total_bytes_appended_to_survivors() const;
  void clear_total_bytes_appended_to_survivors();
  static const int kTotalBytesAppendedToSurvivorsFieldNumber = 5;
  ::google::protobuf::uint64 total_bytes_appended_to_survivors() const;
  void set_total_bytes_appended_to_survivors(::google::protobuf::uint64 value);

  // required fixed64 total_segments_compacted = 6;
  bool has_total_segments_compacted() const;
  void clear_total_segments_compacted();
  static const int kTotalSegmentsCompactedFieldNumber = 6;
  ::google::protobuf::uint64 total_segments_compacted() const;
  void set_total_segments_compacted(::google::protobuf::uint64 value);

  // required fixed64 total_empty_segments_compacted = 7;
  bool has_total_empty_segments_compacted() const;
  void clear_total_empty_segments_compacted();
  static const int kTotalEmptySegmentsCompactedFieldNumber = 7;
  ::google::protobuf::uint64 total_empty_segments_compacted() const;
  void set_total_empty_segments_compacted(::google::protobuf::uint64 value);

  // repeated fixed64 total_entries_scanned = 8;
  int total_entries_scanned_size() const;
  void clear_total_entries_scanned();
  static const int kTotalEntriesScannedFieldNumber = 8;
  ::google::protobuf::uint64 total_entries_scanned(int index) const;
  void set_total_entries_scanned(int index, ::google::protobuf::uint64 value);
  void add_total_entries_scanned(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      total_entries_scanned() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_total_entries_scanned();

  // repeated fixed64 total_live_entries_scanned = 9;
  int total_live_entries_scanned_size() const;
  void clear_total_live_entries_scanned();
  static const int kTotalLiveEntriesScannedFieldNumber = 9;
  ::google::protobuf::uint64 total_live_entries_scanned(int index) const;
  void set_total_live_entries_scanned(int index, ::google::protobuf::uint64 value);
  void add_total_live_entries_scanned(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      total_live_entries_scanned() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_total_live_entries_scanned();

  // repeated fixed64 total_scanned_entry_lengths = 10;
  int total_scanned_entry_lengths_size() const;
  void clear_total_scanned_entry_lengths();
  static const int kTotalScannedEntryLengthsFieldNumber = 10;
  ::google::protobuf::uint64 total_scanned_entry_lengths(int index) const;
  void set_total_scanned_entry_lengths(int index, ::google::protobuf::uint64 value);
  void add_total_scanned_entry_lengths(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      total_scanned_entry_lengths() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_total_scanned_entry_lengths();

  // repeated fixed64 total_live_scanned_entry_lengths = 11;
  int total_live_scanned_entry_lengths_size() const;
  void clear_total_live_scanned_entry_lengths();
  static const int kTotalLiveScannedEntryLengthsFieldNumber = 11;
  ::google::protobuf::uint64 total_live_scanned_entry_lengths(int index) const;
  void set_total_live_scanned_entry_lengths(int index, ::google::protobuf::uint64 value);
  void add_total_live_scanned_entry_lengths(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      total_live_scanned_entry_lengths() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_total_live_scanned_entry_lengths();

  // required fixed64 total_ticks = 12;
  bool has_total_ticks() const;
  void clear_total_ticks();
  static const int kTotalTicksFieldNumber = 12;
  ::google::protobuf::uint64 total_ticks() const;
  void set_total_ticks(::google::protobuf::uint64 value);

  // required fixed64 get_segment_to_compact_ticks = 13;
  bool has_get_segment_to_compact_ticks() const;
  void clear_get_segment_to_compact_ticks();
  static const int kGetSegmentToCompactTicksFieldNumber = 13;
  ::google::protobuf::uint64 get_segment_to_compact_ticks() const;
  void set_get_segment_to_compact_ticks(::google::protobuf::uint64 value);

  // required fixed64 wait_for_free_survivor_ticks = 14;
  bool has_wait_for_free_survivor_ticks() const;
  void clear_wait_for_free_survivor_ticks();
  static const int kWaitForFreeSurvivorTicksFieldNumber = 14;
  ::google::protobuf::uint64 wait_for_free_survivor_ticks() const;
  void set_wait_for_free_survivor_ticks(::google::protobuf::uint64 value);

  // required fixed64 relocation_callback_ticks = 15;
  bool has_relocation_callback_ticks() const;
  void clear_relocation_callback_ticks();
  static const int kRelocationCallbackTicksFieldNumber = 15;
  ::google::protobuf::uint64 relocation_callback_ticks() const;
  void set_relocation_callback_ticks(::google::protobuf::uint64 value);

  // required fixed64 relocation_append_ticks = 16;
  bool has_relocation_append_ticks() const;
  void clear_relocation_append_ticks();
  static const int kRelocationAppendTicksFieldNumber = 16;
  ::google::protobuf::uint64 relocation_append_ticks() const;
  void set_relocation_append_ticks(::google::protobuf::uint64 value);

  // required fixed64 compaction_complete_ticks = 17;
  bool has_compaction_complete_ticks() const;
  void clear_compaction_complete_ticks();
  static const int kCompactionCompleteTicksFieldNumber = 17;
  ::google::protobuf::uint64 compaction_complete_ticks() const;
  void set_compaction_complete_ticks(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics)
 private:
  inline void set_has_total_relocation_callbacks();
  inline void clear_has_total_relocation_callbacks();
  inline void set_has_total_relocation_appends();
  inline void clear_has_total_relocation_appends();
  inline void set_has_total_bytes_freed();
  inline void clear_has_total_bytes_freed();
  inline void set_has_total_bytes_in_compacted_segments();
  inline void clear_has_total_bytes_in_compacted_segments();
  inline void set_has_total_bytes_appended_to_survivors();
  inline void clear_has_total_bytes_appended_to_survivors();
  inline void set_has_total_segments_compacted();
  inline void clear_has_total_segments_compacted();
  inline void set_has_total_empty_segments_compacted();
  inline void clear_has_total_empty_segments_compacted();
  inline void set_has_total_ticks();
  inline void clear_has_total_ticks();
  inline void set_has_get_segment_to_compact_ticks();
  inline void clear_has_get_segment_to_compact_ticks();
  inline void set_has_wait_for_free_survivor_ticks();
  inline void clear_has_wait_for_free_survivor_ticks();
  inline void set_has_relocation_callback_ticks();
  inline void clear_has_relocation_callback_ticks();
  inline void set_has_relocation_append_ticks();
  inline void clear_has_relocation_append_ticks();
  inline void set_has_compaction_complete_ticks();
  inline void clear_has_compaction_complete_ticks();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 total_relocation_callbacks_;
  ::google::protobuf::uint64 total_relocation_appends_;
  ::google::protobuf::uint64 total_bytes_freed_;
  ::google::protobuf::uint64 total_bytes_in_compacted_segments_;
  ::google::protobuf::uint64 total_bytes_appended_to_survivors_;
  ::google::protobuf::uint64 total_segments_compacted_;
  ::google::protobuf::uint64 total_empty_segments_compacted_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > total_entries_scanned_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > total_live_entries_scanned_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > total_scanned_entry_lengths_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > total_live_scanned_entry_lengths_;
  ::google::protobuf::uint64 total_ticks_;
  ::google::protobuf::uint64 get_segment_to_compact_ticks_;
  ::google::protobuf::uint64 wait_for_free_survivor_ticks_;
  ::google::protobuf::uint64 relocation_callback_ticks_;
  ::google::protobuf::uint64 relocation_append_ticks_;
  ::google::protobuf::uint64 compaction_complete_ticks_;
  friend void  protobuf_AddDesc_LogMetrics_2eproto();
  friend void protobuf_AssignDesc_LogMetrics_2eproto();
  friend void protobuf_ShutdownFile_LogMetrics_2eproto();

  void InitAsDefaultInstance();
  static LogMetrics_CleanerMetrics_InMemoryMetrics* default_instance_;
};
// -------------------------------------------------------------------

class LogMetrics_CleanerMetrics_OnDiskMetrics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics) */ {
 public:
  LogMetrics_CleanerMetrics_OnDiskMetrics();
  virtual ~LogMetrics_CleanerMetrics_OnDiskMetrics();

  LogMetrics_CleanerMetrics_OnDiskMetrics(const LogMetrics_CleanerMetrics_OnDiskMetrics& from);

  inline LogMetrics_CleanerMetrics_OnDiskMetrics& operator=(const LogMetrics_CleanerMetrics_OnDiskMetrics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogMetrics_CleanerMetrics_OnDiskMetrics& default_instance();

  void Swap(LogMetrics_CleanerMetrics_OnDiskMetrics* other);

  // implements Message ----------------------------------------------

  inline LogMetrics_CleanerMetrics_OnDiskMetrics* New() const { return New(NULL); }

  LogMetrics_CleanerMetrics_OnDiskMetrics* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogMetrics_CleanerMetrics_OnDiskMetrics& from);
  void MergeFrom(const LogMetrics_CleanerMetrics_OnDiskMetrics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogMetrics_CleanerMetrics_OnDiskMetrics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 total_bytes_appended_to_survivors = 1;
  bool has_total_bytes_appended_to_survivors() const;
  void clear_total_bytes_appended_to_survivors();
  static const int kTotalBytesAppendedToSurvivorsFieldNumber = 1;
  ::google::protobuf::uint64 total_bytes_appended_to_survivors() const;
  void set_total_bytes_appended_to_survivors(::google::protobuf::uint64 value);

  // required fixed64 total_memory_bytes_freed = 2;
  bool has_total_memory_bytes_freed() const;
  void clear_total_memory_bytes_freed();
  static const int kTotalMemoryBytesFreedFieldNumber = 2;
  ::google::protobuf::uint64 total_memory_bytes_freed() const;
  void set_total_memory_bytes_freed(::google::protobuf::uint64 value);

  // required fixed64 total_disk_bytes_freed = 3;
  bool has_total_disk_bytes_freed() const;
  void clear_total_disk_bytes_freed();
  static const int kTotalDiskBytesFreedFieldNumber = 3;
  ::google::protobuf::uint64 total_disk_bytes_freed() const;
  void set_total_disk_bytes_freed(::google::protobuf::uint64 value);

  // required fixed64 total_memory_bytes_in_cleaned_segments = 4;
  bool has_total_memory_bytes_in_cleaned_segments() const;
  void clear_total_memory_bytes_in_cleaned_segments();
  static const int kTotalMemoryBytesInCleanedSegmentsFieldNumber = 4;
  ::google::protobuf::uint64 total_memory_bytes_in_cleaned_segments() const;
  void set_total_memory_bytes_in_cleaned_segments(::google::protobuf::uint64 value);

  // required fixed64 total_disk_bytes_in_cleaned_segments = 5;
  bool has_total_disk_bytes_in_cleaned_segments() const;
  void clear_total_disk_bytes_in_cleaned_segments();
  static const int kTotalDiskBytesInCleanedSegmentsFieldNumber = 5;
  ::google::protobuf::uint64 total_disk_bytes_in_cleaned_segments() const;
  void set_total_disk_bytes_in_cleaned_segments(::google::protobuf::uint64 value);

  // required fixed64 total_relocation_callbacks = 6;
  bool has_total_relocation_callbacks() const;
  void clear_total_relocation_callbacks();
  static const int kTotalRelocationCallbacksFieldNumber = 6;
  ::google::protobuf::uint64 total_relocation_callbacks() const;
  void set_total_relocation_callbacks(::google::protobuf::uint64 value);

  // required fixed64 total_relocation_appends = 7;
  bool has_total_relocation_appends() const;
  void clear_total_relocation_appends();
  static const int kTotalRelocationAppendsFieldNumber = 7;
  ::google::protobuf::uint64 total_relocation_appends() const;
  void set_total_relocation_appends(::google::protobuf::uint64 value);

  // required fixed64 total_segments_cleaned = 8;
  bool has_total_segments_cleaned() const;
  void clear_total_segments_cleaned();
  static const int kTotalSegmentsCleanedFieldNumber = 8;
  ::google::protobuf::uint64 total_segments_cleaned() const;
  void set_total_segments_cleaned(::google::protobuf::uint64 value);

  // required fixed64 total_empty_segments_cleaned = 9;
  bool has_total_empty_segments_cleaned() const;
  void clear_total_empty_segments_cleaned();
  static const int kTotalEmptySegmentsCleanedFieldNumber = 9;
  ::google::protobuf::uint64 total_empty_segments_cleaned() const;
  void set_total_empty_segments_cleaned(::google::protobuf::uint64 value);

  // required fixed64 total_survivors_created = 10;
  bool has_total_survivors_created() const;
  void clear_total_survivors_created();
  static const int kTotalSurvivorsCreatedFieldNumber = 10;
  ::google::protobuf::uint64 total_survivors_created() const;
  void set_total_survivors_created(::google::protobuf::uint64 value);

  // required fixed64 total_runs = 11;
  bool has_total_runs() const;
  void clear_total_runs();
  static const int kTotalRunsFieldNumber = 11;
  ::google::protobuf::uint64 total_runs() const;
  void set_total_runs(::google::protobuf::uint64 value);

  // required fixed64 total_low_disk_space_runs = 12;
  bool has_total_low_disk_space_runs() const;
  void clear_total_low_disk_space_runs();
  static const int kTotalLowDiskSpaceRunsFieldNumber = 12;
  ::google::protobuf::uint64 total_low_disk_space_runs() const;
  void set_total_low_disk_space_runs(::google::protobuf::uint64 value);

  // required fixed64 memory_utilization_at_start_sum = 13;
  bool has_memory_utilization_at_start_sum() const;
  void clear_memory_utilization_at_start_sum();
  static const int kMemoryUtilizationAtStartSumFieldNumber = 13;
  ::google::protobuf::uint64 memory_utilization_at_start_sum() const;
  void set_memory_utilization_at_start_sum(::google::protobuf::uint64 value);

  // repeated fixed64 total_entries_scanned = 14;
  int total_entries_scanned_size() const;
  void clear_total_entries_scanned();
  static const int kTotalEntriesScannedFieldNumber = 14;
  ::google::protobuf::uint64 total_entries_scanned(int index) const;
  void set_total_entries_scanned(int index, ::google::protobuf::uint64 value);
  void add_total_entries_scanned(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      total_entries_scanned() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_total_entries_scanned();

  // repeated fixed64 total_live_entries_scanned = 15;
  int total_live_entries_scanned_size() const;
  void clear_total_live_entries_scanned();
  static const int kTotalLiveEntriesScannedFieldNumber = 15;
  ::google::protobuf::uint64 total_live_entries_scanned(int index) const;
  void set_total_live_entries_scanned(int index, ::google::protobuf::uint64 value);
  void add_total_live_entries_scanned(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      total_live_entries_scanned() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_total_live_entries_scanned();

  // repeated fixed64 total_scanned_entry_lengths = 16;
  int total_scanned_entry_lengths_size() const;
  void clear_total_scanned_entry_lengths();
  static const int kTotalScannedEntryLengthsFieldNumber = 16;
  ::google::protobuf::uint64 total_scanned_entry_lengths(int index) const;
  void set_total_scanned_entry_lengths(int index, ::google::protobuf::uint64 value);
  void add_total_scanned_entry_lengths(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      total_scanned_entry_lengths() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_total_scanned_entry_lengths();

  // repeated fixed64 total_live_scanned_entry_lengths = 17;
  int total_live_scanned_entry_lengths_size() const;
  void clear_total_live_scanned_entry_lengths();
  static const int kTotalLiveScannedEntryLengthsFieldNumber = 17;
  ::google::protobuf::uint64 total_live_scanned_entry_lengths(int index) const;
  void set_total_live_scanned_entry_lengths(int index, ::google::protobuf::uint64 value);
  void add_total_live_scanned_entry_lengths(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      total_live_scanned_entry_lengths() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_total_live_scanned_entry_lengths();

  // required fixed64 total_ticks = 18;
  bool has_total_ticks() const;
  void clear_total_ticks();
  static const int kTotalTicksFieldNumber = 18;
  ::google::protobuf::uint64 total_ticks() const;
  void set_total_ticks(::google::protobuf::uint64 value);

  // required fixed64 get_segments_to_clean_ticks = 19;
  bool has_get_segments_to_clean_ticks() const;
  void clear_get_segments_to_clean_ticks();
  static const int kGetSegmentsToCleanTicksFieldNumber = 19;
  ::google::protobuf::uint64 get_segments_to_clean_ticks() const;
  void set_get_segments_to_clean_ticks(::google::protobuf::uint64 value);

  // required fixed64 cost_benefit_sort_ticks = 20;
  bool has_cost_benefit_sort_ticks() const;
  void clear_cost_benefit_sort_ticks();
  static const int kCostBenefitSortTicksFieldNumber = 20;
  ::google::protobuf::uint64 cost_benefit_sort_ticks() const;
  void set_cost_benefit_sort_ticks(::google::protobuf::uint64 value);

  // required fixed64 get_sorted_entries_ticks = 21;
  bool has_get_sorted_entries_ticks() const;
  void clear_get_sorted_entries_ticks();
  static const int kGetSortedEntriesTicksFieldNumber = 21;
  ::google::protobuf::uint64 get_sorted_entries_ticks() const;
  void set_get_sorted_entries_ticks(::google::protobuf::uint64 value);

  // required fixed64 timestamp_sort_ticks = 22;
  bool has_timestamp_sort_ticks() const;
  void clear_timestamp_sort_ticks();
  static const int kTimestampSortTicksFieldNumber = 22;
  ::google::protobuf::uint64 timestamp_sort_ticks() const;
  void set_timestamp_sort_ticks(::google::protobuf::uint64 value);

  // required fixed64 relocate_live_entries_ticks = 23;
  bool has_relocate_live_entries_ticks() const;
  void clear_relocate_live_entries_ticks();
  static const int kRelocateLiveEntriesTicksFieldNumber = 23;
  ::google::protobuf::uint64 relocate_live_entries_ticks() const;
  void set_relocate_live_entries_ticks(::google::protobuf::uint64 value);

  // required fixed64 wait_for_free_survivors_ticks = 24;
  bool has_wait_for_free_survivors_ticks() const;
  void clear_wait_for_free_survivors_ticks();
  static const int kWaitForFreeSurvivorsTicksFieldNumber = 24;
  ::google::protobuf::uint64 wait_for_free_survivors_ticks() const;
  void set_wait_for_free_survivors_ticks(::google::protobuf::uint64 value);

  // required fixed64 cleaning_complete_ticks = 25;
  bool has_cleaning_complete_ticks() const;
  void clear_cleaning_complete_ticks();
  static const int kCleaningCompleteTicksFieldNumber = 25;
  ::google::protobuf::uint64 cleaning_complete_ticks() const;
  void set_cleaning_complete_ticks(::google::protobuf::uint64 value);

  // required fixed64 relocation_callback_ticks = 26;
  bool has_relocation_callback_ticks() const;
  void clear_relocation_callback_ticks();
  static const int kRelocationCallbackTicksFieldNumber = 26;
  ::google::protobuf::uint64 relocation_callback_ticks() const;
  void set_relocation_callback_ticks(::google::protobuf::uint64 value);

  // required fixed64 relocation_append_ticks = 27;
  bool has_relocation_append_ticks() const;
  void clear_relocation_append_ticks();
  static const int kRelocationAppendTicksFieldNumber = 27;
  ::google::protobuf::uint64 relocation_append_ticks() const;
  void set_relocation_append_ticks(::google::protobuf::uint64 value);

  // required fixed64 close_survivor_ticks = 28;
  bool has_close_survivor_ticks() const;
  void clear_close_survivor_ticks();
  static const int kCloseSurvivorTicksFieldNumber = 28;
  ::google::protobuf::uint64 close_survivor_ticks() const;
  void set_close_survivor_ticks(::google::protobuf::uint64 value);

  // required fixed64 survivor_sync_ticks = 29;
  bool has_survivor_sync_ticks() const;
  void clear_survivor_sync_ticks();
  static const int kSurvivorSyncTicksFieldNumber = 29;
  ::google::protobuf::uint64 survivor_sync_ticks() const;
  void set_survivor_sync_ticks(::google::protobuf::uint64 value);

  // required .RAMCloud.ProtoBuf.Histogram cleaned_segment_memory_histogram = 30;
  bool has_cleaned_segment_memory_histogram() const;
  void clear_cleaned_segment_memory_histogram();
  static const int kCleanedSegmentMemoryHistogramFieldNumber = 30;
  const ::RAMCloud::ProtoBuf::Histogram& cleaned_segment_memory_histogram() const;
  ::RAMCloud::ProtoBuf::Histogram* mutable_cleaned_segment_memory_histogram();
  ::RAMCloud::ProtoBuf::Histogram* release_cleaned_segment_memory_histogram();
  void set_allocated_cleaned_segment_memory_histogram(::RAMCloud::ProtoBuf::Histogram* cleaned_segment_memory_histogram);

  // required .RAMCloud.ProtoBuf.Histogram cleaned_segment_disk_histogram = 31;
  bool has_cleaned_segment_disk_histogram() const;
  void clear_cleaned_segment_disk_histogram();
  static const int kCleanedSegmentDiskHistogramFieldNumber = 31;
  const ::RAMCloud::ProtoBuf::Histogram& cleaned_segment_disk_histogram() const;
  ::RAMCloud::ProtoBuf::Histogram* mutable_cleaned_segment_disk_histogram();
  ::RAMCloud::ProtoBuf::Histogram* release_cleaned_segment_disk_histogram();
  void set_allocated_cleaned_segment_disk_histogram(::RAMCloud::ProtoBuf::Histogram* cleaned_segment_disk_histogram);

  // required .RAMCloud.ProtoBuf.Histogram all_segments_disk_histogram = 32;
  bool has_all_segments_disk_histogram() const;
  void clear_all_segments_disk_histogram();
  static const int kAllSegmentsDiskHistogramFieldNumber = 32;
  const ::RAMCloud::ProtoBuf::Histogram& all_segments_disk_histogram() const;
  ::RAMCloud::ProtoBuf::Histogram* mutable_all_segments_disk_histogram();
  ::RAMCloud::ProtoBuf::Histogram* release_all_segments_disk_histogram();
  void set_allocated_all_segments_disk_histogram(::RAMCloud::ProtoBuf::Histogram* all_segments_disk_histogram);

  // @@protoc_insertion_point(class_scope:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics)
 private:
  inline void set_has_total_bytes_appended_to_survivors();
  inline void clear_has_total_bytes_appended_to_survivors();
  inline void set_has_total_memory_bytes_freed();
  inline void clear_has_total_memory_bytes_freed();
  inline void set_has_total_disk_bytes_freed();
  inline void clear_has_total_disk_bytes_freed();
  inline void set_has_total_memory_bytes_in_cleaned_segments();
  inline void clear_has_total_memory_bytes_in_cleaned_segments();
  inline void set_has_total_disk_bytes_in_cleaned_segments();
  inline void clear_has_total_disk_bytes_in_cleaned_segments();
  inline void set_has_total_relocation_callbacks();
  inline void clear_has_total_relocation_callbacks();
  inline void set_has_total_relocation_appends();
  inline void clear_has_total_relocation_appends();
  inline void set_has_total_segments_cleaned();
  inline void clear_has_total_segments_cleaned();
  inline void set_has_total_empty_segments_cleaned();
  inline void clear_has_total_empty_segments_cleaned();
  inline void set_has_total_survivors_created();
  inline void clear_has_total_survivors_created();
  inline void set_has_total_runs();
  inline void clear_has_total_runs();
  inline void set_has_total_low_disk_space_runs();
  inline void clear_has_total_low_disk_space_runs();
  inline void set_has_memory_utilization_at_start_sum();
  inline void clear_has_memory_utilization_at_start_sum();
  inline void set_has_total_ticks();
  inline void clear_has_total_ticks();
  inline void set_has_get_segments_to_clean_ticks();
  inline void clear_has_get_segments_to_clean_ticks();
  inline void set_has_cost_benefit_sort_ticks();
  inline void clear_has_cost_benefit_sort_ticks();
  inline void set_has_get_sorted_entries_ticks();
  inline void clear_has_get_sorted_entries_ticks();
  inline void set_has_timestamp_sort_ticks();
  inline void clear_has_timestamp_sort_ticks();
  inline void set_has_relocate_live_entries_ticks();
  inline void clear_has_relocate_live_entries_ticks();
  inline void set_has_wait_for_free_survivors_ticks();
  inline void clear_has_wait_for_free_survivors_ticks();
  inline void set_has_cleaning_complete_ticks();
  inline void clear_has_cleaning_complete_ticks();
  inline void set_has_relocation_callback_ticks();
  inline void clear_has_relocation_callback_ticks();
  inline void set_has_relocation_append_ticks();
  inline void clear_has_relocation_append_ticks();
  inline void set_has_close_survivor_ticks();
  inline void clear_has_close_survivor_ticks();
  inline void set_has_survivor_sync_ticks();
  inline void clear_has_survivor_sync_ticks();
  inline void set_has_cleaned_segment_memory_histogram();
  inline void clear_has_cleaned_segment_memory_histogram();
  inline void set_has_cleaned_segment_disk_histogram();
  inline void clear_has_cleaned_segment_disk_histogram();
  inline void set_has_all_segments_disk_histogram();
  inline void clear_has_all_segments_disk_histogram();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 total_bytes_appended_to_survivors_;
  ::google::protobuf::uint64 total_memory_bytes_freed_;
  ::google::protobuf::uint64 total_disk_bytes_freed_;
  ::google::protobuf::uint64 total_memory_bytes_in_cleaned_segments_;
  ::google::protobuf::uint64 total_disk_bytes_in_cleaned_segments_;
  ::google::protobuf::uint64 total_relocation_callbacks_;
  ::google::protobuf::uint64 total_relocation_appends_;
  ::google::protobuf::uint64 total_segments_cleaned_;
  ::google::protobuf::uint64 total_empty_segments_cleaned_;
  ::google::protobuf::uint64 total_survivors_created_;
  ::google::protobuf::uint64 total_runs_;
  ::google::protobuf::uint64 total_low_disk_space_runs_;
  ::google::protobuf::uint64 memory_utilization_at_start_sum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > total_entries_scanned_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > total_live_entries_scanned_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > total_scanned_entry_lengths_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > total_live_scanned_entry_lengths_;
  ::google::protobuf::uint64 total_ticks_;
  ::google::protobuf::uint64 get_segments_to_clean_ticks_;
  ::google::protobuf::uint64 cost_benefit_sort_ticks_;
  ::google::protobuf::uint64 get_sorted_entries_ticks_;
  ::google::protobuf::uint64 timestamp_sort_ticks_;
  ::google::protobuf::uint64 relocate_live_entries_ticks_;
  ::google::protobuf::uint64 wait_for_free_survivors_ticks_;
  ::google::protobuf::uint64 cleaning_complete_ticks_;
  ::google::protobuf::uint64 relocation_callback_ticks_;
  ::google::protobuf::uint64 relocation_append_ticks_;
  ::google::protobuf::uint64 close_survivor_ticks_;
  ::google::protobuf::uint64 survivor_sync_ticks_;
  ::RAMCloud::ProtoBuf::Histogram* cleaned_segment_memory_histogram_;
  ::RAMCloud::ProtoBuf::Histogram* cleaned_segment_disk_histogram_;
  ::RAMCloud::ProtoBuf::Histogram* all_segments_disk_histogram_;
  friend void  protobuf_AddDesc_LogMetrics_2eproto();
  friend void protobuf_AssignDesc_LogMetrics_2eproto();
  friend void protobuf_ShutdownFile_LogMetrics_2eproto();

  void InitAsDefaultInstance();
  static LogMetrics_CleanerMetrics_OnDiskMetrics* default_instance_;
};
// -------------------------------------------------------------------

class LogMetrics_CleanerMetrics_ThreadMetrics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.ThreadMetrics) */ {
 public:
  LogMetrics_CleanerMetrics_ThreadMetrics();
  virtual ~LogMetrics_CleanerMetrics_ThreadMetrics();

  LogMetrics_CleanerMetrics_ThreadMetrics(const LogMetrics_CleanerMetrics_ThreadMetrics& from);

  inline LogMetrics_CleanerMetrics_ThreadMetrics& operator=(const LogMetrics_CleanerMetrics_ThreadMetrics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogMetrics_CleanerMetrics_ThreadMetrics& default_instance();

  void Swap(LogMetrics_CleanerMetrics_ThreadMetrics* other);

  // implements Message ----------------------------------------------

  inline LogMetrics_CleanerMetrics_ThreadMetrics* New() const { return New(NULL); }

  LogMetrics_CleanerMetrics_ThreadMetrics* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogMetrics_CleanerMetrics_ThreadMetrics& from);
  void MergeFrom(const LogMetrics_CleanerMetrics_ThreadMetrics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogMetrics_CleanerMetrics_ThreadMetrics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 active_ticks = 1;
  int active_ticks_size() const;
  void clear_active_ticks();
  static const int kActiveTicksFieldNumber = 1;
  ::google::protobuf::uint64 active_ticks(int index) const;
  void set_active_ticks(int index, ::google::protobuf::uint64 value);
  void add_active_ticks(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      active_ticks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_active_ticks();

  // @@protoc_insertion_point(class_scope:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.ThreadMetrics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > active_ticks_;
  friend void  protobuf_AddDesc_LogMetrics_2eproto();
  friend void protobuf_AssignDesc_LogMetrics_2eproto();
  friend void protobuf_ShutdownFile_LogMetrics_2eproto();

  void InitAsDefaultInstance();
  static LogMetrics_CleanerMetrics_ThreadMetrics* default_instance_;
};
// -------------------------------------------------------------------

class LogMetrics_CleanerMetrics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics) */ {
 public:
  LogMetrics_CleanerMetrics();
  virtual ~LogMetrics_CleanerMetrics();

  LogMetrics_CleanerMetrics(const LogMetrics_CleanerMetrics& from);

  inline LogMetrics_CleanerMetrics& operator=(const LogMetrics_CleanerMetrics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogMetrics_CleanerMetrics& default_instance();

  void Swap(LogMetrics_CleanerMetrics* other);

  // implements Message ----------------------------------------------

  inline LogMetrics_CleanerMetrics* New() const { return New(NULL); }

  LogMetrics_CleanerMetrics* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogMetrics_CleanerMetrics& from);
  void MergeFrom(const LogMetrics_CleanerMetrics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogMetrics_CleanerMetrics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LogMetrics_CleanerMetrics_InMemoryMetrics InMemoryMetrics;
  typedef LogMetrics_CleanerMetrics_OnDiskMetrics OnDiskMetrics;
  typedef LogMetrics_CleanerMetrics_ThreadMetrics ThreadMetrics;

  // accessors -------------------------------------------------------

  // required fixed32 poll_usec = 1;
  bool has_poll_usec() const;
  void clear_poll_usec();
  static const int kPollUsecFieldNumber = 1;
  ::google::protobuf::uint32 poll_usec() const;
  void set_poll_usec(::google::protobuf::uint32 value);

  // required fixed32 max_cleanable_memory_utilization = 2;
  bool has_max_cleanable_memory_utilization() const;
  void clear_max_cleanable_memory_utilization();
  static const int kMaxCleanableMemoryUtilizationFieldNumber = 2;
  ::google::protobuf::uint32 max_cleanable_memory_utilization() const;
  void set_max_cleanable_memory_utilization(::google::protobuf::uint32 value);

  // required fixed32 live_segments_per_disk_pass = 3;
  bool has_live_segments_per_disk_pass() const;
  void clear_live_segments_per_disk_pass();
  static const int kLiveSegmentsPerDiskPassFieldNumber = 3;
  ::google::protobuf::uint32 live_segments_per_disk_pass() const;
  void set_live_segments_per_disk_pass(::google::protobuf::uint32 value);

  // required fixed32 survivor_segments_to_reserve = 4;
  bool has_survivor_segments_to_reserve() const;
  void clear_survivor_segments_to_reserve();
  static const int kSurvivorSegmentsToReserveFieldNumber = 4;
  ::google::protobuf::uint32 survivor_segments_to_reserve() const;
  void set_survivor_segments_to_reserve(::google::protobuf::uint32 value);

  // required fixed32 min_memory_utilization = 5;
  bool has_min_memory_utilization() const;
  void clear_min_memory_utilization();
  static const int kMinMemoryUtilizationFieldNumber = 5;
  ::google::protobuf::uint32 min_memory_utilization() const;
  void set_min_memory_utilization(::google::protobuf::uint32 value);

  // required fixed32 min_disk_utilization = 6;
  bool has_min_disk_utilization() const;
  void clear_min_disk_utilization();
  static const int kMinDiskUtilizationFieldNumber = 6;
  ::google::protobuf::uint32 min_disk_utilization() const;
  void set_min_disk_utilization(::google::protobuf::uint32 value);

  // required fixed64 do_work_ticks = 7;
  bool has_do_work_ticks() const;
  void clear_do_work_ticks();
  static const int kDoWorkTicksFieldNumber = 7;
  ::google::protobuf::uint64 do_work_ticks() const;
  void set_do_work_ticks(::google::protobuf::uint64 value);

  // required fixed64 do_work_sleep_ticks = 8;
  bool has_do_work_sleep_ticks() const;
  void clear_do_work_sleep_ticks();
  static const int kDoWorkSleepTicksFieldNumber = 8;
  ::google::protobuf::uint64 do_work_sleep_ticks() const;
  void set_do_work_sleep_ticks(::google::protobuf::uint64 value);

  // required .RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics in_memory_metrics = 9;
  bool has_in_memory_metrics() const;
  void clear_in_memory_metrics();
  static const int kInMemoryMetricsFieldNumber = 9;
  const ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_InMemoryMetrics& in_memory_metrics() const;
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_InMemoryMetrics* mutable_in_memory_metrics();
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_InMemoryMetrics* release_in_memory_metrics();
  void set_allocated_in_memory_metrics(::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_InMemoryMetrics* in_memory_metrics);

  // required .RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics on_disk_metrics = 10;
  bool has_on_disk_metrics() const;
  void clear_on_disk_metrics();
  static const int kOnDiskMetricsFieldNumber = 10;
  const ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_OnDiskMetrics& on_disk_metrics() const;
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_OnDiskMetrics* mutable_on_disk_metrics();
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_OnDiskMetrics* release_on_disk_metrics();
  void set_allocated_on_disk_metrics(::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_OnDiskMetrics* on_disk_metrics);

  // required .RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.ThreadMetrics thread_metrics = 11;
  bool has_thread_metrics() const;
  void clear_thread_metrics();
  static const int kThreadMetricsFieldNumber = 11;
  const ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_ThreadMetrics& thread_metrics() const;
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_ThreadMetrics* mutable_thread_metrics();
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_ThreadMetrics* release_thread_metrics();
  void set_allocated_thread_metrics(::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_ThreadMetrics* thread_metrics);

  // @@protoc_insertion_point(class_scope:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics)
 private:
  inline void set_has_poll_usec();
  inline void clear_has_poll_usec();
  inline void set_has_max_cleanable_memory_utilization();
  inline void clear_has_max_cleanable_memory_utilization();
  inline void set_has_live_segments_per_disk_pass();
  inline void clear_has_live_segments_per_disk_pass();
  inline void set_has_survivor_segments_to_reserve();
  inline void clear_has_survivor_segments_to_reserve();
  inline void set_has_min_memory_utilization();
  inline void clear_has_min_memory_utilization();
  inline void set_has_min_disk_utilization();
  inline void clear_has_min_disk_utilization();
  inline void set_has_do_work_ticks();
  inline void clear_has_do_work_ticks();
  inline void set_has_do_work_sleep_ticks();
  inline void clear_has_do_work_sleep_ticks();
  inline void set_has_in_memory_metrics();
  inline void clear_has_in_memory_metrics();
  inline void set_has_on_disk_metrics();
  inline void clear_has_on_disk_metrics();
  inline void set_has_thread_metrics();
  inline void clear_has_thread_metrics();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 poll_usec_;
  ::google::protobuf::uint32 max_cleanable_memory_utilization_;
  ::google::protobuf::uint32 live_segments_per_disk_pass_;
  ::google::protobuf::uint32 survivor_segments_to_reserve_;
  ::google::protobuf::uint32 min_memory_utilization_;
  ::google::protobuf::uint32 min_disk_utilization_;
  ::google::protobuf::uint64 do_work_ticks_;
  ::google::protobuf::uint64 do_work_sleep_ticks_;
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_InMemoryMetrics* in_memory_metrics_;
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_OnDiskMetrics* on_disk_metrics_;
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_ThreadMetrics* thread_metrics_;
  friend void  protobuf_AddDesc_LogMetrics_2eproto();
  friend void protobuf_AssignDesc_LogMetrics_2eproto();
  friend void protobuf_ShutdownFile_LogMetrics_2eproto();

  void InitAsDefaultInstance();
  static LogMetrics_CleanerMetrics* default_instance_;
};
// -------------------------------------------------------------------

class LogMetrics_SegletMetrics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics) */ {
 public:
  LogMetrics_SegletMetrics();
  virtual ~LogMetrics_SegletMetrics();

  LogMetrics_SegletMetrics(const LogMetrics_SegletMetrics& from);

  inline LogMetrics_SegletMetrics& operator=(const LogMetrics_SegletMetrics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogMetrics_SegletMetrics& default_instance();

  void Swap(LogMetrics_SegletMetrics* other);

  // implements Message ----------------------------------------------

  inline LogMetrics_SegletMetrics* New() const { return New(NULL); }

  LogMetrics_SegletMetrics* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogMetrics_SegletMetrics& from);
  void MergeFrom(const LogMetrics_SegletMetrics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogMetrics_SegletMetrics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 total_seglets = 1;
  bool has_total_seglets() const;
  void clear_total_seglets();
  static const int kTotalSegletsFieldNumber = 1;
  ::google::protobuf::uint64 total_seglets() const;
  void set_total_seglets(::google::protobuf::uint64 value);

  // required fixed64 total_usable_seglets = 2;
  bool has_total_usable_seglets() const;
  void clear_total_usable_seglets();
  static const int kTotalUsableSegletsFieldNumber = 2;
  ::google::protobuf::uint64 total_usable_seglets() const;
  void set_total_usable_seglets(::google::protobuf::uint64 value);

  // required fixed64 emergency_head_pool_reserve = 3;
  bool has_emergency_head_pool_reserve() const;
  void clear_emergency_head_pool_reserve();
  static const int kEmergencyHeadPoolReserveFieldNumber = 3;
  ::google::protobuf::uint64 emergency_head_pool_reserve() const;
  void set_emergency_head_pool_reserve(::google::protobuf::uint64 value);

  // required fixed64 emergency_head_pool_count = 4;
  bool has_emergency_head_pool_count() const;
  void clear_emergency_head_pool_count();
  static const int kEmergencyHeadPoolCountFieldNumber = 4;
  ::google::protobuf::uint64 emergency_head_pool_count() const;
  void set_emergency_head_pool_count(::google::protobuf::uint64 value);

  // required fixed64 cleaner_pool_reserve = 5;
  bool has_cleaner_pool_reserve() const;
  void clear_cleaner_pool_reserve();
  static const int kCleanerPoolReserveFieldNumber = 5;
  ::google::protobuf::uint64 cleaner_pool_reserve() const;
  void set_cleaner_pool_reserve(::google::protobuf::uint64 value);

  // required fixed64 cleaner_pool_count = 6;
  bool has_cleaner_pool_count() const;
  void clear_cleaner_pool_count();
  static const int kCleanerPoolCountFieldNumber = 6;
  ::google::protobuf::uint64 cleaner_pool_count() const;
  void set_cleaner_pool_count(::google::protobuf::uint64 value);

  // required fixed64 default_pool_count = 7;
  bool has_default_pool_count() const;
  void clear_default_pool_count();
  static const int kDefaultPoolCountFieldNumber = 7;
  ::google::protobuf::uint64 default_pool_count() const;
  void set_default_pool_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics)
 private:
  inline void set_has_total_seglets();
  inline void clear_has_total_seglets();
  inline void set_has_total_usable_seglets();
  inline void clear_has_total_usable_seglets();
  inline void set_has_emergency_head_pool_reserve();
  inline void clear_has_emergency_head_pool_reserve();
  inline void set_has_emergency_head_pool_count();
  inline void clear_has_emergency_head_pool_count();
  inline void set_has_cleaner_pool_reserve();
  inline void clear_has_cleaner_pool_reserve();
  inline void set_has_cleaner_pool_count();
  inline void clear_has_cleaner_pool_count();
  inline void set_has_default_pool_count();
  inline void clear_has_default_pool_count();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 total_seglets_;
  ::google::protobuf::uint64 total_usable_seglets_;
  ::google::protobuf::uint64 emergency_head_pool_reserve_;
  ::google::protobuf::uint64 emergency_head_pool_count_;
  ::google::protobuf::uint64 cleaner_pool_reserve_;
  ::google::protobuf::uint64 cleaner_pool_count_;
  ::google::protobuf::uint64 default_pool_count_;
  friend void  protobuf_AddDesc_LogMetrics_2eproto();
  friend void protobuf_AssignDesc_LogMetrics_2eproto();
  friend void protobuf_ShutdownFile_LogMetrics_2eproto();

  void InitAsDefaultInstance();
  static LogMetrics_SegletMetrics* default_instance_;
};
// -------------------------------------------------------------------

class LogMetrics_SegmentMetrics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics) */ {
 public:
  LogMetrics_SegmentMetrics();
  virtual ~LogMetrics_SegmentMetrics();

  LogMetrics_SegmentMetrics(const LogMetrics_SegmentMetrics& from);

  inline LogMetrics_SegmentMetrics& operator=(const LogMetrics_SegmentMetrics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogMetrics_SegmentMetrics& default_instance();

  void Swap(LogMetrics_SegmentMetrics* other);

  // implements Message ----------------------------------------------

  inline LogMetrics_SegmentMetrics* New() const { return New(NULL); }

  LogMetrics_SegmentMetrics* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogMetrics_SegmentMetrics& from);
  void MergeFrom(const LogMetrics_SegmentMetrics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogMetrics_SegmentMetrics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .RAMCloud.ProtoBuf.Histogram segments_on_disk_histogram = 1;
  bool has_segments_on_disk_histogram() const;
  void clear_segments_on_disk_histogram();
  static const int kSegmentsOnDiskHistogramFieldNumber = 1;
  const ::RAMCloud::ProtoBuf::Histogram& segments_on_disk_histogram() const;
  ::RAMCloud::ProtoBuf::Histogram* mutable_segments_on_disk_histogram();
  ::RAMCloud::ProtoBuf::Histogram* release_segments_on_disk_histogram();
  void set_allocated_segments_on_disk_histogram(::RAMCloud::ProtoBuf::Histogram* segments_on_disk_histogram);

  // required fixed64 current_segments_on_disk = 2;
  bool has_current_segments_on_disk() const;
  void clear_current_segments_on_disk();
  static const int kCurrentSegmentsOnDiskFieldNumber = 2;
  ::google::protobuf::uint64 current_segments_on_disk() const;
  void set_current_segments_on_disk(::google::protobuf::uint64 value);

  // repeated fixed64 total_entry_counts = 3;
  int total_entry_counts_size() const;
  void clear_total_entry_counts();
  static const int kTotalEntryCountsFieldNumber = 3;
  ::google::protobuf::uint64 total_entry_counts(int index) const;
  void set_total_entry_counts(int index, ::google::protobuf::uint64 value);
  void add_total_entry_counts(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      total_entry_counts() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_total_entry_counts();

  // repeated fixed64 total_entry_lengths = 4;
  int total_entry_lengths_size() const;
  void clear_total_entry_lengths();
  static const int kTotalEntryLengthsFieldNumber = 4;
  ::google::protobuf::uint64 total_entry_lengths(int index) const;
  void set_total_entry_lengths(int index, ::google::protobuf::uint64 value);
  void add_total_entry_lengths(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      total_entry_lengths() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_total_entry_lengths();

  // @@protoc_insertion_point(class_scope:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics)
 private:
  inline void set_has_segments_on_disk_histogram();
  inline void clear_has_segments_on_disk_histogram();
  inline void set_has_current_segments_on_disk();
  inline void clear_has_current_segments_on_disk();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::RAMCloud::ProtoBuf::Histogram* segments_on_disk_histogram_;
  ::google::protobuf::uint64 current_segments_on_disk_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > total_entry_counts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > total_entry_lengths_;
  friend void  protobuf_AddDesc_LogMetrics_2eproto();
  friend void protobuf_AssignDesc_LogMetrics_2eproto();
  friend void protobuf_ShutdownFile_LogMetrics_2eproto();

  void InitAsDefaultInstance();
  static LogMetrics_SegmentMetrics* default_instance_;
};
// -------------------------------------------------------------------

class LogMetrics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RAMCloud.ProtoBuf.LogMetrics) */ {
 public:
  LogMetrics();
  virtual ~LogMetrics();

  LogMetrics(const LogMetrics& from);

  inline LogMetrics& operator=(const LogMetrics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogMetrics& default_instance();

  void Swap(LogMetrics* other);

  // implements Message ----------------------------------------------

  inline LogMetrics* New() const { return New(NULL); }

  LogMetrics* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogMetrics& from);
  void MergeFrom(const LogMetrics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogMetrics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LogMetrics_CleanerMetrics CleanerMetrics;
  typedef LogMetrics_SegletMetrics SegletMetrics;
  typedef LogMetrics_SegmentMetrics SegmentMetrics;

  // accessors -------------------------------------------------------

  // required double ticks_per_second = 1;
  bool has_ticks_per_second() const;
  void clear_ticks_per_second();
  static const int kTicksPerSecondFieldNumber = 1;
  double ticks_per_second() const;
  void set_ticks_per_second(double value);

  // required fixed64 total_sync_calls = 2;
  bool has_total_sync_calls() const;
  void clear_total_sync_calls();
  static const int kTotalSyncCallsFieldNumber = 2;
  ::google::protobuf::uint64 total_sync_calls() const;
  void set_total_sync_calls(::google::protobuf::uint64 value);

  // required fixed64 total_sync_ticks = 3;
  bool has_total_sync_ticks() const;
  void clear_total_sync_ticks();
  static const int kTotalSyncTicksFieldNumber = 3;
  ::google::protobuf::uint64 total_sync_ticks() const;
  void set_total_sync_ticks(::google::protobuf::uint64 value);

  // required fixed64 total_append_calls = 4;
  bool has_total_append_calls() const;
  void clear_total_append_calls();
  static const int kTotalAppendCallsFieldNumber = 4;
  ::google::protobuf::uint64 total_append_calls() const;
  void set_total_append_calls(::google::protobuf::uint64 value);

  // required fixed64 total_append_ticks = 5;
  bool has_total_append_ticks() const;
  void clear_total_append_ticks();
  static const int kTotalAppendTicksFieldNumber = 5;
  ::google::protobuf::uint64 total_append_ticks() const;
  void set_total_append_ticks(::google::protobuf::uint64 value);

  // required fixed64 total_no_space_ticks = 6;
  bool has_total_no_space_ticks() const;
  void clear_total_no_space_ticks();
  static const int kTotalNoSpaceTicksFieldNumber = 6;
  ::google::protobuf::uint64 total_no_space_ticks() const;
  void set_total_no_space_ticks(::google::protobuf::uint64 value);

  // required fixed64 total_bytes_appended = 7;
  bool has_total_bytes_appended() const;
  void clear_total_bytes_appended();
  static const int kTotalBytesAppendedFieldNumber = 7;
  ::google::protobuf::uint64 total_bytes_appended() const;
  void set_total_bytes_appended(::google::protobuf::uint64 value);

  // required fixed64 total_metadata_bytes_appended = 8;
  bool has_total_metadata_bytes_appended() const;
  void clear_total_metadata_bytes_appended();
  static const int kTotalMetadataBytesAppendedFieldNumber = 8;
  ::google::protobuf::uint64 total_metadata_bytes_appended() const;
  void set_total_metadata_bytes_appended(::google::protobuf::uint64 value);

  // required .RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics cleaner_metrics = 9;
  bool has_cleaner_metrics() const;
  void clear_cleaner_metrics();
  static const int kCleanerMetricsFieldNumber = 9;
  const ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics& cleaner_metrics() const;
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics* mutable_cleaner_metrics();
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics* release_cleaner_metrics();
  void set_allocated_cleaner_metrics(::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics* cleaner_metrics);

  // required .RAMCloud.ProtoBuf.LogMetrics.SegletMetrics seglet_metrics = 10;
  bool has_seglet_metrics() const;
  void clear_seglet_metrics();
  static const int kSegletMetricsFieldNumber = 10;
  const ::RAMCloud::ProtoBuf::LogMetrics_SegletMetrics& seglet_metrics() const;
  ::RAMCloud::ProtoBuf::LogMetrics_SegletMetrics* mutable_seglet_metrics();
  ::RAMCloud::ProtoBuf::LogMetrics_SegletMetrics* release_seglet_metrics();
  void set_allocated_seglet_metrics(::RAMCloud::ProtoBuf::LogMetrics_SegletMetrics* seglet_metrics);

  // required .RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics segment_metrics = 11;
  bool has_segment_metrics() const;
  void clear_segment_metrics();
  static const int kSegmentMetricsFieldNumber = 11;
  const ::RAMCloud::ProtoBuf::LogMetrics_SegmentMetrics& segment_metrics() const;
  ::RAMCloud::ProtoBuf::LogMetrics_SegmentMetrics* mutable_segment_metrics();
  ::RAMCloud::ProtoBuf::LogMetrics_SegmentMetrics* release_segment_metrics();
  void set_allocated_segment_metrics(::RAMCloud::ProtoBuf::LogMetrics_SegmentMetrics* segment_metrics);

  // @@protoc_insertion_point(class_scope:RAMCloud.ProtoBuf.LogMetrics)
 private:
  inline void set_has_ticks_per_second();
  inline void clear_has_ticks_per_second();
  inline void set_has_total_sync_calls();
  inline void clear_has_total_sync_calls();
  inline void set_has_total_sync_ticks();
  inline void clear_has_total_sync_ticks();
  inline void set_has_total_append_calls();
  inline void clear_has_total_append_calls();
  inline void set_has_total_append_ticks();
  inline void clear_has_total_append_ticks();
  inline void set_has_total_no_space_ticks();
  inline void clear_has_total_no_space_ticks();
  inline void set_has_total_bytes_appended();
  inline void clear_has_total_bytes_appended();
  inline void set_has_total_metadata_bytes_appended();
  inline void clear_has_total_metadata_bytes_appended();
  inline void set_has_cleaner_metrics();
  inline void clear_has_cleaner_metrics();
  inline void set_has_seglet_metrics();
  inline void clear_has_seglet_metrics();
  inline void set_has_segment_metrics();
  inline void clear_has_segment_metrics();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double ticks_per_second_;
  ::google::protobuf::uint64 total_sync_calls_;
  ::google::protobuf::uint64 total_sync_ticks_;
  ::google::protobuf::uint64 total_append_calls_;
  ::google::protobuf::uint64 total_append_ticks_;
  ::google::protobuf::uint64 total_no_space_ticks_;
  ::google::protobuf::uint64 total_bytes_appended_;
  ::google::protobuf::uint64 total_metadata_bytes_appended_;
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics* cleaner_metrics_;
  ::RAMCloud::ProtoBuf::LogMetrics_SegletMetrics* seglet_metrics_;
  ::RAMCloud::ProtoBuf::LogMetrics_SegmentMetrics* segment_metrics_;
  friend void  protobuf_AddDesc_LogMetrics_2eproto();
  friend void protobuf_AssignDesc_LogMetrics_2eproto();
  friend void protobuf_ShutdownFile_LogMetrics_2eproto();

  void InitAsDefaultInstance();
  static LogMetrics* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LogMetrics_CleanerMetrics_InMemoryMetrics

// required fixed64 total_relocation_callbacks = 1;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_total_relocation_callbacks() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_total_relocation_callbacks() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_total_relocation_callbacks() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_total_relocation_callbacks() {
  total_relocation_callbacks_ = GOOGLE_ULONGLONG(0);
  clear_has_total_relocation_callbacks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::total_relocation_callbacks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_relocation_callbacks)
  return total_relocation_callbacks_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_total_relocation_callbacks(::google::protobuf::uint64 value) {
  set_has_total_relocation_callbacks();
  total_relocation_callbacks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_relocation_callbacks)
}

// required fixed64 total_relocation_appends = 2;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_total_relocation_appends() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_total_relocation_appends() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_total_relocation_appends() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_total_relocation_appends() {
  total_relocation_appends_ = GOOGLE_ULONGLONG(0);
  clear_has_total_relocation_appends();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::total_relocation_appends() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_relocation_appends)
  return total_relocation_appends_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_total_relocation_appends(::google::protobuf::uint64 value) {
  set_has_total_relocation_appends();
  total_relocation_appends_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_relocation_appends)
}

// required fixed64 total_bytes_freed = 3;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_total_bytes_freed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_total_bytes_freed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_total_bytes_freed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_total_bytes_freed() {
  total_bytes_freed_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_freed();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::total_bytes_freed() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_bytes_freed)
  return total_bytes_freed_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_total_bytes_freed(::google::protobuf::uint64 value) {
  set_has_total_bytes_freed();
  total_bytes_freed_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_bytes_freed)
}

// required fixed64 total_bytes_in_compacted_segments = 4;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_total_bytes_in_compacted_segments() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_total_bytes_in_compacted_segments() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_total_bytes_in_compacted_segments() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_total_bytes_in_compacted_segments() {
  total_bytes_in_compacted_segments_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_in_compacted_segments();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::total_bytes_in_compacted_segments() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_bytes_in_compacted_segments)
  return total_bytes_in_compacted_segments_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_total_bytes_in_compacted_segments(::google::protobuf::uint64 value) {
  set_has_total_bytes_in_compacted_segments();
  total_bytes_in_compacted_segments_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_bytes_in_compacted_segments)
}

// required fixed64 total_bytes_appended_to_survivors = 5;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_total_bytes_appended_to_survivors() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_total_bytes_appended_to_survivors() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_total_bytes_appended_to_survivors() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_total_bytes_appended_to_survivors() {
  total_bytes_appended_to_survivors_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_appended_to_survivors();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::total_bytes_appended_to_survivors() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_bytes_appended_to_survivors)
  return total_bytes_appended_to_survivors_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_total_bytes_appended_to_survivors(::google::protobuf::uint64 value) {
  set_has_total_bytes_appended_to_survivors();
  total_bytes_appended_to_survivors_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_bytes_appended_to_survivors)
}

// required fixed64 total_segments_compacted = 6;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_total_segments_compacted() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_total_segments_compacted() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_total_segments_compacted() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_total_segments_compacted() {
  total_segments_compacted_ = GOOGLE_ULONGLONG(0);
  clear_has_total_segments_compacted();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::total_segments_compacted() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_segments_compacted)
  return total_segments_compacted_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_total_segments_compacted(::google::protobuf::uint64 value) {
  set_has_total_segments_compacted();
  total_segments_compacted_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_segments_compacted)
}

// required fixed64 total_empty_segments_compacted = 7;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_total_empty_segments_compacted() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_total_empty_segments_compacted() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_total_empty_segments_compacted() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_total_empty_segments_compacted() {
  total_empty_segments_compacted_ = GOOGLE_ULONGLONG(0);
  clear_has_total_empty_segments_compacted();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::total_empty_segments_compacted() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_empty_segments_compacted)
  return total_empty_segments_compacted_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_total_empty_segments_compacted(::google::protobuf::uint64 value) {
  set_has_total_empty_segments_compacted();
  total_empty_segments_compacted_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_empty_segments_compacted)
}

// repeated fixed64 total_entries_scanned = 8;
inline int LogMetrics_CleanerMetrics_InMemoryMetrics::total_entries_scanned_size() const {
  return total_entries_scanned_.size();
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_total_entries_scanned() {
  total_entries_scanned_.Clear();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::total_entries_scanned(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_entries_scanned)
  return total_entries_scanned_.Get(index);
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_total_entries_scanned(int index, ::google::protobuf::uint64 value) {
  total_entries_scanned_.Set(index, value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_entries_scanned)
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::add_total_entries_scanned(::google::protobuf::uint64 value) {
  total_entries_scanned_.Add(value);
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_entries_scanned)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LogMetrics_CleanerMetrics_InMemoryMetrics::total_entries_scanned() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_entries_scanned)
  return total_entries_scanned_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LogMetrics_CleanerMetrics_InMemoryMetrics::mutable_total_entries_scanned() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_entries_scanned)
  return &total_entries_scanned_;
}

// repeated fixed64 total_live_entries_scanned = 9;
inline int LogMetrics_CleanerMetrics_InMemoryMetrics::total_live_entries_scanned_size() const {
  return total_live_entries_scanned_.size();
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_total_live_entries_scanned() {
  total_live_entries_scanned_.Clear();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::total_live_entries_scanned(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_live_entries_scanned)
  return total_live_entries_scanned_.Get(index);
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_total_live_entries_scanned(int index, ::google::protobuf::uint64 value) {
  total_live_entries_scanned_.Set(index, value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_live_entries_scanned)
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::add_total_live_entries_scanned(::google::protobuf::uint64 value) {
  total_live_entries_scanned_.Add(value);
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_live_entries_scanned)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LogMetrics_CleanerMetrics_InMemoryMetrics::total_live_entries_scanned() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_live_entries_scanned)
  return total_live_entries_scanned_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LogMetrics_CleanerMetrics_InMemoryMetrics::mutable_total_live_entries_scanned() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_live_entries_scanned)
  return &total_live_entries_scanned_;
}

// repeated fixed64 total_scanned_entry_lengths = 10;
inline int LogMetrics_CleanerMetrics_InMemoryMetrics::total_scanned_entry_lengths_size() const {
  return total_scanned_entry_lengths_.size();
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_total_scanned_entry_lengths() {
  total_scanned_entry_lengths_.Clear();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::total_scanned_entry_lengths(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_scanned_entry_lengths)
  return total_scanned_entry_lengths_.Get(index);
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_total_scanned_entry_lengths(int index, ::google::protobuf::uint64 value) {
  total_scanned_entry_lengths_.Set(index, value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_scanned_entry_lengths)
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::add_total_scanned_entry_lengths(::google::protobuf::uint64 value) {
  total_scanned_entry_lengths_.Add(value);
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_scanned_entry_lengths)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LogMetrics_CleanerMetrics_InMemoryMetrics::total_scanned_entry_lengths() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_scanned_entry_lengths)
  return total_scanned_entry_lengths_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LogMetrics_CleanerMetrics_InMemoryMetrics::mutable_total_scanned_entry_lengths() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_scanned_entry_lengths)
  return &total_scanned_entry_lengths_;
}

// repeated fixed64 total_live_scanned_entry_lengths = 11;
inline int LogMetrics_CleanerMetrics_InMemoryMetrics::total_live_scanned_entry_lengths_size() const {
  return total_live_scanned_entry_lengths_.size();
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_total_live_scanned_entry_lengths() {
  total_live_scanned_entry_lengths_.Clear();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::total_live_scanned_entry_lengths(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_live_scanned_entry_lengths)
  return total_live_scanned_entry_lengths_.Get(index);
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_total_live_scanned_entry_lengths(int index, ::google::protobuf::uint64 value) {
  total_live_scanned_entry_lengths_.Set(index, value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_live_scanned_entry_lengths)
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::add_total_live_scanned_entry_lengths(::google::protobuf::uint64 value) {
  total_live_scanned_entry_lengths_.Add(value);
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_live_scanned_entry_lengths)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LogMetrics_CleanerMetrics_InMemoryMetrics::total_live_scanned_entry_lengths() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_live_scanned_entry_lengths)
  return total_live_scanned_entry_lengths_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LogMetrics_CleanerMetrics_InMemoryMetrics::mutable_total_live_scanned_entry_lengths() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_live_scanned_entry_lengths)
  return &total_live_scanned_entry_lengths_;
}

// required fixed64 total_ticks = 12;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_total_ticks() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_total_ticks() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_total_ticks() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_total_ticks() {
  total_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_total_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::total_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_ticks)
  return total_ticks_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_total_ticks(::google::protobuf::uint64 value) {
  set_has_total_ticks();
  total_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.total_ticks)
}

// required fixed64 get_segment_to_compact_ticks = 13;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_get_segment_to_compact_ticks() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_get_segment_to_compact_ticks() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_get_segment_to_compact_ticks() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_get_segment_to_compact_ticks() {
  get_segment_to_compact_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_get_segment_to_compact_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::get_segment_to_compact_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.get_segment_to_compact_ticks)
  return get_segment_to_compact_ticks_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_get_segment_to_compact_ticks(::google::protobuf::uint64 value) {
  set_has_get_segment_to_compact_ticks();
  get_segment_to_compact_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.get_segment_to_compact_ticks)
}

// required fixed64 wait_for_free_survivor_ticks = 14;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_wait_for_free_survivor_ticks() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_wait_for_free_survivor_ticks() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_wait_for_free_survivor_ticks() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_wait_for_free_survivor_ticks() {
  wait_for_free_survivor_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_wait_for_free_survivor_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::wait_for_free_survivor_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.wait_for_free_survivor_ticks)
  return wait_for_free_survivor_ticks_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_wait_for_free_survivor_ticks(::google::protobuf::uint64 value) {
  set_has_wait_for_free_survivor_ticks();
  wait_for_free_survivor_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.wait_for_free_survivor_ticks)
}

// required fixed64 relocation_callback_ticks = 15;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_relocation_callback_ticks() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_relocation_callback_ticks() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_relocation_callback_ticks() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_relocation_callback_ticks() {
  relocation_callback_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_relocation_callback_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::relocation_callback_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.relocation_callback_ticks)
  return relocation_callback_ticks_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_relocation_callback_ticks(::google::protobuf::uint64 value) {
  set_has_relocation_callback_ticks();
  relocation_callback_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.relocation_callback_ticks)
}

// required fixed64 relocation_append_ticks = 16;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_relocation_append_ticks() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_relocation_append_ticks() {
  _has_bits_[0] |= 0x00008000u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_relocation_append_ticks() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_relocation_append_ticks() {
  relocation_append_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_relocation_append_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::relocation_append_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.relocation_append_ticks)
  return relocation_append_ticks_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_relocation_append_ticks(::google::protobuf::uint64 value) {
  set_has_relocation_append_ticks();
  relocation_append_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.relocation_append_ticks)
}

// required fixed64 compaction_complete_ticks = 17;
inline bool LogMetrics_CleanerMetrics_InMemoryMetrics::has_compaction_complete_ticks() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_has_compaction_complete_ticks() {
  _has_bits_[0] |= 0x00010000u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_has_compaction_complete_ticks() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::clear_compaction_complete_ticks() {
  compaction_complete_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_compaction_complete_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_InMemoryMetrics::compaction_complete_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.compaction_complete_ticks)
  return compaction_complete_ticks_;
}
inline void LogMetrics_CleanerMetrics_InMemoryMetrics::set_compaction_complete_ticks(::google::protobuf::uint64 value) {
  set_has_compaction_complete_ticks();
  compaction_complete_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics.compaction_complete_ticks)
}

// -------------------------------------------------------------------

// LogMetrics_CleanerMetrics_OnDiskMetrics

// required fixed64 total_bytes_appended_to_survivors = 1;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_bytes_appended_to_survivors() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_bytes_appended_to_survivors() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_bytes_appended_to_survivors() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_bytes_appended_to_survivors() {
  total_bytes_appended_to_survivors_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_appended_to_survivors();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_bytes_appended_to_survivors() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_bytes_appended_to_survivors)
  return total_bytes_appended_to_survivors_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_bytes_appended_to_survivors(::google::protobuf::uint64 value) {
  set_has_total_bytes_appended_to_survivors();
  total_bytes_appended_to_survivors_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_bytes_appended_to_survivors)
}

// required fixed64 total_memory_bytes_freed = 2;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_memory_bytes_freed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_memory_bytes_freed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_memory_bytes_freed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_memory_bytes_freed() {
  total_memory_bytes_freed_ = GOOGLE_ULONGLONG(0);
  clear_has_total_memory_bytes_freed();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_memory_bytes_freed() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_memory_bytes_freed)
  return total_memory_bytes_freed_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_memory_bytes_freed(::google::protobuf::uint64 value) {
  set_has_total_memory_bytes_freed();
  total_memory_bytes_freed_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_memory_bytes_freed)
}

// required fixed64 total_disk_bytes_freed = 3;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_disk_bytes_freed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_disk_bytes_freed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_disk_bytes_freed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_disk_bytes_freed() {
  total_disk_bytes_freed_ = GOOGLE_ULONGLONG(0);
  clear_has_total_disk_bytes_freed();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_disk_bytes_freed() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_disk_bytes_freed)
  return total_disk_bytes_freed_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_disk_bytes_freed(::google::protobuf::uint64 value) {
  set_has_total_disk_bytes_freed();
  total_disk_bytes_freed_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_disk_bytes_freed)
}

// required fixed64 total_memory_bytes_in_cleaned_segments = 4;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_memory_bytes_in_cleaned_segments() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_memory_bytes_in_cleaned_segments() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_memory_bytes_in_cleaned_segments() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_memory_bytes_in_cleaned_segments() {
  total_memory_bytes_in_cleaned_segments_ = GOOGLE_ULONGLONG(0);
  clear_has_total_memory_bytes_in_cleaned_segments();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_memory_bytes_in_cleaned_segments() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_memory_bytes_in_cleaned_segments)
  return total_memory_bytes_in_cleaned_segments_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_memory_bytes_in_cleaned_segments(::google::protobuf::uint64 value) {
  set_has_total_memory_bytes_in_cleaned_segments();
  total_memory_bytes_in_cleaned_segments_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_memory_bytes_in_cleaned_segments)
}

// required fixed64 total_disk_bytes_in_cleaned_segments = 5;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_disk_bytes_in_cleaned_segments() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_disk_bytes_in_cleaned_segments() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_disk_bytes_in_cleaned_segments() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_disk_bytes_in_cleaned_segments() {
  total_disk_bytes_in_cleaned_segments_ = GOOGLE_ULONGLONG(0);
  clear_has_total_disk_bytes_in_cleaned_segments();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_disk_bytes_in_cleaned_segments() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_disk_bytes_in_cleaned_segments)
  return total_disk_bytes_in_cleaned_segments_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_disk_bytes_in_cleaned_segments(::google::protobuf::uint64 value) {
  set_has_total_disk_bytes_in_cleaned_segments();
  total_disk_bytes_in_cleaned_segments_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_disk_bytes_in_cleaned_segments)
}

// required fixed64 total_relocation_callbacks = 6;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_relocation_callbacks() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_relocation_callbacks() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_relocation_callbacks() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_relocation_callbacks() {
  total_relocation_callbacks_ = GOOGLE_ULONGLONG(0);
  clear_has_total_relocation_callbacks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_relocation_callbacks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_relocation_callbacks)
  return total_relocation_callbacks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_relocation_callbacks(::google::protobuf::uint64 value) {
  set_has_total_relocation_callbacks();
  total_relocation_callbacks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_relocation_callbacks)
}

// required fixed64 total_relocation_appends = 7;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_relocation_appends() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_relocation_appends() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_relocation_appends() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_relocation_appends() {
  total_relocation_appends_ = GOOGLE_ULONGLONG(0);
  clear_has_total_relocation_appends();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_relocation_appends() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_relocation_appends)
  return total_relocation_appends_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_relocation_appends(::google::protobuf::uint64 value) {
  set_has_total_relocation_appends();
  total_relocation_appends_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_relocation_appends)
}

// required fixed64 total_segments_cleaned = 8;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_segments_cleaned() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_segments_cleaned() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_segments_cleaned() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_segments_cleaned() {
  total_segments_cleaned_ = GOOGLE_ULONGLONG(0);
  clear_has_total_segments_cleaned();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_segments_cleaned() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_segments_cleaned)
  return total_segments_cleaned_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_segments_cleaned(::google::protobuf::uint64 value) {
  set_has_total_segments_cleaned();
  total_segments_cleaned_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_segments_cleaned)
}

// required fixed64 total_empty_segments_cleaned = 9;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_empty_segments_cleaned() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_empty_segments_cleaned() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_empty_segments_cleaned() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_empty_segments_cleaned() {
  total_empty_segments_cleaned_ = GOOGLE_ULONGLONG(0);
  clear_has_total_empty_segments_cleaned();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_empty_segments_cleaned() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_empty_segments_cleaned)
  return total_empty_segments_cleaned_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_empty_segments_cleaned(::google::protobuf::uint64 value) {
  set_has_total_empty_segments_cleaned();
  total_empty_segments_cleaned_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_empty_segments_cleaned)
}

// required fixed64 total_survivors_created = 10;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_survivors_created() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_survivors_created() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_survivors_created() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_survivors_created() {
  total_survivors_created_ = GOOGLE_ULONGLONG(0);
  clear_has_total_survivors_created();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_survivors_created() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_survivors_created)
  return total_survivors_created_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_survivors_created(::google::protobuf::uint64 value) {
  set_has_total_survivors_created();
  total_survivors_created_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_survivors_created)
}

// required fixed64 total_runs = 11;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_runs() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_runs() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_runs() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_runs() {
  total_runs_ = GOOGLE_ULONGLONG(0);
  clear_has_total_runs();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_runs() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_runs)
  return total_runs_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_runs(::google::protobuf::uint64 value) {
  set_has_total_runs();
  total_runs_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_runs)
}

// required fixed64 total_low_disk_space_runs = 12;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_low_disk_space_runs() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_low_disk_space_runs() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_low_disk_space_runs() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_low_disk_space_runs() {
  total_low_disk_space_runs_ = GOOGLE_ULONGLONG(0);
  clear_has_total_low_disk_space_runs();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_low_disk_space_runs() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_low_disk_space_runs)
  return total_low_disk_space_runs_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_low_disk_space_runs(::google::protobuf::uint64 value) {
  set_has_total_low_disk_space_runs();
  total_low_disk_space_runs_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_low_disk_space_runs)
}

// required fixed64 memory_utilization_at_start_sum = 13;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_memory_utilization_at_start_sum() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_memory_utilization_at_start_sum() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_memory_utilization_at_start_sum() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_memory_utilization_at_start_sum() {
  memory_utilization_at_start_sum_ = GOOGLE_ULONGLONG(0);
  clear_has_memory_utilization_at_start_sum();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::memory_utilization_at_start_sum() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.memory_utilization_at_start_sum)
  return memory_utilization_at_start_sum_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_memory_utilization_at_start_sum(::google::protobuf::uint64 value) {
  set_has_memory_utilization_at_start_sum();
  memory_utilization_at_start_sum_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.memory_utilization_at_start_sum)
}

// repeated fixed64 total_entries_scanned = 14;
inline int LogMetrics_CleanerMetrics_OnDiskMetrics::total_entries_scanned_size() const {
  return total_entries_scanned_.size();
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_entries_scanned() {
  total_entries_scanned_.Clear();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_entries_scanned(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_entries_scanned)
  return total_entries_scanned_.Get(index);
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_entries_scanned(int index, ::google::protobuf::uint64 value) {
  total_entries_scanned_.Set(index, value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_entries_scanned)
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::add_total_entries_scanned(::google::protobuf::uint64 value) {
  total_entries_scanned_.Add(value);
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_entries_scanned)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LogMetrics_CleanerMetrics_OnDiskMetrics::total_entries_scanned() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_entries_scanned)
  return total_entries_scanned_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LogMetrics_CleanerMetrics_OnDiskMetrics::mutable_total_entries_scanned() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_entries_scanned)
  return &total_entries_scanned_;
}

// repeated fixed64 total_live_entries_scanned = 15;
inline int LogMetrics_CleanerMetrics_OnDiskMetrics::total_live_entries_scanned_size() const {
  return total_live_entries_scanned_.size();
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_live_entries_scanned() {
  total_live_entries_scanned_.Clear();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_live_entries_scanned(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_live_entries_scanned)
  return total_live_entries_scanned_.Get(index);
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_live_entries_scanned(int index, ::google::protobuf::uint64 value) {
  total_live_entries_scanned_.Set(index, value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_live_entries_scanned)
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::add_total_live_entries_scanned(::google::protobuf::uint64 value) {
  total_live_entries_scanned_.Add(value);
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_live_entries_scanned)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LogMetrics_CleanerMetrics_OnDiskMetrics::total_live_entries_scanned() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_live_entries_scanned)
  return total_live_entries_scanned_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LogMetrics_CleanerMetrics_OnDiskMetrics::mutable_total_live_entries_scanned() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_live_entries_scanned)
  return &total_live_entries_scanned_;
}

// repeated fixed64 total_scanned_entry_lengths = 16;
inline int LogMetrics_CleanerMetrics_OnDiskMetrics::total_scanned_entry_lengths_size() const {
  return total_scanned_entry_lengths_.size();
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_scanned_entry_lengths() {
  total_scanned_entry_lengths_.Clear();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_scanned_entry_lengths(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_scanned_entry_lengths)
  return total_scanned_entry_lengths_.Get(index);
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_scanned_entry_lengths(int index, ::google::protobuf::uint64 value) {
  total_scanned_entry_lengths_.Set(index, value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_scanned_entry_lengths)
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::add_total_scanned_entry_lengths(::google::protobuf::uint64 value) {
  total_scanned_entry_lengths_.Add(value);
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_scanned_entry_lengths)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LogMetrics_CleanerMetrics_OnDiskMetrics::total_scanned_entry_lengths() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_scanned_entry_lengths)
  return total_scanned_entry_lengths_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LogMetrics_CleanerMetrics_OnDiskMetrics::mutable_total_scanned_entry_lengths() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_scanned_entry_lengths)
  return &total_scanned_entry_lengths_;
}

// repeated fixed64 total_live_scanned_entry_lengths = 17;
inline int LogMetrics_CleanerMetrics_OnDiskMetrics::total_live_scanned_entry_lengths_size() const {
  return total_live_scanned_entry_lengths_.size();
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_live_scanned_entry_lengths() {
  total_live_scanned_entry_lengths_.Clear();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_live_scanned_entry_lengths(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_live_scanned_entry_lengths)
  return total_live_scanned_entry_lengths_.Get(index);
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_live_scanned_entry_lengths(int index, ::google::protobuf::uint64 value) {
  total_live_scanned_entry_lengths_.Set(index, value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_live_scanned_entry_lengths)
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::add_total_live_scanned_entry_lengths(::google::protobuf::uint64 value) {
  total_live_scanned_entry_lengths_.Add(value);
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_live_scanned_entry_lengths)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LogMetrics_CleanerMetrics_OnDiskMetrics::total_live_scanned_entry_lengths() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_live_scanned_entry_lengths)
  return total_live_scanned_entry_lengths_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LogMetrics_CleanerMetrics_OnDiskMetrics::mutable_total_live_scanned_entry_lengths() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_live_scanned_entry_lengths)
  return &total_live_scanned_entry_lengths_;
}

// required fixed64 total_ticks = 18;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_total_ticks() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_total_ticks() {
  _has_bits_[0] |= 0x00020000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_total_ticks() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_total_ticks() {
  total_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_total_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::total_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_ticks)
  return total_ticks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_total_ticks(::google::protobuf::uint64 value) {
  set_has_total_ticks();
  total_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.total_ticks)
}

// required fixed64 get_segments_to_clean_ticks = 19;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_get_segments_to_clean_ticks() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_get_segments_to_clean_ticks() {
  _has_bits_[0] |= 0x00040000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_get_segments_to_clean_ticks() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_get_segments_to_clean_ticks() {
  get_segments_to_clean_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_get_segments_to_clean_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::get_segments_to_clean_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.get_segments_to_clean_ticks)
  return get_segments_to_clean_ticks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_get_segments_to_clean_ticks(::google::protobuf::uint64 value) {
  set_has_get_segments_to_clean_ticks();
  get_segments_to_clean_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.get_segments_to_clean_ticks)
}

// required fixed64 cost_benefit_sort_ticks = 20;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_cost_benefit_sort_ticks() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_cost_benefit_sort_ticks() {
  _has_bits_[0] |= 0x00080000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_cost_benefit_sort_ticks() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_cost_benefit_sort_ticks() {
  cost_benefit_sort_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_cost_benefit_sort_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::cost_benefit_sort_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.cost_benefit_sort_ticks)
  return cost_benefit_sort_ticks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_cost_benefit_sort_ticks(::google::protobuf::uint64 value) {
  set_has_cost_benefit_sort_ticks();
  cost_benefit_sort_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.cost_benefit_sort_ticks)
}

// required fixed64 get_sorted_entries_ticks = 21;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_get_sorted_entries_ticks() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_get_sorted_entries_ticks() {
  _has_bits_[0] |= 0x00100000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_get_sorted_entries_ticks() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_get_sorted_entries_ticks() {
  get_sorted_entries_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_get_sorted_entries_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::get_sorted_entries_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.get_sorted_entries_ticks)
  return get_sorted_entries_ticks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_get_sorted_entries_ticks(::google::protobuf::uint64 value) {
  set_has_get_sorted_entries_ticks();
  get_sorted_entries_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.get_sorted_entries_ticks)
}

// required fixed64 timestamp_sort_ticks = 22;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_timestamp_sort_ticks() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_timestamp_sort_ticks() {
  _has_bits_[0] |= 0x00200000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_timestamp_sort_ticks() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_timestamp_sort_ticks() {
  timestamp_sort_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp_sort_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::timestamp_sort_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.timestamp_sort_ticks)
  return timestamp_sort_ticks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_timestamp_sort_ticks(::google::protobuf::uint64 value) {
  set_has_timestamp_sort_ticks();
  timestamp_sort_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.timestamp_sort_ticks)
}

// required fixed64 relocate_live_entries_ticks = 23;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_relocate_live_entries_ticks() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_relocate_live_entries_ticks() {
  _has_bits_[0] |= 0x00400000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_relocate_live_entries_ticks() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_relocate_live_entries_ticks() {
  relocate_live_entries_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_relocate_live_entries_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::relocate_live_entries_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.relocate_live_entries_ticks)
  return relocate_live_entries_ticks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_relocate_live_entries_ticks(::google::protobuf::uint64 value) {
  set_has_relocate_live_entries_ticks();
  relocate_live_entries_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.relocate_live_entries_ticks)
}

// required fixed64 wait_for_free_survivors_ticks = 24;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_wait_for_free_survivors_ticks() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_wait_for_free_survivors_ticks() {
  _has_bits_[0] |= 0x00800000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_wait_for_free_survivors_ticks() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_wait_for_free_survivors_ticks() {
  wait_for_free_survivors_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_wait_for_free_survivors_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::wait_for_free_survivors_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.wait_for_free_survivors_ticks)
  return wait_for_free_survivors_ticks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_wait_for_free_survivors_ticks(::google::protobuf::uint64 value) {
  set_has_wait_for_free_survivors_ticks();
  wait_for_free_survivors_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.wait_for_free_survivors_ticks)
}

// required fixed64 cleaning_complete_ticks = 25;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_cleaning_complete_ticks() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_cleaning_complete_ticks() {
  _has_bits_[0] |= 0x01000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_cleaning_complete_ticks() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_cleaning_complete_ticks() {
  cleaning_complete_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_cleaning_complete_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::cleaning_complete_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.cleaning_complete_ticks)
  return cleaning_complete_ticks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_cleaning_complete_ticks(::google::protobuf::uint64 value) {
  set_has_cleaning_complete_ticks();
  cleaning_complete_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.cleaning_complete_ticks)
}

// required fixed64 relocation_callback_ticks = 26;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_relocation_callback_ticks() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_relocation_callback_ticks() {
  _has_bits_[0] |= 0x02000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_relocation_callback_ticks() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_relocation_callback_ticks() {
  relocation_callback_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_relocation_callback_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::relocation_callback_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.relocation_callback_ticks)
  return relocation_callback_ticks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_relocation_callback_ticks(::google::protobuf::uint64 value) {
  set_has_relocation_callback_ticks();
  relocation_callback_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.relocation_callback_ticks)
}

// required fixed64 relocation_append_ticks = 27;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_relocation_append_ticks() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_relocation_append_ticks() {
  _has_bits_[0] |= 0x04000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_relocation_append_ticks() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_relocation_append_ticks() {
  relocation_append_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_relocation_append_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::relocation_append_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.relocation_append_ticks)
  return relocation_append_ticks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_relocation_append_ticks(::google::protobuf::uint64 value) {
  set_has_relocation_append_ticks();
  relocation_append_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.relocation_append_ticks)
}

// required fixed64 close_survivor_ticks = 28;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_close_survivor_ticks() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_close_survivor_ticks() {
  _has_bits_[0] |= 0x08000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_close_survivor_ticks() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_close_survivor_ticks() {
  close_survivor_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_close_survivor_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::close_survivor_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.close_survivor_ticks)
  return close_survivor_ticks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_close_survivor_ticks(::google::protobuf::uint64 value) {
  set_has_close_survivor_ticks();
  close_survivor_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.close_survivor_ticks)
}

// required fixed64 survivor_sync_ticks = 29;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_survivor_sync_ticks() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_survivor_sync_ticks() {
  _has_bits_[0] |= 0x10000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_survivor_sync_ticks() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_survivor_sync_ticks() {
  survivor_sync_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_survivor_sync_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_OnDiskMetrics::survivor_sync_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.survivor_sync_ticks)
  return survivor_sync_ticks_;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_survivor_sync_ticks(::google::protobuf::uint64 value) {
  set_has_survivor_sync_ticks();
  survivor_sync_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.survivor_sync_ticks)
}

// required .RAMCloud.ProtoBuf.Histogram cleaned_segment_memory_histogram = 30;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_cleaned_segment_memory_histogram() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_cleaned_segment_memory_histogram() {
  _has_bits_[0] |= 0x20000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_cleaned_segment_memory_histogram() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_cleaned_segment_memory_histogram() {
  if (cleaned_segment_memory_histogram_ != NULL) cleaned_segment_memory_histogram_->::RAMCloud::ProtoBuf::Histogram::Clear();
  clear_has_cleaned_segment_memory_histogram();
}
inline const ::RAMCloud::ProtoBuf::Histogram& LogMetrics_CleanerMetrics_OnDiskMetrics::cleaned_segment_memory_histogram() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.cleaned_segment_memory_histogram)
  return cleaned_segment_memory_histogram_ != NULL ? *cleaned_segment_memory_histogram_ : *default_instance_->cleaned_segment_memory_histogram_;
}
inline ::RAMCloud::ProtoBuf::Histogram* LogMetrics_CleanerMetrics_OnDiskMetrics::mutable_cleaned_segment_memory_histogram() {
  set_has_cleaned_segment_memory_histogram();
  if (cleaned_segment_memory_histogram_ == NULL) {
    cleaned_segment_memory_histogram_ = new ::RAMCloud::ProtoBuf::Histogram;
  }
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.cleaned_segment_memory_histogram)
  return cleaned_segment_memory_histogram_;
}
inline ::RAMCloud::ProtoBuf::Histogram* LogMetrics_CleanerMetrics_OnDiskMetrics::release_cleaned_segment_memory_histogram() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.cleaned_segment_memory_histogram)
  clear_has_cleaned_segment_memory_histogram();
  ::RAMCloud::ProtoBuf::Histogram* temp = cleaned_segment_memory_histogram_;
  cleaned_segment_memory_histogram_ = NULL;
  return temp;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_allocated_cleaned_segment_memory_histogram(::RAMCloud::ProtoBuf::Histogram* cleaned_segment_memory_histogram) {
  delete cleaned_segment_memory_histogram_;
  cleaned_segment_memory_histogram_ = cleaned_segment_memory_histogram;
  if (cleaned_segment_memory_histogram) {
    set_has_cleaned_segment_memory_histogram();
  } else {
    clear_has_cleaned_segment_memory_histogram();
  }
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.cleaned_segment_memory_histogram)
}

// required .RAMCloud.ProtoBuf.Histogram cleaned_segment_disk_histogram = 31;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_cleaned_segment_disk_histogram() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_cleaned_segment_disk_histogram() {
  _has_bits_[0] |= 0x40000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_cleaned_segment_disk_histogram() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_cleaned_segment_disk_histogram() {
  if (cleaned_segment_disk_histogram_ != NULL) cleaned_segment_disk_histogram_->::RAMCloud::ProtoBuf::Histogram::Clear();
  clear_has_cleaned_segment_disk_histogram();
}
inline const ::RAMCloud::ProtoBuf::Histogram& LogMetrics_CleanerMetrics_OnDiskMetrics::cleaned_segment_disk_histogram() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.cleaned_segment_disk_histogram)
  return cleaned_segment_disk_histogram_ != NULL ? *cleaned_segment_disk_histogram_ : *default_instance_->cleaned_segment_disk_histogram_;
}
inline ::RAMCloud::ProtoBuf::Histogram* LogMetrics_CleanerMetrics_OnDiskMetrics::mutable_cleaned_segment_disk_histogram() {
  set_has_cleaned_segment_disk_histogram();
  if (cleaned_segment_disk_histogram_ == NULL) {
    cleaned_segment_disk_histogram_ = new ::RAMCloud::ProtoBuf::Histogram;
  }
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.cleaned_segment_disk_histogram)
  return cleaned_segment_disk_histogram_;
}
inline ::RAMCloud::ProtoBuf::Histogram* LogMetrics_CleanerMetrics_OnDiskMetrics::release_cleaned_segment_disk_histogram() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.cleaned_segment_disk_histogram)
  clear_has_cleaned_segment_disk_histogram();
  ::RAMCloud::ProtoBuf::Histogram* temp = cleaned_segment_disk_histogram_;
  cleaned_segment_disk_histogram_ = NULL;
  return temp;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_allocated_cleaned_segment_disk_histogram(::RAMCloud::ProtoBuf::Histogram* cleaned_segment_disk_histogram) {
  delete cleaned_segment_disk_histogram_;
  cleaned_segment_disk_histogram_ = cleaned_segment_disk_histogram;
  if (cleaned_segment_disk_histogram) {
    set_has_cleaned_segment_disk_histogram();
  } else {
    clear_has_cleaned_segment_disk_histogram();
  }
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.cleaned_segment_disk_histogram)
}

// required .RAMCloud.ProtoBuf.Histogram all_segments_disk_histogram = 32;
inline bool LogMetrics_CleanerMetrics_OnDiskMetrics::has_all_segments_disk_histogram() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_has_all_segments_disk_histogram() {
  _has_bits_[0] |= 0x80000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_has_all_segments_disk_histogram() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::clear_all_segments_disk_histogram() {
  if (all_segments_disk_histogram_ != NULL) all_segments_disk_histogram_->::RAMCloud::ProtoBuf::Histogram::Clear();
  clear_has_all_segments_disk_histogram();
}
inline const ::RAMCloud::ProtoBuf::Histogram& LogMetrics_CleanerMetrics_OnDiskMetrics::all_segments_disk_histogram() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.all_segments_disk_histogram)
  return all_segments_disk_histogram_ != NULL ? *all_segments_disk_histogram_ : *default_instance_->all_segments_disk_histogram_;
}
inline ::RAMCloud::ProtoBuf::Histogram* LogMetrics_CleanerMetrics_OnDiskMetrics::mutable_all_segments_disk_histogram() {
  set_has_all_segments_disk_histogram();
  if (all_segments_disk_histogram_ == NULL) {
    all_segments_disk_histogram_ = new ::RAMCloud::ProtoBuf::Histogram;
  }
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.all_segments_disk_histogram)
  return all_segments_disk_histogram_;
}
inline ::RAMCloud::ProtoBuf::Histogram* LogMetrics_CleanerMetrics_OnDiskMetrics::release_all_segments_disk_histogram() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.all_segments_disk_histogram)
  clear_has_all_segments_disk_histogram();
  ::RAMCloud::ProtoBuf::Histogram* temp = all_segments_disk_histogram_;
  all_segments_disk_histogram_ = NULL;
  return temp;
}
inline void LogMetrics_CleanerMetrics_OnDiskMetrics::set_allocated_all_segments_disk_histogram(::RAMCloud::ProtoBuf::Histogram* all_segments_disk_histogram) {
  delete all_segments_disk_histogram_;
  all_segments_disk_histogram_ = all_segments_disk_histogram;
  if (all_segments_disk_histogram) {
    set_has_all_segments_disk_histogram();
  } else {
    clear_has_all_segments_disk_histogram();
  }
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics.all_segments_disk_histogram)
}

// -------------------------------------------------------------------

// LogMetrics_CleanerMetrics_ThreadMetrics

// repeated fixed64 active_ticks = 1;
inline int LogMetrics_CleanerMetrics_ThreadMetrics::active_ticks_size() const {
  return active_ticks_.size();
}
inline void LogMetrics_CleanerMetrics_ThreadMetrics::clear_active_ticks() {
  active_ticks_.Clear();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics_ThreadMetrics::active_ticks(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.ThreadMetrics.active_ticks)
  return active_ticks_.Get(index);
}
inline void LogMetrics_CleanerMetrics_ThreadMetrics::set_active_ticks(int index, ::google::protobuf::uint64 value) {
  active_ticks_.Set(index, value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.ThreadMetrics.active_ticks)
}
inline void LogMetrics_CleanerMetrics_ThreadMetrics::add_active_ticks(::google::protobuf::uint64 value) {
  active_ticks_.Add(value);
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.ThreadMetrics.active_ticks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LogMetrics_CleanerMetrics_ThreadMetrics::active_ticks() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.ThreadMetrics.active_ticks)
  return active_ticks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LogMetrics_CleanerMetrics_ThreadMetrics::mutable_active_ticks() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.ThreadMetrics.active_ticks)
  return &active_ticks_;
}

// -------------------------------------------------------------------

// LogMetrics_CleanerMetrics

// required fixed32 poll_usec = 1;
inline bool LogMetrics_CleanerMetrics::has_poll_usec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogMetrics_CleanerMetrics::set_has_poll_usec() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogMetrics_CleanerMetrics::clear_has_poll_usec() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogMetrics_CleanerMetrics::clear_poll_usec() {
  poll_usec_ = 0u;
  clear_has_poll_usec();
}
inline ::google::protobuf::uint32 LogMetrics_CleanerMetrics::poll_usec() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.poll_usec)
  return poll_usec_;
}
inline void LogMetrics_CleanerMetrics::set_poll_usec(::google::protobuf::uint32 value) {
  set_has_poll_usec();
  poll_usec_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.poll_usec)
}

// required fixed32 max_cleanable_memory_utilization = 2;
inline bool LogMetrics_CleanerMetrics::has_max_cleanable_memory_utilization() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogMetrics_CleanerMetrics::set_has_max_cleanable_memory_utilization() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogMetrics_CleanerMetrics::clear_has_max_cleanable_memory_utilization() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogMetrics_CleanerMetrics::clear_max_cleanable_memory_utilization() {
  max_cleanable_memory_utilization_ = 0u;
  clear_has_max_cleanable_memory_utilization();
}
inline ::google::protobuf::uint32 LogMetrics_CleanerMetrics::max_cleanable_memory_utilization() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.max_cleanable_memory_utilization)
  return max_cleanable_memory_utilization_;
}
inline void LogMetrics_CleanerMetrics::set_max_cleanable_memory_utilization(::google::protobuf::uint32 value) {
  set_has_max_cleanable_memory_utilization();
  max_cleanable_memory_utilization_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.max_cleanable_memory_utilization)
}

// required fixed32 live_segments_per_disk_pass = 3;
inline bool LogMetrics_CleanerMetrics::has_live_segments_per_disk_pass() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogMetrics_CleanerMetrics::set_has_live_segments_per_disk_pass() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogMetrics_CleanerMetrics::clear_has_live_segments_per_disk_pass() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogMetrics_CleanerMetrics::clear_live_segments_per_disk_pass() {
  live_segments_per_disk_pass_ = 0u;
  clear_has_live_segments_per_disk_pass();
}
inline ::google::protobuf::uint32 LogMetrics_CleanerMetrics::live_segments_per_disk_pass() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.live_segments_per_disk_pass)
  return live_segments_per_disk_pass_;
}
inline void LogMetrics_CleanerMetrics::set_live_segments_per_disk_pass(::google::protobuf::uint32 value) {
  set_has_live_segments_per_disk_pass();
  live_segments_per_disk_pass_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.live_segments_per_disk_pass)
}

// required fixed32 survivor_segments_to_reserve = 4;
inline bool LogMetrics_CleanerMetrics::has_survivor_segments_to_reserve() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogMetrics_CleanerMetrics::set_has_survivor_segments_to_reserve() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogMetrics_CleanerMetrics::clear_has_survivor_segments_to_reserve() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogMetrics_CleanerMetrics::clear_survivor_segments_to_reserve() {
  survivor_segments_to_reserve_ = 0u;
  clear_has_survivor_segments_to_reserve();
}
inline ::google::protobuf::uint32 LogMetrics_CleanerMetrics::survivor_segments_to_reserve() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.survivor_segments_to_reserve)
  return survivor_segments_to_reserve_;
}
inline void LogMetrics_CleanerMetrics::set_survivor_segments_to_reserve(::google::protobuf::uint32 value) {
  set_has_survivor_segments_to_reserve();
  survivor_segments_to_reserve_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.survivor_segments_to_reserve)
}

// required fixed32 min_memory_utilization = 5;
inline bool LogMetrics_CleanerMetrics::has_min_memory_utilization() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogMetrics_CleanerMetrics::set_has_min_memory_utilization() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogMetrics_CleanerMetrics::clear_has_min_memory_utilization() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogMetrics_CleanerMetrics::clear_min_memory_utilization() {
  min_memory_utilization_ = 0u;
  clear_has_min_memory_utilization();
}
inline ::google::protobuf::uint32 LogMetrics_CleanerMetrics::min_memory_utilization() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.min_memory_utilization)
  return min_memory_utilization_;
}
inline void LogMetrics_CleanerMetrics::set_min_memory_utilization(::google::protobuf::uint32 value) {
  set_has_min_memory_utilization();
  min_memory_utilization_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.min_memory_utilization)
}

// required fixed32 min_disk_utilization = 6;
inline bool LogMetrics_CleanerMetrics::has_min_disk_utilization() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogMetrics_CleanerMetrics::set_has_min_disk_utilization() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogMetrics_CleanerMetrics::clear_has_min_disk_utilization() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogMetrics_CleanerMetrics::clear_min_disk_utilization() {
  min_disk_utilization_ = 0u;
  clear_has_min_disk_utilization();
}
inline ::google::protobuf::uint32 LogMetrics_CleanerMetrics::min_disk_utilization() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.min_disk_utilization)
  return min_disk_utilization_;
}
inline void LogMetrics_CleanerMetrics::set_min_disk_utilization(::google::protobuf::uint32 value) {
  set_has_min_disk_utilization();
  min_disk_utilization_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.min_disk_utilization)
}

// required fixed64 do_work_ticks = 7;
inline bool LogMetrics_CleanerMetrics::has_do_work_ticks() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LogMetrics_CleanerMetrics::set_has_do_work_ticks() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LogMetrics_CleanerMetrics::clear_has_do_work_ticks() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LogMetrics_CleanerMetrics::clear_do_work_ticks() {
  do_work_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_do_work_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics::do_work_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.do_work_ticks)
  return do_work_ticks_;
}
inline void LogMetrics_CleanerMetrics::set_do_work_ticks(::google::protobuf::uint64 value) {
  set_has_do_work_ticks();
  do_work_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.do_work_ticks)
}

// required fixed64 do_work_sleep_ticks = 8;
inline bool LogMetrics_CleanerMetrics::has_do_work_sleep_ticks() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LogMetrics_CleanerMetrics::set_has_do_work_sleep_ticks() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LogMetrics_CleanerMetrics::clear_has_do_work_sleep_ticks() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LogMetrics_CleanerMetrics::clear_do_work_sleep_ticks() {
  do_work_sleep_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_do_work_sleep_ticks();
}
inline ::google::protobuf::uint64 LogMetrics_CleanerMetrics::do_work_sleep_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.do_work_sleep_ticks)
  return do_work_sleep_ticks_;
}
inline void LogMetrics_CleanerMetrics::set_do_work_sleep_ticks(::google::protobuf::uint64 value) {
  set_has_do_work_sleep_ticks();
  do_work_sleep_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.do_work_sleep_ticks)
}

// required .RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.InMemoryMetrics in_memory_metrics = 9;
inline bool LogMetrics_CleanerMetrics::has_in_memory_metrics() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LogMetrics_CleanerMetrics::set_has_in_memory_metrics() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LogMetrics_CleanerMetrics::clear_has_in_memory_metrics() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LogMetrics_CleanerMetrics::clear_in_memory_metrics() {
  if (in_memory_metrics_ != NULL) in_memory_metrics_->::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_InMemoryMetrics::Clear();
  clear_has_in_memory_metrics();
}
inline const ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_InMemoryMetrics& LogMetrics_CleanerMetrics::in_memory_metrics() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.in_memory_metrics)
  return in_memory_metrics_ != NULL ? *in_memory_metrics_ : *default_instance_->in_memory_metrics_;
}
inline ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_InMemoryMetrics* LogMetrics_CleanerMetrics::mutable_in_memory_metrics() {
  set_has_in_memory_metrics();
  if (in_memory_metrics_ == NULL) {
    in_memory_metrics_ = new ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_InMemoryMetrics;
  }
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.in_memory_metrics)
  return in_memory_metrics_;
}
inline ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_InMemoryMetrics* LogMetrics_CleanerMetrics::release_in_memory_metrics() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.in_memory_metrics)
  clear_has_in_memory_metrics();
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_InMemoryMetrics* temp = in_memory_metrics_;
  in_memory_metrics_ = NULL;
  return temp;
}
inline void LogMetrics_CleanerMetrics::set_allocated_in_memory_metrics(::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_InMemoryMetrics* in_memory_metrics) {
  delete in_memory_metrics_;
  in_memory_metrics_ = in_memory_metrics;
  if (in_memory_metrics) {
    set_has_in_memory_metrics();
  } else {
    clear_has_in_memory_metrics();
  }
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.in_memory_metrics)
}

// required .RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.OnDiskMetrics on_disk_metrics = 10;
inline bool LogMetrics_CleanerMetrics::has_on_disk_metrics() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LogMetrics_CleanerMetrics::set_has_on_disk_metrics() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LogMetrics_CleanerMetrics::clear_has_on_disk_metrics() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LogMetrics_CleanerMetrics::clear_on_disk_metrics() {
  if (on_disk_metrics_ != NULL) on_disk_metrics_->::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_OnDiskMetrics::Clear();
  clear_has_on_disk_metrics();
}
inline const ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_OnDiskMetrics& LogMetrics_CleanerMetrics::on_disk_metrics() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.on_disk_metrics)
  return on_disk_metrics_ != NULL ? *on_disk_metrics_ : *default_instance_->on_disk_metrics_;
}
inline ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_OnDiskMetrics* LogMetrics_CleanerMetrics::mutable_on_disk_metrics() {
  set_has_on_disk_metrics();
  if (on_disk_metrics_ == NULL) {
    on_disk_metrics_ = new ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_OnDiskMetrics;
  }
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.on_disk_metrics)
  return on_disk_metrics_;
}
inline ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_OnDiskMetrics* LogMetrics_CleanerMetrics::release_on_disk_metrics() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.on_disk_metrics)
  clear_has_on_disk_metrics();
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_OnDiskMetrics* temp = on_disk_metrics_;
  on_disk_metrics_ = NULL;
  return temp;
}
inline void LogMetrics_CleanerMetrics::set_allocated_on_disk_metrics(::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_OnDiskMetrics* on_disk_metrics) {
  delete on_disk_metrics_;
  on_disk_metrics_ = on_disk_metrics;
  if (on_disk_metrics) {
    set_has_on_disk_metrics();
  } else {
    clear_has_on_disk_metrics();
  }
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.on_disk_metrics)
}

// required .RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.ThreadMetrics thread_metrics = 11;
inline bool LogMetrics_CleanerMetrics::has_thread_metrics() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LogMetrics_CleanerMetrics::set_has_thread_metrics() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LogMetrics_CleanerMetrics::clear_has_thread_metrics() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LogMetrics_CleanerMetrics::clear_thread_metrics() {
  if (thread_metrics_ != NULL) thread_metrics_->::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_ThreadMetrics::Clear();
  clear_has_thread_metrics();
}
inline const ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_ThreadMetrics& LogMetrics_CleanerMetrics::thread_metrics() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.thread_metrics)
  return thread_metrics_ != NULL ? *thread_metrics_ : *default_instance_->thread_metrics_;
}
inline ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_ThreadMetrics* LogMetrics_CleanerMetrics::mutable_thread_metrics() {
  set_has_thread_metrics();
  if (thread_metrics_ == NULL) {
    thread_metrics_ = new ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_ThreadMetrics;
  }
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.thread_metrics)
  return thread_metrics_;
}
inline ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_ThreadMetrics* LogMetrics_CleanerMetrics::release_thread_metrics() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.thread_metrics)
  clear_has_thread_metrics();
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_ThreadMetrics* temp = thread_metrics_;
  thread_metrics_ = NULL;
  return temp;
}
inline void LogMetrics_CleanerMetrics::set_allocated_thread_metrics(::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics_ThreadMetrics* thread_metrics) {
  delete thread_metrics_;
  thread_metrics_ = thread_metrics;
  if (thread_metrics) {
    set_has_thread_metrics();
  } else {
    clear_has_thread_metrics();
  }
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics.thread_metrics)
}

// -------------------------------------------------------------------

// LogMetrics_SegletMetrics

// required fixed64 total_seglets = 1;
inline bool LogMetrics_SegletMetrics::has_total_seglets() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogMetrics_SegletMetrics::set_has_total_seglets() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogMetrics_SegletMetrics::clear_has_total_seglets() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogMetrics_SegletMetrics::clear_total_seglets() {
  total_seglets_ = GOOGLE_ULONGLONG(0);
  clear_has_total_seglets();
}
inline ::google::protobuf::uint64 LogMetrics_SegletMetrics::total_seglets() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.total_seglets)
  return total_seglets_;
}
inline void LogMetrics_SegletMetrics::set_total_seglets(::google::protobuf::uint64 value) {
  set_has_total_seglets();
  total_seglets_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.total_seglets)
}

// required fixed64 total_usable_seglets = 2;
inline bool LogMetrics_SegletMetrics::has_total_usable_seglets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogMetrics_SegletMetrics::set_has_total_usable_seglets() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogMetrics_SegletMetrics::clear_has_total_usable_seglets() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogMetrics_SegletMetrics::clear_total_usable_seglets() {
  total_usable_seglets_ = GOOGLE_ULONGLONG(0);
  clear_has_total_usable_seglets();
}
inline ::google::protobuf::uint64 LogMetrics_SegletMetrics::total_usable_seglets() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.total_usable_seglets)
  return total_usable_seglets_;
}
inline void LogMetrics_SegletMetrics::set_total_usable_seglets(::google::protobuf::uint64 value) {
  set_has_total_usable_seglets();
  total_usable_seglets_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.total_usable_seglets)
}

// required fixed64 emergency_head_pool_reserve = 3;
inline bool LogMetrics_SegletMetrics::has_emergency_head_pool_reserve() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogMetrics_SegletMetrics::set_has_emergency_head_pool_reserve() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogMetrics_SegletMetrics::clear_has_emergency_head_pool_reserve() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogMetrics_SegletMetrics::clear_emergency_head_pool_reserve() {
  emergency_head_pool_reserve_ = GOOGLE_ULONGLONG(0);
  clear_has_emergency_head_pool_reserve();
}
inline ::google::protobuf::uint64 LogMetrics_SegletMetrics::emergency_head_pool_reserve() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.emergency_head_pool_reserve)
  return emergency_head_pool_reserve_;
}
inline void LogMetrics_SegletMetrics::set_emergency_head_pool_reserve(::google::protobuf::uint64 value) {
  set_has_emergency_head_pool_reserve();
  emergency_head_pool_reserve_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.emergency_head_pool_reserve)
}

// required fixed64 emergency_head_pool_count = 4;
inline bool LogMetrics_SegletMetrics::has_emergency_head_pool_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogMetrics_SegletMetrics::set_has_emergency_head_pool_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogMetrics_SegletMetrics::clear_has_emergency_head_pool_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogMetrics_SegletMetrics::clear_emergency_head_pool_count() {
  emergency_head_pool_count_ = GOOGLE_ULONGLONG(0);
  clear_has_emergency_head_pool_count();
}
inline ::google::protobuf::uint64 LogMetrics_SegletMetrics::emergency_head_pool_count() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.emergency_head_pool_count)
  return emergency_head_pool_count_;
}
inline void LogMetrics_SegletMetrics::set_emergency_head_pool_count(::google::protobuf::uint64 value) {
  set_has_emergency_head_pool_count();
  emergency_head_pool_count_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.emergency_head_pool_count)
}

// required fixed64 cleaner_pool_reserve = 5;
inline bool LogMetrics_SegletMetrics::has_cleaner_pool_reserve() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogMetrics_SegletMetrics::set_has_cleaner_pool_reserve() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogMetrics_SegletMetrics::clear_has_cleaner_pool_reserve() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogMetrics_SegletMetrics::clear_cleaner_pool_reserve() {
  cleaner_pool_reserve_ = GOOGLE_ULONGLONG(0);
  clear_has_cleaner_pool_reserve();
}
inline ::google::protobuf::uint64 LogMetrics_SegletMetrics::cleaner_pool_reserve() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.cleaner_pool_reserve)
  return cleaner_pool_reserve_;
}
inline void LogMetrics_SegletMetrics::set_cleaner_pool_reserve(::google::protobuf::uint64 value) {
  set_has_cleaner_pool_reserve();
  cleaner_pool_reserve_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.cleaner_pool_reserve)
}

// required fixed64 cleaner_pool_count = 6;
inline bool LogMetrics_SegletMetrics::has_cleaner_pool_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogMetrics_SegletMetrics::set_has_cleaner_pool_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogMetrics_SegletMetrics::clear_has_cleaner_pool_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogMetrics_SegletMetrics::clear_cleaner_pool_count() {
  cleaner_pool_count_ = GOOGLE_ULONGLONG(0);
  clear_has_cleaner_pool_count();
}
inline ::google::protobuf::uint64 LogMetrics_SegletMetrics::cleaner_pool_count() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.cleaner_pool_count)
  return cleaner_pool_count_;
}
inline void LogMetrics_SegletMetrics::set_cleaner_pool_count(::google::protobuf::uint64 value) {
  set_has_cleaner_pool_count();
  cleaner_pool_count_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.cleaner_pool_count)
}

// required fixed64 default_pool_count = 7;
inline bool LogMetrics_SegletMetrics::has_default_pool_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LogMetrics_SegletMetrics::set_has_default_pool_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LogMetrics_SegletMetrics::clear_has_default_pool_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LogMetrics_SegletMetrics::clear_default_pool_count() {
  default_pool_count_ = GOOGLE_ULONGLONG(0);
  clear_has_default_pool_count();
}
inline ::google::protobuf::uint64 LogMetrics_SegletMetrics::default_pool_count() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.default_pool_count)
  return default_pool_count_;
}
inline void LogMetrics_SegletMetrics::set_default_pool_count(::google::protobuf::uint64 value) {
  set_has_default_pool_count();
  default_pool_count_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.SegletMetrics.default_pool_count)
}

// -------------------------------------------------------------------

// LogMetrics_SegmentMetrics

// required .RAMCloud.ProtoBuf.Histogram segments_on_disk_histogram = 1;
inline bool LogMetrics_SegmentMetrics::has_segments_on_disk_histogram() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogMetrics_SegmentMetrics::set_has_segments_on_disk_histogram() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogMetrics_SegmentMetrics::clear_has_segments_on_disk_histogram() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogMetrics_SegmentMetrics::clear_segments_on_disk_histogram() {
  if (segments_on_disk_histogram_ != NULL) segments_on_disk_histogram_->::RAMCloud::ProtoBuf::Histogram::Clear();
  clear_has_segments_on_disk_histogram();
}
inline const ::RAMCloud::ProtoBuf::Histogram& LogMetrics_SegmentMetrics::segments_on_disk_histogram() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.segments_on_disk_histogram)
  return segments_on_disk_histogram_ != NULL ? *segments_on_disk_histogram_ : *default_instance_->segments_on_disk_histogram_;
}
inline ::RAMCloud::ProtoBuf::Histogram* LogMetrics_SegmentMetrics::mutable_segments_on_disk_histogram() {
  set_has_segments_on_disk_histogram();
  if (segments_on_disk_histogram_ == NULL) {
    segments_on_disk_histogram_ = new ::RAMCloud::ProtoBuf::Histogram;
  }
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.segments_on_disk_histogram)
  return segments_on_disk_histogram_;
}
inline ::RAMCloud::ProtoBuf::Histogram* LogMetrics_SegmentMetrics::release_segments_on_disk_histogram() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.segments_on_disk_histogram)
  clear_has_segments_on_disk_histogram();
  ::RAMCloud::ProtoBuf::Histogram* temp = segments_on_disk_histogram_;
  segments_on_disk_histogram_ = NULL;
  return temp;
}
inline void LogMetrics_SegmentMetrics::set_allocated_segments_on_disk_histogram(::RAMCloud::ProtoBuf::Histogram* segments_on_disk_histogram) {
  delete segments_on_disk_histogram_;
  segments_on_disk_histogram_ = segments_on_disk_histogram;
  if (segments_on_disk_histogram) {
    set_has_segments_on_disk_histogram();
  } else {
    clear_has_segments_on_disk_histogram();
  }
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.segments_on_disk_histogram)
}

// required fixed64 current_segments_on_disk = 2;
inline bool LogMetrics_SegmentMetrics::has_current_segments_on_disk() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogMetrics_SegmentMetrics::set_has_current_segments_on_disk() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogMetrics_SegmentMetrics::clear_has_current_segments_on_disk() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogMetrics_SegmentMetrics::clear_current_segments_on_disk() {
  current_segments_on_disk_ = GOOGLE_ULONGLONG(0);
  clear_has_current_segments_on_disk();
}
inline ::google::protobuf::uint64 LogMetrics_SegmentMetrics::current_segments_on_disk() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.current_segments_on_disk)
  return current_segments_on_disk_;
}
inline void LogMetrics_SegmentMetrics::set_current_segments_on_disk(::google::protobuf::uint64 value) {
  set_has_current_segments_on_disk();
  current_segments_on_disk_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.current_segments_on_disk)
}

// repeated fixed64 total_entry_counts = 3;
inline int LogMetrics_SegmentMetrics::total_entry_counts_size() const {
  return total_entry_counts_.size();
}
inline void LogMetrics_SegmentMetrics::clear_total_entry_counts() {
  total_entry_counts_.Clear();
}
inline ::google::protobuf::uint64 LogMetrics_SegmentMetrics::total_entry_counts(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.total_entry_counts)
  return total_entry_counts_.Get(index);
}
inline void LogMetrics_SegmentMetrics::set_total_entry_counts(int index, ::google::protobuf::uint64 value) {
  total_entry_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.total_entry_counts)
}
inline void LogMetrics_SegmentMetrics::add_total_entry_counts(::google::protobuf::uint64 value) {
  total_entry_counts_.Add(value);
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.total_entry_counts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LogMetrics_SegmentMetrics::total_entry_counts() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.total_entry_counts)
  return total_entry_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LogMetrics_SegmentMetrics::mutable_total_entry_counts() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.total_entry_counts)
  return &total_entry_counts_;
}

// repeated fixed64 total_entry_lengths = 4;
inline int LogMetrics_SegmentMetrics::total_entry_lengths_size() const {
  return total_entry_lengths_.size();
}
inline void LogMetrics_SegmentMetrics::clear_total_entry_lengths() {
  total_entry_lengths_.Clear();
}
inline ::google::protobuf::uint64 LogMetrics_SegmentMetrics::total_entry_lengths(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.total_entry_lengths)
  return total_entry_lengths_.Get(index);
}
inline void LogMetrics_SegmentMetrics::set_total_entry_lengths(int index, ::google::protobuf::uint64 value) {
  total_entry_lengths_.Set(index, value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.total_entry_lengths)
}
inline void LogMetrics_SegmentMetrics::add_total_entry_lengths(::google::protobuf::uint64 value) {
  total_entry_lengths_.Add(value);
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.total_entry_lengths)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
LogMetrics_SegmentMetrics::total_entry_lengths() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.total_entry_lengths)
  return total_entry_lengths_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
LogMetrics_SegmentMetrics::mutable_total_entry_lengths() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics.total_entry_lengths)
  return &total_entry_lengths_;
}

// -------------------------------------------------------------------

// LogMetrics

// required double ticks_per_second = 1;
inline bool LogMetrics::has_ticks_per_second() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogMetrics::set_has_ticks_per_second() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogMetrics::clear_has_ticks_per_second() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogMetrics::clear_ticks_per_second() {
  ticks_per_second_ = 0;
  clear_has_ticks_per_second();
}
inline double LogMetrics::ticks_per_second() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.ticks_per_second)
  return ticks_per_second_;
}
inline void LogMetrics::set_ticks_per_second(double value) {
  set_has_ticks_per_second();
  ticks_per_second_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.ticks_per_second)
}

// required fixed64 total_sync_calls = 2;
inline bool LogMetrics::has_total_sync_calls() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogMetrics::set_has_total_sync_calls() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogMetrics::clear_has_total_sync_calls() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogMetrics::clear_total_sync_calls() {
  total_sync_calls_ = GOOGLE_ULONGLONG(0);
  clear_has_total_sync_calls();
}
inline ::google::protobuf::uint64 LogMetrics::total_sync_calls() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.total_sync_calls)
  return total_sync_calls_;
}
inline void LogMetrics::set_total_sync_calls(::google::protobuf::uint64 value) {
  set_has_total_sync_calls();
  total_sync_calls_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.total_sync_calls)
}

// required fixed64 total_sync_ticks = 3;
inline bool LogMetrics::has_total_sync_ticks() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogMetrics::set_has_total_sync_ticks() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogMetrics::clear_has_total_sync_ticks() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogMetrics::clear_total_sync_ticks() {
  total_sync_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_total_sync_ticks();
}
inline ::google::protobuf::uint64 LogMetrics::total_sync_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.total_sync_ticks)
  return total_sync_ticks_;
}
inline void LogMetrics::set_total_sync_ticks(::google::protobuf::uint64 value) {
  set_has_total_sync_ticks();
  total_sync_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.total_sync_ticks)
}

// required fixed64 total_append_calls = 4;
inline bool LogMetrics::has_total_append_calls() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogMetrics::set_has_total_append_calls() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogMetrics::clear_has_total_append_calls() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogMetrics::clear_total_append_calls() {
  total_append_calls_ = GOOGLE_ULONGLONG(0);
  clear_has_total_append_calls();
}
inline ::google::protobuf::uint64 LogMetrics::total_append_calls() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.total_append_calls)
  return total_append_calls_;
}
inline void LogMetrics::set_total_append_calls(::google::protobuf::uint64 value) {
  set_has_total_append_calls();
  total_append_calls_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.total_append_calls)
}

// required fixed64 total_append_ticks = 5;
inline bool LogMetrics::has_total_append_ticks() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogMetrics::set_has_total_append_ticks() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogMetrics::clear_has_total_append_ticks() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogMetrics::clear_total_append_ticks() {
  total_append_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_total_append_ticks();
}
inline ::google::protobuf::uint64 LogMetrics::total_append_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.total_append_ticks)
  return total_append_ticks_;
}
inline void LogMetrics::set_total_append_ticks(::google::protobuf::uint64 value) {
  set_has_total_append_ticks();
  total_append_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.total_append_ticks)
}

// required fixed64 total_no_space_ticks = 6;
inline bool LogMetrics::has_total_no_space_ticks() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogMetrics::set_has_total_no_space_ticks() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogMetrics::clear_has_total_no_space_ticks() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogMetrics::clear_total_no_space_ticks() {
  total_no_space_ticks_ = GOOGLE_ULONGLONG(0);
  clear_has_total_no_space_ticks();
}
inline ::google::protobuf::uint64 LogMetrics::total_no_space_ticks() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.total_no_space_ticks)
  return total_no_space_ticks_;
}
inline void LogMetrics::set_total_no_space_ticks(::google::protobuf::uint64 value) {
  set_has_total_no_space_ticks();
  total_no_space_ticks_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.total_no_space_ticks)
}

// required fixed64 total_bytes_appended = 7;
inline bool LogMetrics::has_total_bytes_appended() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LogMetrics::set_has_total_bytes_appended() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LogMetrics::clear_has_total_bytes_appended() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LogMetrics::clear_total_bytes_appended() {
  total_bytes_appended_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_appended();
}
inline ::google::protobuf::uint64 LogMetrics::total_bytes_appended() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.total_bytes_appended)
  return total_bytes_appended_;
}
inline void LogMetrics::set_total_bytes_appended(::google::protobuf::uint64 value) {
  set_has_total_bytes_appended();
  total_bytes_appended_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.total_bytes_appended)
}

// required fixed64 total_metadata_bytes_appended = 8;
inline bool LogMetrics::has_total_metadata_bytes_appended() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LogMetrics::set_has_total_metadata_bytes_appended() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LogMetrics::clear_has_total_metadata_bytes_appended() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LogMetrics::clear_total_metadata_bytes_appended() {
  total_metadata_bytes_appended_ = GOOGLE_ULONGLONG(0);
  clear_has_total_metadata_bytes_appended();
}
inline ::google::protobuf::uint64 LogMetrics::total_metadata_bytes_appended() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.total_metadata_bytes_appended)
  return total_metadata_bytes_appended_;
}
inline void LogMetrics::set_total_metadata_bytes_appended(::google::protobuf::uint64 value) {
  set_has_total_metadata_bytes_appended();
  total_metadata_bytes_appended_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.LogMetrics.total_metadata_bytes_appended)
}

// required .RAMCloud.ProtoBuf.LogMetrics.CleanerMetrics cleaner_metrics = 9;
inline bool LogMetrics::has_cleaner_metrics() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LogMetrics::set_has_cleaner_metrics() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LogMetrics::clear_has_cleaner_metrics() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LogMetrics::clear_cleaner_metrics() {
  if (cleaner_metrics_ != NULL) cleaner_metrics_->::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics::Clear();
  clear_has_cleaner_metrics();
}
inline const ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics& LogMetrics::cleaner_metrics() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.cleaner_metrics)
  return cleaner_metrics_ != NULL ? *cleaner_metrics_ : *default_instance_->cleaner_metrics_;
}
inline ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics* LogMetrics::mutable_cleaner_metrics() {
  set_has_cleaner_metrics();
  if (cleaner_metrics_ == NULL) {
    cleaner_metrics_ = new ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics;
  }
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.LogMetrics.cleaner_metrics)
  return cleaner_metrics_;
}
inline ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics* LogMetrics::release_cleaner_metrics() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.LogMetrics.cleaner_metrics)
  clear_has_cleaner_metrics();
  ::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics* temp = cleaner_metrics_;
  cleaner_metrics_ = NULL;
  return temp;
}
inline void LogMetrics::set_allocated_cleaner_metrics(::RAMCloud::ProtoBuf::LogMetrics_CleanerMetrics* cleaner_metrics) {
  delete cleaner_metrics_;
  cleaner_metrics_ = cleaner_metrics;
  if (cleaner_metrics) {
    set_has_cleaner_metrics();
  } else {
    clear_has_cleaner_metrics();
  }
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.LogMetrics.cleaner_metrics)
}

// required .RAMCloud.ProtoBuf.LogMetrics.SegletMetrics seglet_metrics = 10;
inline bool LogMetrics::has_seglet_metrics() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LogMetrics::set_has_seglet_metrics() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LogMetrics::clear_has_seglet_metrics() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LogMetrics::clear_seglet_metrics() {
  if (seglet_metrics_ != NULL) seglet_metrics_->::RAMCloud::ProtoBuf::LogMetrics_SegletMetrics::Clear();
  clear_has_seglet_metrics();
}
inline const ::RAMCloud::ProtoBuf::LogMetrics_SegletMetrics& LogMetrics::seglet_metrics() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.seglet_metrics)
  return seglet_metrics_ != NULL ? *seglet_metrics_ : *default_instance_->seglet_metrics_;
}
inline ::RAMCloud::ProtoBuf::LogMetrics_SegletMetrics* LogMetrics::mutable_seglet_metrics() {
  set_has_seglet_metrics();
  if (seglet_metrics_ == NULL) {
    seglet_metrics_ = new ::RAMCloud::ProtoBuf::LogMetrics_SegletMetrics;
  }
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.LogMetrics.seglet_metrics)
  return seglet_metrics_;
}
inline ::RAMCloud::ProtoBuf::LogMetrics_SegletMetrics* LogMetrics::release_seglet_metrics() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.LogMetrics.seglet_metrics)
  clear_has_seglet_metrics();
  ::RAMCloud::ProtoBuf::LogMetrics_SegletMetrics* temp = seglet_metrics_;
  seglet_metrics_ = NULL;
  return temp;
}
inline void LogMetrics::set_allocated_seglet_metrics(::RAMCloud::ProtoBuf::LogMetrics_SegletMetrics* seglet_metrics) {
  delete seglet_metrics_;
  seglet_metrics_ = seglet_metrics;
  if (seglet_metrics) {
    set_has_seglet_metrics();
  } else {
    clear_has_seglet_metrics();
  }
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.LogMetrics.seglet_metrics)
}

// required .RAMCloud.ProtoBuf.LogMetrics.SegmentMetrics segment_metrics = 11;
inline bool LogMetrics::has_segment_metrics() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LogMetrics::set_has_segment_metrics() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LogMetrics::clear_has_segment_metrics() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LogMetrics::clear_segment_metrics() {
  if (segment_metrics_ != NULL) segment_metrics_->::RAMCloud::ProtoBuf::LogMetrics_SegmentMetrics::Clear();
  clear_has_segment_metrics();
}
inline const ::RAMCloud::ProtoBuf::LogMetrics_SegmentMetrics& LogMetrics::segment_metrics() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.LogMetrics.segment_metrics)
  return segment_metrics_ != NULL ? *segment_metrics_ : *default_instance_->segment_metrics_;
}
inline ::RAMCloud::ProtoBuf::LogMetrics_SegmentMetrics* LogMetrics::mutable_segment_metrics() {
  set_has_segment_metrics();
  if (segment_metrics_ == NULL) {
    segment_metrics_ = new ::RAMCloud::ProtoBuf::LogMetrics_SegmentMetrics;
  }
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.LogMetrics.segment_metrics)
  return segment_metrics_;
}
inline ::RAMCloud::ProtoBuf::LogMetrics_SegmentMetrics* LogMetrics::release_segment_metrics() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.LogMetrics.segment_metrics)
  clear_has_segment_metrics();
  ::RAMCloud::ProtoBuf::LogMetrics_SegmentMetrics* temp = segment_metrics_;
  segment_metrics_ = NULL;
  return temp;
}
inline void LogMetrics::set_allocated_segment_metrics(::RAMCloud::ProtoBuf::LogMetrics_SegmentMetrics* segment_metrics) {
  delete segment_metrics_;
  segment_metrics_ = segment_metrics;
  if (segment_metrics) {
    set_has_segment_metrics();
  } else {
    clear_has_segment_metrics();
  }
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.LogMetrics.segment_metrics)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf
}  // namespace RAMCloud

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LogMetrics_2eproto__INCLUDED
// RAMCloud pragma [GCCWARN=0]

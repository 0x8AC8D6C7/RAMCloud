// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MetricList.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MetricList.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace RAMCloud {
namespace ProtoBuf {

namespace {

const ::google::protobuf::Descriptor* MetricList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MetricList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MetricList_Entry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MetricList_Entry_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MetricList_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_MetricList_2eproto() {
  protobuf_AddDesc_MetricList_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MetricList.proto");
  GOOGLE_CHECK(file != NULL);
  MetricList_descriptor_ = file->message_type(0);
  static const int MetricList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricList, metric_),
  };
  MetricList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MetricList_descriptor_,
      MetricList::default_instance_,
      MetricList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricList, _has_bits_[0]),
      -1,
      -1,
      sizeof(MetricList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricList, _internal_metadata_),
      -1);
  MetricList_Entry_descriptor_ = MetricList_descriptor_->nested_type(0);
  static const int MetricList_Entry_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricList_Entry, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricList_Entry, value_),
  };
  MetricList_Entry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MetricList_Entry_descriptor_,
      MetricList_Entry::default_instance_,
      MetricList_Entry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricList_Entry, _has_bits_[0]),
      -1,
      -1,
      sizeof(MetricList_Entry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MetricList_Entry, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MetricList_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MetricList_descriptor_, &MetricList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MetricList_Entry_descriptor_, &MetricList_Entry::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MetricList_2eproto() {
  delete MetricList::default_instance_;
  delete MetricList_reflection_;
  delete MetricList_Entry::default_instance_;
  delete MetricList_Entry_reflection_;
}

void protobuf_AddDesc_MetricList_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_MetricList_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020MetricList.proto\022\021RAMCloud.ProtoBuf\"g\n"
    "\nMetricList\0223\n\006metric\030\001 \003(\0132#.RAMCloud.P"
    "rotoBuf.MetricList.Entry\032$\n\005Entry\022\014\n\004nam"
    "e\030\001 \002(\t\022\r\n\005value\030\002 \002(\004", 142);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MetricList.proto", &protobuf_RegisterTypes);
  MetricList::default_instance_ = new MetricList();
  MetricList_Entry::default_instance_ = new MetricList_Entry();
  MetricList::default_instance_->InitAsDefaultInstance();
  MetricList_Entry::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MetricList_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MetricList_2eproto {
  StaticDescriptorInitializer_MetricList_2eproto() {
    protobuf_AddDesc_MetricList_2eproto();
  }
} static_descriptor_initializer_MetricList_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetricList_Entry::kNameFieldNumber;
const int MetricList_Entry::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetricList_Entry::MetricList_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RAMCloud.ProtoBuf.MetricList.Entry)
}

void MetricList_Entry::InitAsDefaultInstance() {
}

MetricList_Entry::MetricList_Entry(const MetricList_Entry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RAMCloud.ProtoBuf.MetricList.Entry)
}

void MetricList_Entry::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MetricList_Entry::~MetricList_Entry() {
  // @@protoc_insertion_point(destructor:RAMCloud.ProtoBuf.MetricList.Entry)
  SharedDtor();
}

void MetricList_Entry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MetricList_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetricList_Entry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MetricList_Entry_descriptor_;
}

const MetricList_Entry& MetricList_Entry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MetricList_2eproto();
  return *default_instance_;
}

MetricList_Entry* MetricList_Entry::default_instance_ = NULL;

MetricList_Entry* MetricList_Entry::New(::google::protobuf::Arena* arena) const {
  MetricList_Entry* n = new MetricList_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetricList_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:RAMCloud.ProtoBuf.MetricList.Entry)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    value_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MetricList_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RAMCloud.ProtoBuf.MetricList.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RAMCloud.ProtoBuf.MetricList.Entry.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // required uint64 value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RAMCloud.ProtoBuf.MetricList.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RAMCloud.ProtoBuf.MetricList.Entry)
  return false;
#undef DO_
}

void MetricList_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RAMCloud.ProtoBuf.MetricList.Entry)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RAMCloud.ProtoBuf.MetricList.Entry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint64 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RAMCloud.ProtoBuf.MetricList.Entry)
}

::google::protobuf::uint8* MetricList_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RAMCloud.ProtoBuf.MetricList.Entry)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RAMCloud.ProtoBuf.MetricList.Entry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint64 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RAMCloud.ProtoBuf.MetricList.Entry)
  return target;
}

int MetricList_Entry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RAMCloud.ProtoBuf.MetricList.Entry)
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required uint64 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  return total_size;
}
int MetricList_Entry::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RAMCloud.ProtoBuf.MetricList.Entry)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint64 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetricList_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RAMCloud.ProtoBuf.MetricList.Entry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MetricList_Entry* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MetricList_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RAMCloud.ProtoBuf.MetricList.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RAMCloud.ProtoBuf.MetricList.Entry)
    MergeFrom(*source);
  }
}

void MetricList_Entry::MergeFrom(const MetricList_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RAMCloud.ProtoBuf.MetricList.Entry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MetricList_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RAMCloud.ProtoBuf.MetricList.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricList_Entry::CopyFrom(const MetricList_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RAMCloud.ProtoBuf.MetricList.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricList_Entry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MetricList_Entry::Swap(MetricList_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetricList_Entry::InternalSwap(MetricList_Entry* other) {
  name_.Swap(&other->name_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetricList_Entry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MetricList_Entry_descriptor_;
  metadata.reflection = MetricList_Entry_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetricList::kMetricFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetricList::MetricList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RAMCloud.ProtoBuf.MetricList)
}

void MetricList::InitAsDefaultInstance() {
}

MetricList::MetricList(const MetricList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RAMCloud.ProtoBuf.MetricList)
}

void MetricList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MetricList::~MetricList() {
  // @@protoc_insertion_point(destructor:RAMCloud.ProtoBuf.MetricList)
  SharedDtor();
}

void MetricList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MetricList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetricList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MetricList_descriptor_;
}

const MetricList& MetricList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MetricList_2eproto();
  return *default_instance_;
}

MetricList* MetricList::default_instance_ = NULL;

MetricList* MetricList::New(::google::protobuf::Arena* arena) const {
  MetricList* n = new MetricList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetricList::Clear() {
// @@protoc_insertion_point(message_clear_start:RAMCloud.ProtoBuf.MetricList)
  metric_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MetricList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RAMCloud.ProtoBuf.MetricList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .RAMCloud.ProtoBuf.MetricList.Entry metric = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_metric:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_metric()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_metric;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RAMCloud.ProtoBuf.MetricList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RAMCloud.ProtoBuf.MetricList)
  return false;
#undef DO_
}

void MetricList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RAMCloud.ProtoBuf.MetricList)
  // repeated .RAMCloud.ProtoBuf.MetricList.Entry metric = 1;
  for (unsigned int i = 0, n = this->metric_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->metric(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RAMCloud.ProtoBuf.MetricList)
}

::google::protobuf::uint8* MetricList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RAMCloud.ProtoBuf.MetricList)
  // repeated .RAMCloud.ProtoBuf.MetricList.Entry metric = 1;
  for (unsigned int i = 0, n = this->metric_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->metric(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RAMCloud.ProtoBuf.MetricList)
  return target;
}

int MetricList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RAMCloud.ProtoBuf.MetricList)
  int total_size = 0;

  // repeated .RAMCloud.ProtoBuf.MetricList.Entry metric = 1;
  total_size += 1 * this->metric_size();
  for (int i = 0; i < this->metric_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->metric(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetricList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RAMCloud.ProtoBuf.MetricList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MetricList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MetricList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RAMCloud.ProtoBuf.MetricList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RAMCloud.ProtoBuf.MetricList)
    MergeFrom(*source);
  }
}

void MetricList::MergeFrom(const MetricList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RAMCloud.ProtoBuf.MetricList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  metric_.MergeFrom(from.metric_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MetricList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RAMCloud.ProtoBuf.MetricList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricList::CopyFrom(const MetricList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RAMCloud.ProtoBuf.MetricList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->metric())) return false;
  return true;
}

void MetricList::Swap(MetricList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetricList::InternalSwap(MetricList* other) {
  metric_.UnsafeArenaSwap(&other->metric_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetricList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MetricList_descriptor_;
  metadata.reflection = MetricList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MetricList_Entry

// required string name = 1;
bool MetricList_Entry::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MetricList_Entry::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MetricList_Entry::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MetricList_Entry::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& MetricList_Entry::name() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.MetricList.Entry.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MetricList_Entry::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.MetricList.Entry.name)
}
 void MetricList_Entry::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RAMCloud.ProtoBuf.MetricList.Entry.name)
}
 void MetricList_Entry::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RAMCloud.ProtoBuf.MetricList.Entry.name)
}
 ::std::string* MetricList_Entry::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.MetricList.Entry.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MetricList_Entry::release_name() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.MetricList.Entry.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MetricList_Entry::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.MetricList.Entry.name)
}

// required uint64 value = 2;
bool MetricList_Entry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MetricList_Entry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void MetricList_Entry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void MetricList_Entry::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
 ::google::protobuf::uint64 MetricList_Entry::value() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.MetricList.Entry.value)
  return value_;
}
 void MetricList_Entry::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.MetricList.Entry.value)
}

// -------------------------------------------------------------------

// MetricList

// repeated .RAMCloud.ProtoBuf.MetricList.Entry metric = 1;
int MetricList::metric_size() const {
  return metric_.size();
}
void MetricList::clear_metric() {
  metric_.Clear();
}
const ::RAMCloud::ProtoBuf::MetricList_Entry& MetricList::metric(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.MetricList.metric)
  return metric_.Get(index);
}
::RAMCloud::ProtoBuf::MetricList_Entry* MetricList::mutable_metric(int index) {
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.MetricList.metric)
  return metric_.Mutable(index);
}
::RAMCloud::ProtoBuf::MetricList_Entry* MetricList::add_metric() {
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.MetricList.metric)
  return metric_.Add();
}
::google::protobuf::RepeatedPtrField< ::RAMCloud::ProtoBuf::MetricList_Entry >*
MetricList::mutable_metric() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.MetricList.metric)
  return &metric_;
}
const ::google::protobuf::RepeatedPtrField< ::RAMCloud::ProtoBuf::MetricList_Entry >&
MetricList::metric() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.MetricList.metric)
  return metric_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf
}  // namespace RAMCloud

// @@protoc_insertion_point(global_scope)
// RAMCloud pragma [GCCWARN=0]

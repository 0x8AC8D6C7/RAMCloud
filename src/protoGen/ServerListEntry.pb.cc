// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerListEntry.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ServerListEntry.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace RAMCloud {
namespace ProtoBuf {

namespace {

const ::google::protobuf::Descriptor* ServerListEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerListEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerListEntry_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerListEntry_Update_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ServerListEntry_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ServerListEntry_2eproto() {
  protobuf_AddDesc_ServerListEntry_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ServerListEntry.proto");
  GOOGLE_CHECK(file != NULL);
  ServerListEntry_descriptor_ = file->message_type(0);
  static const int ServerListEntry_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry, services_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry, service_locator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry, expected_read_mbytes_per_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry, replication_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry, master_recovery_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry, update_),
  };
  ServerListEntry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerListEntry_descriptor_,
      ServerListEntry::default_instance_,
      ServerListEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry, _has_bits_[0]),
      -1,
      -1,
      sizeof(ServerListEntry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry, _internal_metadata_),
      -1);
  ServerListEntry_Update_descriptor_ = ServerListEntry_descriptor_->nested_type(0);
  static const int ServerListEntry_Update_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry_Update, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry_Update, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry_Update, sequence_number_),
  };
  ServerListEntry_Update_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerListEntry_Update_descriptor_,
      ServerListEntry_Update::default_instance_,
      ServerListEntry_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry_Update, _has_bits_[0]),
      -1,
      -1,
      sizeof(ServerListEntry_Update),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerListEntry_Update, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ServerListEntry_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerListEntry_descriptor_, &ServerListEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerListEntry_Update_descriptor_, &ServerListEntry_Update::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ServerListEntry_2eproto() {
  delete ServerListEntry::default_instance_;
  delete ServerListEntry_reflection_;
  delete ServerListEntry_Update::default_instance_;
  delete ServerListEntry_Update_reflection_;
}

void protobuf_AddDesc_ServerListEntry_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_ServerListEntry_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::RAMCloud::ProtoBuf::protobuf_AddDesc_MasterRecoveryInfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025ServerListEntry.proto\022\021RAMCloud.ProtoB"
    "uf\032\030MasterRecoveryInfo.proto\"\341\002\n\017ServerL"
    "istEntry\022\020\n\010services\030\001 \002(\007\022\021\n\tserver_id\030"
    "\002 \002(\006\022\027\n\017service_locator\030\003 \002(\t\022$\n\034expect"
    "ed_read_mbytes_per_sec\030\004 \002(\007\022\016\n\006status\030\005"
    " \002(\007\022\026\n\016replication_id\030\006 \002(\006\022C\n\024master_r"
    "ecovery_info\030\007 \002(\0132%.RAMCloud.ProtoBuf.M"
    "asterRecoveryInfo\0229\n\006update\030\010 \003(\0132).RAMC"
    "loud.ProtoBuf.ServerListEntry.Update\032B\n\006"
    "Update\022\016\n\006status\030\001 \002(\007\022\017\n\007version\030\002 \002(\004\022"
    "\027\n\017sequence_number\030\003 \002(\004", 424);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerListEntry.proto", &protobuf_RegisterTypes);
  ServerListEntry::default_instance_ = new ServerListEntry();
  ServerListEntry_Update::default_instance_ = new ServerListEntry_Update();
  ServerListEntry::default_instance_->InitAsDefaultInstance();
  ServerListEntry_Update::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ServerListEntry_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ServerListEntry_2eproto {
  StaticDescriptorInitializer_ServerListEntry_2eproto() {
    protobuf_AddDesc_ServerListEntry_2eproto();
  }
} static_descriptor_initializer_ServerListEntry_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerListEntry_Update::kStatusFieldNumber;
const int ServerListEntry_Update::kVersionFieldNumber;
const int ServerListEntry_Update::kSequenceNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerListEntry_Update::ServerListEntry_Update()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RAMCloud.ProtoBuf.ServerListEntry.Update)
}

void ServerListEntry_Update::InitAsDefaultInstance() {
}

ServerListEntry_Update::ServerListEntry_Update(const ServerListEntry_Update& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RAMCloud.ProtoBuf.ServerListEntry.Update)
}

void ServerListEntry_Update::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0u;
  version_ = GOOGLE_ULONGLONG(0);
  sequence_number_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerListEntry_Update::~ServerListEntry_Update() {
  // @@protoc_insertion_point(destructor:RAMCloud.ProtoBuf.ServerListEntry.Update)
  SharedDtor();
}

void ServerListEntry_Update::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerListEntry_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerListEntry_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerListEntry_Update_descriptor_;
}

const ServerListEntry_Update& ServerListEntry_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerListEntry_2eproto();
  return *default_instance_;
}

ServerListEntry_Update* ServerListEntry_Update::default_instance_ = NULL;

ServerListEntry_Update* ServerListEntry_Update::New(::google::protobuf::Arena* arena) const {
  ServerListEntry_Update* n = new ServerListEntry_Update;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerListEntry_Update::Clear() {
// @@protoc_insertion_point(message_clear_start:RAMCloud.ProtoBuf.ServerListEntry.Update)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ServerListEntry_Update, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ServerListEntry_Update*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(version_, status_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ServerListEntry_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RAMCloud.ProtoBuf.ServerListEntry.Update)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed32 status = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // required uint64 version = 2;
      case 2: {
        if (tag == 16) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sequence_number;
        break;
      }

      // required uint64 sequence_number = 3;
      case 3: {
        if (tag == 24) {
         parse_sequence_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_number_)));
          set_has_sequence_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RAMCloud.ProtoBuf.ServerListEntry.Update)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RAMCloud.ProtoBuf.ServerListEntry.Update)
  return false;
#undef DO_
}

void ServerListEntry_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RAMCloud.ProtoBuf.ServerListEntry.Update)
  // required fixed32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->status(), output);
  }

  // required uint64 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->version(), output);
  }

  // required uint64 sequence_number = 3;
  if (has_sequence_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sequence_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RAMCloud.ProtoBuf.ServerListEntry.Update)
}

::google::protobuf::uint8* ServerListEntry_Update::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RAMCloud.ProtoBuf.ServerListEntry.Update)
  // required fixed32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->status(), target);
  }

  // required uint64 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->version(), target);
  }

  // required uint64 sequence_number = 3;
  if (has_sequence_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sequence_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RAMCloud.ProtoBuf.ServerListEntry.Update)
  return target;
}

int ServerListEntry_Update::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RAMCloud.ProtoBuf.ServerListEntry.Update)
  int total_size = 0;

  if (has_status()) {
    // required fixed32 status = 1;
    total_size += 1 + 4;
  }

  if (has_version()) {
    // required uint64 version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  if (has_sequence_number()) {
    // required uint64 sequence_number = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_number());
  }

  return total_size;
}
int ServerListEntry_Update::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RAMCloud.ProtoBuf.ServerListEntry.Update)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required fixed32 status = 1;
    total_size += 1 + 4;

    // required uint64 version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());

    // required uint64 sequence_number = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_number());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerListEntry_Update::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RAMCloud.ProtoBuf.ServerListEntry.Update)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ServerListEntry_Update* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerListEntry_Update>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RAMCloud.ProtoBuf.ServerListEntry.Update)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RAMCloud.ProtoBuf.ServerListEntry.Update)
    MergeFrom(*source);
  }
}

void ServerListEntry_Update::MergeFrom(const ServerListEntry_Update& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RAMCloud.ProtoBuf.ServerListEntry.Update)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_sequence_number()) {
      set_sequence_number(from.sequence_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ServerListEntry_Update::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RAMCloud.ProtoBuf.ServerListEntry.Update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerListEntry_Update::CopyFrom(const ServerListEntry_Update& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RAMCloud.ProtoBuf.ServerListEntry.Update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerListEntry_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ServerListEntry_Update::Swap(ServerListEntry_Update* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerListEntry_Update::InternalSwap(ServerListEntry_Update* other) {
  std::swap(status_, other->status_);
  std::swap(version_, other->version_);
  std::swap(sequence_number_, other->sequence_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerListEntry_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerListEntry_Update_descriptor_;
  metadata.reflection = ServerListEntry_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerListEntry::kServicesFieldNumber;
const int ServerListEntry::kServerIdFieldNumber;
const int ServerListEntry::kServiceLocatorFieldNumber;
const int ServerListEntry::kExpectedReadMbytesPerSecFieldNumber;
const int ServerListEntry::kStatusFieldNumber;
const int ServerListEntry::kReplicationIdFieldNumber;
const int ServerListEntry::kMasterRecoveryInfoFieldNumber;
const int ServerListEntry::kUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerListEntry::ServerListEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RAMCloud.ProtoBuf.ServerListEntry)
}

void ServerListEntry::InitAsDefaultInstance() {
  master_recovery_info_ = const_cast< ::RAMCloud::ProtoBuf::MasterRecoveryInfo*>(&::RAMCloud::ProtoBuf::MasterRecoveryInfo::default_instance());
}

ServerListEntry::ServerListEntry(const ServerListEntry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RAMCloud.ProtoBuf.ServerListEntry)
}

void ServerListEntry::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  services_ = 0u;
  server_id_ = GOOGLE_ULONGLONG(0);
  service_locator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expected_read_mbytes_per_sec_ = 0u;
  status_ = 0u;
  replication_id_ = GOOGLE_ULONGLONG(0);
  master_recovery_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerListEntry::~ServerListEntry() {
  // @@protoc_insertion_point(destructor:RAMCloud.ProtoBuf.ServerListEntry)
  SharedDtor();
}

void ServerListEntry::SharedDtor() {
  service_locator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete master_recovery_info_;
  }
}

void ServerListEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerListEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerListEntry_descriptor_;
}

const ServerListEntry& ServerListEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerListEntry_2eproto();
  return *default_instance_;
}

ServerListEntry* ServerListEntry::default_instance_ = NULL;

ServerListEntry* ServerListEntry::New(::google::protobuf::Arena* arena) const {
  ServerListEntry* n = new ServerListEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerListEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:RAMCloud.ProtoBuf.ServerListEntry)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ServerListEntry, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ServerListEntry*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(server_id_, expected_read_mbytes_per_sec_);
    if (has_service_locator()) {
      service_locator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    status_ = 0u;
    replication_id_ = GOOGLE_ULONGLONG(0);
    if (has_master_recovery_info()) {
      if (master_recovery_info_ != NULL) master_recovery_info_->::RAMCloud::ProtoBuf::MasterRecoveryInfo::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  update_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ServerListEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RAMCloud.ProtoBuf.ServerListEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed32 services = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &services_)));
          set_has_services();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_server_id;
        break;
      }

      // required fixed64 server_id = 2;
      case 2: {
        if (tag == 17) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_service_locator;
        break;
      }

      // required string service_locator = 3;
      case 3: {
        if (tag == 26) {
         parse_service_locator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_locator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->service_locator().data(), this->service_locator().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RAMCloud.ProtoBuf.ServerListEntry.service_locator");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_expected_read_mbytes_per_sec;
        break;
      }

      // required fixed32 expected_read_mbytes_per_sec = 4;
      case 4: {
        if (tag == 37) {
         parse_expected_read_mbytes_per_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &expected_read_mbytes_per_sec_)));
          set_has_expected_read_mbytes_per_sec();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_status;
        break;
      }

      // required fixed32 status = 5;
      case 5: {
        if (tag == 45) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_replication_id;
        break;
      }

      // required fixed64 replication_id = 6;
      case 6: {
        if (tag == 49) {
         parse_replication_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &replication_id_)));
          set_has_replication_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_master_recovery_info;
        break;
      }

      // required .RAMCloud.ProtoBuf.MasterRecoveryInfo master_recovery_info = 7;
      case 7: {
        if (tag == 58) {
         parse_master_recovery_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_master_recovery_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_update;
        break;
      }

      // repeated .RAMCloud.ProtoBuf.ServerListEntry.Update update = 8;
      case 8: {
        if (tag == 66) {
         parse_update:
          DO_(input->IncrementRecursionDepth());
         parse_loop_update:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_update()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_update;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RAMCloud.ProtoBuf.ServerListEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RAMCloud.ProtoBuf.ServerListEntry)
  return false;
#undef DO_
}

void ServerListEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RAMCloud.ProtoBuf.ServerListEntry)
  // required fixed32 services = 1;
  if (has_services()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->services(), output);
  }

  // required fixed64 server_id = 2;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->server_id(), output);
  }

  // required string service_locator = 3;
  if (has_service_locator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->service_locator().data(), this->service_locator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RAMCloud.ProtoBuf.ServerListEntry.service_locator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->service_locator(), output);
  }

  // required fixed32 expected_read_mbytes_per_sec = 4;
  if (has_expected_read_mbytes_per_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->expected_read_mbytes_per_sec(), output);
  }

  // required fixed32 status = 5;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->status(), output);
  }

  // required fixed64 replication_id = 6;
  if (has_replication_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(6, this->replication_id(), output);
  }

  // required .RAMCloud.ProtoBuf.MasterRecoveryInfo master_recovery_info = 7;
  if (has_master_recovery_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->master_recovery_info_, output);
  }

  // repeated .RAMCloud.ProtoBuf.ServerListEntry.Update update = 8;
  for (unsigned int i = 0, n = this->update_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->update(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RAMCloud.ProtoBuf.ServerListEntry)
}

::google::protobuf::uint8* ServerListEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RAMCloud.ProtoBuf.ServerListEntry)
  // required fixed32 services = 1;
  if (has_services()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->services(), target);
  }

  // required fixed64 server_id = 2;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->server_id(), target);
  }

  // required string service_locator = 3;
  if (has_service_locator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->service_locator().data(), this->service_locator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RAMCloud.ProtoBuf.ServerListEntry.service_locator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->service_locator(), target);
  }

  // required fixed32 expected_read_mbytes_per_sec = 4;
  if (has_expected_read_mbytes_per_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->expected_read_mbytes_per_sec(), target);
  }

  // required fixed32 status = 5;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->status(), target);
  }

  // required fixed64 replication_id = 6;
  if (has_replication_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(6, this->replication_id(), target);
  }

  // required .RAMCloud.ProtoBuf.MasterRecoveryInfo master_recovery_info = 7;
  if (has_master_recovery_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->master_recovery_info_, false, target);
  }

  // repeated .RAMCloud.ProtoBuf.ServerListEntry.Update update = 8;
  for (unsigned int i = 0, n = this->update_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->update(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RAMCloud.ProtoBuf.ServerListEntry)
  return target;
}

int ServerListEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RAMCloud.ProtoBuf.ServerListEntry)
  int total_size = 0;

  if (has_services()) {
    // required fixed32 services = 1;
    total_size += 1 + 4;
  }

  if (has_server_id()) {
    // required fixed64 server_id = 2;
    total_size += 1 + 8;
  }

  if (has_service_locator()) {
    // required string service_locator = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_locator());
  }

  if (has_expected_read_mbytes_per_sec()) {
    // required fixed32 expected_read_mbytes_per_sec = 4;
    total_size += 1 + 4;
  }

  if (has_status()) {
    // required fixed32 status = 5;
    total_size += 1 + 4;
  }

  if (has_replication_id()) {
    // required fixed64 replication_id = 6;
    total_size += 1 + 8;
  }

  if (has_master_recovery_info()) {
    // required .RAMCloud.ProtoBuf.MasterRecoveryInfo master_recovery_info = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->master_recovery_info_);
  }

  return total_size;
}
int ServerListEntry::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RAMCloud.ProtoBuf.ServerListEntry)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required fixed32 services = 1;
    total_size += 1 + 4;

    // required fixed64 server_id = 2;
    total_size += 1 + 8;

    // required string service_locator = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_locator());

    // required fixed32 expected_read_mbytes_per_sec = 4;
    total_size += 1 + 4;

    // required fixed32 status = 5;
    total_size += 1 + 4;

    // required fixed64 replication_id = 6;
    total_size += 1 + 8;

    // required .RAMCloud.ProtoBuf.MasterRecoveryInfo master_recovery_info = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->master_recovery_info_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .RAMCloud.ProtoBuf.ServerListEntry.Update update = 8;
  total_size += 1 * this->update_size();
  for (int i = 0; i < this->update_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->update(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerListEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RAMCloud.ProtoBuf.ServerListEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ServerListEntry* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerListEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RAMCloud.ProtoBuf.ServerListEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RAMCloud.ProtoBuf.ServerListEntry)
    MergeFrom(*source);
  }
}

void ServerListEntry::MergeFrom(const ServerListEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RAMCloud.ProtoBuf.ServerListEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  update_.MergeFrom(from.update_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_services()) {
      set_services(from.services());
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
    if (from.has_service_locator()) {
      set_has_service_locator();
      service_locator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_locator_);
    }
    if (from.has_expected_read_mbytes_per_sec()) {
      set_expected_read_mbytes_per_sec(from.expected_read_mbytes_per_sec());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_replication_id()) {
      set_replication_id(from.replication_id());
    }
    if (from.has_master_recovery_info()) {
      mutable_master_recovery_info()->::RAMCloud::ProtoBuf::MasterRecoveryInfo::MergeFrom(from.master_recovery_info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ServerListEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RAMCloud.ProtoBuf.ServerListEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerListEntry::CopyFrom(const ServerListEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RAMCloud.ProtoBuf.ServerListEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerListEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->update())) return false;
  return true;
}

void ServerListEntry::Swap(ServerListEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerListEntry::InternalSwap(ServerListEntry* other) {
  std::swap(services_, other->services_);
  std::swap(server_id_, other->server_id_);
  service_locator_.Swap(&other->service_locator_);
  std::swap(expected_read_mbytes_per_sec_, other->expected_read_mbytes_per_sec_);
  std::swap(status_, other->status_);
  std::swap(replication_id_, other->replication_id_);
  std::swap(master_recovery_info_, other->master_recovery_info_);
  update_.UnsafeArenaSwap(&other->update_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerListEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerListEntry_descriptor_;
  metadata.reflection = ServerListEntry_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerListEntry_Update

// required fixed32 status = 1;
bool ServerListEntry_Update::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ServerListEntry_Update::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
void ServerListEntry_Update::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
void ServerListEntry_Update::clear_status() {
  status_ = 0u;
  clear_has_status();
}
 ::google::protobuf::uint32 ServerListEntry_Update::status() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.Update.status)
  return status_;
}
 void ServerListEntry_Update::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.Update.status)
}

// required uint64 version = 2;
bool ServerListEntry_Update::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ServerListEntry_Update::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void ServerListEntry_Update::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void ServerListEntry_Update::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
 ::google::protobuf::uint64 ServerListEntry_Update::version() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.Update.version)
  return version_;
}
 void ServerListEntry_Update::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.Update.version)
}

// required uint64 sequence_number = 3;
bool ServerListEntry_Update::has_sequence_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ServerListEntry_Update::set_has_sequence_number() {
  _has_bits_[0] |= 0x00000004u;
}
void ServerListEntry_Update::clear_has_sequence_number() {
  _has_bits_[0] &= ~0x00000004u;
}
void ServerListEntry_Update::clear_sequence_number() {
  sequence_number_ = GOOGLE_ULONGLONG(0);
  clear_has_sequence_number();
}
 ::google::protobuf::uint64 ServerListEntry_Update::sequence_number() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.Update.sequence_number)
  return sequence_number_;
}
 void ServerListEntry_Update::set_sequence_number(::google::protobuf::uint64 value) {
  set_has_sequence_number();
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.Update.sequence_number)
}

// -------------------------------------------------------------------

// ServerListEntry

// required fixed32 services = 1;
bool ServerListEntry::has_services() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ServerListEntry::set_has_services() {
  _has_bits_[0] |= 0x00000001u;
}
void ServerListEntry::clear_has_services() {
  _has_bits_[0] &= ~0x00000001u;
}
void ServerListEntry::clear_services() {
  services_ = 0u;
  clear_has_services();
}
 ::google::protobuf::uint32 ServerListEntry::services() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.services)
  return services_;
}
 void ServerListEntry::set_services(::google::protobuf::uint32 value) {
  set_has_services();
  services_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.services)
}

// required fixed64 server_id = 2;
bool ServerListEntry::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ServerListEntry::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ServerListEntry::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ServerListEntry::clear_server_id() {
  server_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_id();
}
 ::google::protobuf::uint64 ServerListEntry::server_id() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.server_id)
  return server_id_;
}
 void ServerListEntry::set_server_id(::google::protobuf::uint64 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.server_id)
}

// required string service_locator = 3;
bool ServerListEntry::has_service_locator() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ServerListEntry::set_has_service_locator() {
  _has_bits_[0] |= 0x00000004u;
}
void ServerListEntry::clear_has_service_locator() {
  _has_bits_[0] &= ~0x00000004u;
}
void ServerListEntry::clear_service_locator() {
  service_locator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_service_locator();
}
 const ::std::string& ServerListEntry::service_locator() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
  return service_locator_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerListEntry::set_service_locator(const ::std::string& value) {
  set_has_service_locator();
  service_locator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
}
 void ServerListEntry::set_service_locator(const char* value) {
  set_has_service_locator();
  service_locator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
}
 void ServerListEntry::set_service_locator(const char* value, size_t size) {
  set_has_service_locator();
  service_locator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
}
 ::std::string* ServerListEntry::mutable_service_locator() {
  set_has_service_locator();
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
  return service_locator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerListEntry::release_service_locator() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
  clear_has_service_locator();
  return service_locator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerListEntry::set_allocated_service_locator(::std::string* service_locator) {
  if (service_locator != NULL) {
    set_has_service_locator();
  } else {
    clear_has_service_locator();
  }
  service_locator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_locator);
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
}

// required fixed32 expected_read_mbytes_per_sec = 4;
bool ServerListEntry::has_expected_read_mbytes_per_sec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ServerListEntry::set_has_expected_read_mbytes_per_sec() {
  _has_bits_[0] |= 0x00000008u;
}
void ServerListEntry::clear_has_expected_read_mbytes_per_sec() {
  _has_bits_[0] &= ~0x00000008u;
}
void ServerListEntry::clear_expected_read_mbytes_per_sec() {
  expected_read_mbytes_per_sec_ = 0u;
  clear_has_expected_read_mbytes_per_sec();
}
 ::google::protobuf::uint32 ServerListEntry::expected_read_mbytes_per_sec() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.expected_read_mbytes_per_sec)
  return expected_read_mbytes_per_sec_;
}
 void ServerListEntry::set_expected_read_mbytes_per_sec(::google::protobuf::uint32 value) {
  set_has_expected_read_mbytes_per_sec();
  expected_read_mbytes_per_sec_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.expected_read_mbytes_per_sec)
}

// required fixed32 status = 5;
bool ServerListEntry::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ServerListEntry::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
void ServerListEntry::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
void ServerListEntry::clear_status() {
  status_ = 0u;
  clear_has_status();
}
 ::google::protobuf::uint32 ServerListEntry::status() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.status)
  return status_;
}
 void ServerListEntry::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.status)
}

// required fixed64 replication_id = 6;
bool ServerListEntry::has_replication_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ServerListEntry::set_has_replication_id() {
  _has_bits_[0] |= 0x00000020u;
}
void ServerListEntry::clear_has_replication_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void ServerListEntry::clear_replication_id() {
  replication_id_ = GOOGLE_ULONGLONG(0);
  clear_has_replication_id();
}
 ::google::protobuf::uint64 ServerListEntry::replication_id() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.replication_id)
  return replication_id_;
}
 void ServerListEntry::set_replication_id(::google::protobuf::uint64 value) {
  set_has_replication_id();
  replication_id_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.replication_id)
}

// required .RAMCloud.ProtoBuf.MasterRecoveryInfo master_recovery_info = 7;
bool ServerListEntry::has_master_recovery_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ServerListEntry::set_has_master_recovery_info() {
  _has_bits_[0] |= 0x00000040u;
}
void ServerListEntry::clear_has_master_recovery_info() {
  _has_bits_[0] &= ~0x00000040u;
}
void ServerListEntry::clear_master_recovery_info() {
  if (master_recovery_info_ != NULL) master_recovery_info_->::RAMCloud::ProtoBuf::MasterRecoveryInfo::Clear();
  clear_has_master_recovery_info();
}
const ::RAMCloud::ProtoBuf::MasterRecoveryInfo& ServerListEntry::master_recovery_info() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.master_recovery_info)
  return master_recovery_info_ != NULL ? *master_recovery_info_ : *default_instance_->master_recovery_info_;
}
::RAMCloud::ProtoBuf::MasterRecoveryInfo* ServerListEntry::mutable_master_recovery_info() {
  set_has_master_recovery_info();
  if (master_recovery_info_ == NULL) {
    master_recovery_info_ = new ::RAMCloud::ProtoBuf::MasterRecoveryInfo;
  }
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.ServerListEntry.master_recovery_info)
  return master_recovery_info_;
}
::RAMCloud::ProtoBuf::MasterRecoveryInfo* ServerListEntry::release_master_recovery_info() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.ServerListEntry.master_recovery_info)
  clear_has_master_recovery_info();
  ::RAMCloud::ProtoBuf::MasterRecoveryInfo* temp = master_recovery_info_;
  master_recovery_info_ = NULL;
  return temp;
}
void ServerListEntry::set_allocated_master_recovery_info(::RAMCloud::ProtoBuf::MasterRecoveryInfo* master_recovery_info) {
  delete master_recovery_info_;
  master_recovery_info_ = master_recovery_info;
  if (master_recovery_info) {
    set_has_master_recovery_info();
  } else {
    clear_has_master_recovery_info();
  }
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.ServerListEntry.master_recovery_info)
}

// repeated .RAMCloud.ProtoBuf.ServerListEntry.Update update = 8;
int ServerListEntry::update_size() const {
  return update_.size();
}
void ServerListEntry::clear_update() {
  update_.Clear();
}
const ::RAMCloud::ProtoBuf::ServerListEntry_Update& ServerListEntry::update(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.update)
  return update_.Get(index);
}
::RAMCloud::ProtoBuf::ServerListEntry_Update* ServerListEntry::mutable_update(int index) {
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.ServerListEntry.update)
  return update_.Mutable(index);
}
::RAMCloud::ProtoBuf::ServerListEntry_Update* ServerListEntry::add_update() {
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.ServerListEntry.update)
  return update_.Add();
}
::google::protobuf::RepeatedPtrField< ::RAMCloud::ProtoBuf::ServerListEntry_Update >*
ServerListEntry::mutable_update() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.ServerListEntry.update)
  return &update_;
}
const ::google::protobuf::RepeatedPtrField< ::RAMCloud::ProtoBuf::ServerListEntry_Update >&
ServerListEntry::update() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.ServerListEntry.update)
  return update_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf
}  // namespace RAMCloud

// @@protoc_insertion_point(global_scope)
// RAMCloud pragma [GCCWARN=0]

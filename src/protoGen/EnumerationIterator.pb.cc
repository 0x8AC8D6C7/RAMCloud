// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EnumerationIterator.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EnumerationIterator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace RAMCloud {
namespace ProtoBuf {

namespace {

const ::google::protobuf::Descriptor* EnumerationIterator_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnumerationIterator_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnumerationIterator_Frame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnumerationIterator_Frame_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_EnumerationIterator_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_EnumerationIterator_2eproto() {
  protobuf_AddDesc_EnumerationIterator_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "EnumerationIterator.proto");
  GOOGLE_CHECK(file != NULL);
  EnumerationIterator_descriptor_ = file->message_type(0);
  static const int EnumerationIterator_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumerationIterator, frames_),
  };
  EnumerationIterator_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnumerationIterator_descriptor_,
      EnumerationIterator::default_instance_,
      EnumerationIterator_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumerationIterator, _has_bits_[0]),
      -1,
      -1,
      sizeof(EnumerationIterator),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumerationIterator, _internal_metadata_),
      -1);
  EnumerationIterator_Frame_descriptor_ = EnumerationIterator_descriptor_->nested_type(0);
  static const int EnumerationIterator_Frame_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumerationIterator_Frame, tablet_start_hash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumerationIterator_Frame, tablet_end_hash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumerationIterator_Frame, num_buckets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumerationIterator_Frame, bucket_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumerationIterator_Frame, bucket_next_hash_),
  };
  EnumerationIterator_Frame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnumerationIterator_Frame_descriptor_,
      EnumerationIterator_Frame::default_instance_,
      EnumerationIterator_Frame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumerationIterator_Frame, _has_bits_[0]),
      -1,
      -1,
      sizeof(EnumerationIterator_Frame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumerationIterator_Frame, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_EnumerationIterator_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnumerationIterator_descriptor_, &EnumerationIterator::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnumerationIterator_Frame_descriptor_, &EnumerationIterator_Frame::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_EnumerationIterator_2eproto() {
  delete EnumerationIterator::default_instance_;
  delete EnumerationIterator_reflection_;
  delete EnumerationIterator_Frame::default_instance_;
  delete EnumerationIterator_Frame_reflection_;
}

void protobuf_AddDesc_EnumerationIterator_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_EnumerationIterator_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031EnumerationIterator.proto\022\021RAMCloud.Pr"
    "otoBuf\"\326\001\n\023EnumerationIterator\022<\n\006frames"
    "\030\001 \003(\0132,.RAMCloud.ProtoBuf.EnumerationIt"
    "erator.Frame\032\200\001\n\005Frame\022\031\n\021tablet_start_h"
    "ash\030\001 \002(\004\022\027\n\017tablet_end_hash\030\002 \002(\004\022\023\n\013nu"
    "m_buckets\030\003 \002(\004\022\024\n\014bucket_index\030\004 \002(\004\022\030\n"
    "\020bucket_next_hash\030\005 \002(\004", 263);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EnumerationIterator.proto", &protobuf_RegisterTypes);
  EnumerationIterator::default_instance_ = new EnumerationIterator();
  EnumerationIterator_Frame::default_instance_ = new EnumerationIterator_Frame();
  EnumerationIterator::default_instance_->InitAsDefaultInstance();
  EnumerationIterator_Frame::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EnumerationIterator_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EnumerationIterator_2eproto {
  StaticDescriptorInitializer_EnumerationIterator_2eproto() {
    protobuf_AddDesc_EnumerationIterator_2eproto();
  }
} static_descriptor_initializer_EnumerationIterator_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnumerationIterator_Frame::kTabletStartHashFieldNumber;
const int EnumerationIterator_Frame::kTabletEndHashFieldNumber;
const int EnumerationIterator_Frame::kNumBucketsFieldNumber;
const int EnumerationIterator_Frame::kBucketIndexFieldNumber;
const int EnumerationIterator_Frame::kBucketNextHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumerationIterator_Frame::EnumerationIterator_Frame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
}

void EnumerationIterator_Frame::InitAsDefaultInstance() {
}

EnumerationIterator_Frame::EnumerationIterator_Frame(const EnumerationIterator_Frame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
}

void EnumerationIterator_Frame::SharedCtor() {
  _cached_size_ = 0;
  tablet_start_hash_ = GOOGLE_ULONGLONG(0);
  tablet_end_hash_ = GOOGLE_ULONGLONG(0);
  num_buckets_ = GOOGLE_ULONGLONG(0);
  bucket_index_ = GOOGLE_ULONGLONG(0);
  bucket_next_hash_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnumerationIterator_Frame::~EnumerationIterator_Frame() {
  // @@protoc_insertion_point(destructor:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  SharedDtor();
}

void EnumerationIterator_Frame::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EnumerationIterator_Frame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnumerationIterator_Frame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumerationIterator_Frame_descriptor_;
}

const EnumerationIterator_Frame& EnumerationIterator_Frame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EnumerationIterator_2eproto();
  return *default_instance_;
}

EnumerationIterator_Frame* EnumerationIterator_Frame::default_instance_ = NULL;

EnumerationIterator_Frame* EnumerationIterator_Frame::New(::google::protobuf::Arena* arena) const {
  EnumerationIterator_Frame* n = new EnumerationIterator_Frame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnumerationIterator_Frame::Clear() {
// @@protoc_insertion_point(message_clear_start:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EnumerationIterator_Frame, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EnumerationIterator_Frame*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(tablet_start_hash_, bucket_next_hash_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EnumerationIterator_Frame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 tablet_start_hash = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tablet_start_hash_)));
          set_has_tablet_start_hash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tablet_end_hash;
        break;
      }

      // required uint64 tablet_end_hash = 2;
      case 2: {
        if (tag == 16) {
         parse_tablet_end_hash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tablet_end_hash_)));
          set_has_tablet_end_hash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_num_buckets;
        break;
      }

      // required uint64 num_buckets = 3;
      case 3: {
        if (tag == 24) {
         parse_num_buckets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_buckets_)));
          set_has_num_buckets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bucket_index;
        break;
      }

      // required uint64 bucket_index = 4;
      case 4: {
        if (tag == 32) {
         parse_bucket_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bucket_index_)));
          set_has_bucket_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_bucket_next_hash;
        break;
      }

      // required uint64 bucket_next_hash = 5;
      case 5: {
        if (tag == 40) {
         parse_bucket_next_hash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bucket_next_hash_)));
          set_has_bucket_next_hash();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  return false;
#undef DO_
}

void EnumerationIterator_Frame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  // required uint64 tablet_start_hash = 1;
  if (has_tablet_start_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->tablet_start_hash(), output);
  }

  // required uint64 tablet_end_hash = 2;
  if (has_tablet_end_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->tablet_end_hash(), output);
  }

  // required uint64 num_buckets = 3;
  if (has_num_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->num_buckets(), output);
  }

  // required uint64 bucket_index = 4;
  if (has_bucket_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bucket_index(), output);
  }

  // required uint64 bucket_next_hash = 5;
  if (has_bucket_next_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->bucket_next_hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
}

::google::protobuf::uint8* EnumerationIterator_Frame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  // required uint64 tablet_start_hash = 1;
  if (has_tablet_start_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->tablet_start_hash(), target);
  }

  // required uint64 tablet_end_hash = 2;
  if (has_tablet_end_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->tablet_end_hash(), target);
  }

  // required uint64 num_buckets = 3;
  if (has_num_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->num_buckets(), target);
  }

  // required uint64 bucket_index = 4;
  if (has_bucket_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bucket_index(), target);
  }

  // required uint64 bucket_next_hash = 5;
  if (has_bucket_next_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->bucket_next_hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  return target;
}

int EnumerationIterator_Frame::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  int total_size = 0;

  if (has_tablet_start_hash()) {
    // required uint64 tablet_start_hash = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tablet_start_hash());
  }

  if (has_tablet_end_hash()) {
    // required uint64 tablet_end_hash = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tablet_end_hash());
  }

  if (has_num_buckets()) {
    // required uint64 num_buckets = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_buckets());
  }

  if (has_bucket_index()) {
    // required uint64 bucket_index = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bucket_index());
  }

  if (has_bucket_next_hash()) {
    // required uint64 bucket_next_hash = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bucket_next_hash());
  }

  return total_size;
}
int EnumerationIterator_Frame::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required uint64 tablet_start_hash = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tablet_start_hash());

    // required uint64 tablet_end_hash = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tablet_end_hash());

    // required uint64 num_buckets = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_buckets());

    // required uint64 bucket_index = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bucket_index());

    // required uint64 bucket_next_hash = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bucket_next_hash());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnumerationIterator_Frame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnumerationIterator_Frame* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnumerationIterator_Frame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
    MergeFrom(*source);
  }
}

void EnumerationIterator_Frame::MergeFrom(const EnumerationIterator_Frame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tablet_start_hash()) {
      set_tablet_start_hash(from.tablet_start_hash());
    }
    if (from.has_tablet_end_hash()) {
      set_tablet_end_hash(from.tablet_end_hash());
    }
    if (from.has_num_buckets()) {
      set_num_buckets(from.num_buckets());
    }
    if (from.has_bucket_index()) {
      set_bucket_index(from.bucket_index());
    }
    if (from.has_bucket_next_hash()) {
      set_bucket_next_hash(from.bucket_next_hash());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EnumerationIterator_Frame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnumerationIterator_Frame::CopyFrom(const EnumerationIterator_Frame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RAMCloud.ProtoBuf.EnumerationIterator.Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnumerationIterator_Frame::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void EnumerationIterator_Frame::Swap(EnumerationIterator_Frame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumerationIterator_Frame::InternalSwap(EnumerationIterator_Frame* other) {
  std::swap(tablet_start_hash_, other->tablet_start_hash_);
  std::swap(tablet_end_hash_, other->tablet_end_hash_);
  std::swap(num_buckets_, other->num_buckets_);
  std::swap(bucket_index_, other->bucket_index_);
  std::swap(bucket_next_hash_, other->bucket_next_hash_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnumerationIterator_Frame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnumerationIterator_Frame_descriptor_;
  metadata.reflection = EnumerationIterator_Frame_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnumerationIterator::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumerationIterator::EnumerationIterator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RAMCloud.ProtoBuf.EnumerationIterator)
}

void EnumerationIterator::InitAsDefaultInstance() {
}

EnumerationIterator::EnumerationIterator(const EnumerationIterator& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RAMCloud.ProtoBuf.EnumerationIterator)
}

void EnumerationIterator::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnumerationIterator::~EnumerationIterator() {
  // @@protoc_insertion_point(destructor:RAMCloud.ProtoBuf.EnumerationIterator)
  SharedDtor();
}

void EnumerationIterator::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EnumerationIterator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnumerationIterator::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumerationIterator_descriptor_;
}

const EnumerationIterator& EnumerationIterator::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EnumerationIterator_2eproto();
  return *default_instance_;
}

EnumerationIterator* EnumerationIterator::default_instance_ = NULL;

EnumerationIterator* EnumerationIterator::New(::google::protobuf::Arena* arena) const {
  EnumerationIterator* n = new EnumerationIterator;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnumerationIterator::Clear() {
// @@protoc_insertion_point(message_clear_start:RAMCloud.ProtoBuf.EnumerationIterator)
  frames_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EnumerationIterator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RAMCloud.ProtoBuf.EnumerationIterator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .RAMCloud.ProtoBuf.EnumerationIterator.Frame frames = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_frames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_frames;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RAMCloud.ProtoBuf.EnumerationIterator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RAMCloud.ProtoBuf.EnumerationIterator)
  return false;
#undef DO_
}

void EnumerationIterator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RAMCloud.ProtoBuf.EnumerationIterator)
  // repeated .RAMCloud.ProtoBuf.EnumerationIterator.Frame frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RAMCloud.ProtoBuf.EnumerationIterator)
}

::google::protobuf::uint8* EnumerationIterator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RAMCloud.ProtoBuf.EnumerationIterator)
  // repeated .RAMCloud.ProtoBuf.EnumerationIterator.Frame frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RAMCloud.ProtoBuf.EnumerationIterator)
  return target;
}

int EnumerationIterator::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RAMCloud.ProtoBuf.EnumerationIterator)
  int total_size = 0;

  // repeated .RAMCloud.ProtoBuf.EnumerationIterator.Frame frames = 1;
  total_size += 1 * this->frames_size();
  for (int i = 0; i < this->frames_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->frames(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnumerationIterator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RAMCloud.ProtoBuf.EnumerationIterator)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnumerationIterator* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnumerationIterator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RAMCloud.ProtoBuf.EnumerationIterator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RAMCloud.ProtoBuf.EnumerationIterator)
    MergeFrom(*source);
  }
}

void EnumerationIterator::MergeFrom(const EnumerationIterator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RAMCloud.ProtoBuf.EnumerationIterator)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  frames_.MergeFrom(from.frames_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EnumerationIterator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RAMCloud.ProtoBuf.EnumerationIterator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnumerationIterator::CopyFrom(const EnumerationIterator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RAMCloud.ProtoBuf.EnumerationIterator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnumerationIterator::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->frames())) return false;
  return true;
}

void EnumerationIterator::Swap(EnumerationIterator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumerationIterator::InternalSwap(EnumerationIterator* other) {
  frames_.UnsafeArenaSwap(&other->frames_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnumerationIterator::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnumerationIterator_descriptor_;
  metadata.reflection = EnumerationIterator_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnumerationIterator_Frame

// required uint64 tablet_start_hash = 1;
bool EnumerationIterator_Frame::has_tablet_start_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnumerationIterator_Frame::set_has_tablet_start_hash() {
  _has_bits_[0] |= 0x00000001u;
}
void EnumerationIterator_Frame::clear_has_tablet_start_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnumerationIterator_Frame::clear_tablet_start_hash() {
  tablet_start_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_tablet_start_hash();
}
 ::google::protobuf::uint64 EnumerationIterator_Frame::tablet_start_hash() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.EnumerationIterator.Frame.tablet_start_hash)
  return tablet_start_hash_;
}
 void EnumerationIterator_Frame::set_tablet_start_hash(::google::protobuf::uint64 value) {
  set_has_tablet_start_hash();
  tablet_start_hash_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.EnumerationIterator.Frame.tablet_start_hash)
}

// required uint64 tablet_end_hash = 2;
bool EnumerationIterator_Frame::has_tablet_end_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnumerationIterator_Frame::set_has_tablet_end_hash() {
  _has_bits_[0] |= 0x00000002u;
}
void EnumerationIterator_Frame::clear_has_tablet_end_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnumerationIterator_Frame::clear_tablet_end_hash() {
  tablet_end_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_tablet_end_hash();
}
 ::google::protobuf::uint64 EnumerationIterator_Frame::tablet_end_hash() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.EnumerationIterator.Frame.tablet_end_hash)
  return tablet_end_hash_;
}
 void EnumerationIterator_Frame::set_tablet_end_hash(::google::protobuf::uint64 value) {
  set_has_tablet_end_hash();
  tablet_end_hash_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.EnumerationIterator.Frame.tablet_end_hash)
}

// required uint64 num_buckets = 3;
bool EnumerationIterator_Frame::has_num_buckets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EnumerationIterator_Frame::set_has_num_buckets() {
  _has_bits_[0] |= 0x00000004u;
}
void EnumerationIterator_Frame::clear_has_num_buckets() {
  _has_bits_[0] &= ~0x00000004u;
}
void EnumerationIterator_Frame::clear_num_buckets() {
  num_buckets_ = GOOGLE_ULONGLONG(0);
  clear_has_num_buckets();
}
 ::google::protobuf::uint64 EnumerationIterator_Frame::num_buckets() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.EnumerationIterator.Frame.num_buckets)
  return num_buckets_;
}
 void EnumerationIterator_Frame::set_num_buckets(::google::protobuf::uint64 value) {
  set_has_num_buckets();
  num_buckets_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.EnumerationIterator.Frame.num_buckets)
}

// required uint64 bucket_index = 4;
bool EnumerationIterator_Frame::has_bucket_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void EnumerationIterator_Frame::set_has_bucket_index() {
  _has_bits_[0] |= 0x00000008u;
}
void EnumerationIterator_Frame::clear_has_bucket_index() {
  _has_bits_[0] &= ~0x00000008u;
}
void EnumerationIterator_Frame::clear_bucket_index() {
  bucket_index_ = GOOGLE_ULONGLONG(0);
  clear_has_bucket_index();
}
 ::google::protobuf::uint64 EnumerationIterator_Frame::bucket_index() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.EnumerationIterator.Frame.bucket_index)
  return bucket_index_;
}
 void EnumerationIterator_Frame::set_bucket_index(::google::protobuf::uint64 value) {
  set_has_bucket_index();
  bucket_index_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.EnumerationIterator.Frame.bucket_index)
}

// required uint64 bucket_next_hash = 5;
bool EnumerationIterator_Frame::has_bucket_next_hash() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void EnumerationIterator_Frame::set_has_bucket_next_hash() {
  _has_bits_[0] |= 0x00000010u;
}
void EnumerationIterator_Frame::clear_has_bucket_next_hash() {
  _has_bits_[0] &= ~0x00000010u;
}
void EnumerationIterator_Frame::clear_bucket_next_hash() {
  bucket_next_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_bucket_next_hash();
}
 ::google::protobuf::uint64 EnumerationIterator_Frame::bucket_next_hash() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.EnumerationIterator.Frame.bucket_next_hash)
  return bucket_next_hash_;
}
 void EnumerationIterator_Frame::set_bucket_next_hash(::google::protobuf::uint64 value) {
  set_has_bucket_next_hash();
  bucket_next_hash_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.EnumerationIterator.Frame.bucket_next_hash)
}

// -------------------------------------------------------------------

// EnumerationIterator

// repeated .RAMCloud.ProtoBuf.EnumerationIterator.Frame frames = 1;
int EnumerationIterator::frames_size() const {
  return frames_.size();
}
void EnumerationIterator::clear_frames() {
  frames_.Clear();
}
const ::RAMCloud::ProtoBuf::EnumerationIterator_Frame& EnumerationIterator::frames(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.EnumerationIterator.frames)
  return frames_.Get(index);
}
::RAMCloud::ProtoBuf::EnumerationIterator_Frame* EnumerationIterator::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.EnumerationIterator.frames)
  return frames_.Mutable(index);
}
::RAMCloud::ProtoBuf::EnumerationIterator_Frame* EnumerationIterator::add_frames() {
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.EnumerationIterator.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::RAMCloud::ProtoBuf::EnumerationIterator_Frame >*
EnumerationIterator::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.EnumerationIterator.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::RAMCloud::ProtoBuf::EnumerationIterator_Frame >&
EnumerationIterator::frames() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.EnumerationIterator.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf
}  // namespace RAMCloud

// @@protoc_insertion_point(global_scope)
// RAMCloud pragma [GCCWARN=0]

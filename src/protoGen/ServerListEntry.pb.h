// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerListEntry.proto

#ifndef PROTOBUF_ServerListEntry_2eproto__INCLUDED
#define PROTOBUF_ServerListEntry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "MasterRecoveryInfo.pb.h"
// @@protoc_insertion_point(includes)

namespace RAMCloud {
namespace ProtoBuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ServerListEntry_2eproto();
void protobuf_AssignDesc_ServerListEntry_2eproto();
void protobuf_ShutdownFile_ServerListEntry_2eproto();

class ServerListEntry;
class ServerListEntry_Update;

// ===================================================================

class ServerListEntry_Update : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RAMCloud.ProtoBuf.ServerListEntry.Update) */ {
 public:
  ServerListEntry_Update();
  virtual ~ServerListEntry_Update();

  ServerListEntry_Update(const ServerListEntry_Update& from);

  inline ServerListEntry_Update& operator=(const ServerListEntry_Update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerListEntry_Update& default_instance();

  void Swap(ServerListEntry_Update* other);

  // implements Message ----------------------------------------------

  inline ServerListEntry_Update* New() const { return New(NULL); }

  ServerListEntry_Update* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerListEntry_Update& from);
  void MergeFrom(const ServerListEntry_Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerListEntry_Update* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // required uint64 version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // required uint64 sequence_number = 3;
  bool has_sequence_number() const;
  void clear_sequence_number();
  static const int kSequenceNumberFieldNumber = 3;
  ::google::protobuf::uint64 sequence_number() const;
  void set_sequence_number(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:RAMCloud.ProtoBuf.ServerListEntry.Update)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_sequence_number();
  inline void clear_has_sequence_number();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint64 sequence_number_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_ServerListEntry_2eproto();
  friend void protobuf_AssignDesc_ServerListEntry_2eproto();
  friend void protobuf_ShutdownFile_ServerListEntry_2eproto();

  void InitAsDefaultInstance();
  static ServerListEntry_Update* default_instance_;
};
// -------------------------------------------------------------------

class ServerListEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RAMCloud.ProtoBuf.ServerListEntry) */ {
 public:
  ServerListEntry();
  virtual ~ServerListEntry();

  ServerListEntry(const ServerListEntry& from);

  inline ServerListEntry& operator=(const ServerListEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerListEntry& default_instance();

  void Swap(ServerListEntry* other);

  // implements Message ----------------------------------------------

  inline ServerListEntry* New() const { return New(NULL); }

  ServerListEntry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerListEntry& from);
  void MergeFrom(const ServerListEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerListEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ServerListEntry_Update Update;

  // accessors -------------------------------------------------------

  // required fixed32 services = 1;
  bool has_services() const;
  void clear_services();
  static const int kServicesFieldNumber = 1;
  ::google::protobuf::uint32 services() const;
  void set_services(::google::protobuf::uint32 value);

  // required fixed64 server_id = 2;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::uint64 server_id() const;
  void set_server_id(::google::protobuf::uint64 value);

  // required string service_locator = 3;
  bool has_service_locator() const;
  void clear_service_locator();
  static const int kServiceLocatorFieldNumber = 3;
  const ::std::string& service_locator() const;
  void set_service_locator(const ::std::string& value);
  void set_service_locator(const char* value);
  void set_service_locator(const char* value, size_t size);
  ::std::string* mutable_service_locator();
  ::std::string* release_service_locator();
  void set_allocated_service_locator(::std::string* service_locator);

  // required fixed32 expected_read_mbytes_per_sec = 4;
  bool has_expected_read_mbytes_per_sec() const;
  void clear_expected_read_mbytes_per_sec();
  static const int kExpectedReadMbytesPerSecFieldNumber = 4;
  ::google::protobuf::uint32 expected_read_mbytes_per_sec() const;
  void set_expected_read_mbytes_per_sec(::google::protobuf::uint32 value);

  // required fixed32 status = 5;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // required fixed64 replication_id = 6;
  bool has_replication_id() const;
  void clear_replication_id();
  static const int kReplicationIdFieldNumber = 6;
  ::google::protobuf::uint64 replication_id() const;
  void set_replication_id(::google::protobuf::uint64 value);

  // required .RAMCloud.ProtoBuf.MasterRecoveryInfo master_recovery_info = 7;
  bool has_master_recovery_info() const;
  void clear_master_recovery_info();
  static const int kMasterRecoveryInfoFieldNumber = 7;
  const ::RAMCloud::ProtoBuf::MasterRecoveryInfo& master_recovery_info() const;
  ::RAMCloud::ProtoBuf::MasterRecoveryInfo* mutable_master_recovery_info();
  ::RAMCloud::ProtoBuf::MasterRecoveryInfo* release_master_recovery_info();
  void set_allocated_master_recovery_info(::RAMCloud::ProtoBuf::MasterRecoveryInfo* master_recovery_info);

  // repeated .RAMCloud.ProtoBuf.ServerListEntry.Update update = 8;
  int update_size() const;
  void clear_update();
  static const int kUpdateFieldNumber = 8;
  const ::RAMCloud::ProtoBuf::ServerListEntry_Update& update(int index) const;
  ::RAMCloud::ProtoBuf::ServerListEntry_Update* mutable_update(int index);
  ::RAMCloud::ProtoBuf::ServerListEntry_Update* add_update();
  ::google::protobuf::RepeatedPtrField< ::RAMCloud::ProtoBuf::ServerListEntry_Update >*
      mutable_update();
  const ::google::protobuf::RepeatedPtrField< ::RAMCloud::ProtoBuf::ServerListEntry_Update >&
      update() const;

  // @@protoc_insertion_point(class_scope:RAMCloud.ProtoBuf.ServerListEntry)
 private:
  inline void set_has_services();
  inline void clear_has_services();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_service_locator();
  inline void clear_has_service_locator();
  inline void set_has_expected_read_mbytes_per_sec();
  inline void clear_has_expected_read_mbytes_per_sec();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_replication_id();
  inline void clear_has_replication_id();
  inline void set_has_master_recovery_info();
  inline void clear_has_master_recovery_info();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 server_id_;
  ::google::protobuf::uint32 services_;
  ::google::protobuf::uint32 expected_read_mbytes_per_sec_;
  ::google::protobuf::internal::ArenaStringPtr service_locator_;
  ::google::protobuf::uint64 replication_id_;
  ::RAMCloud::ProtoBuf::MasterRecoveryInfo* master_recovery_info_;
  ::google::protobuf::RepeatedPtrField< ::RAMCloud::ProtoBuf::ServerListEntry_Update > update_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_ServerListEntry_2eproto();
  friend void protobuf_AssignDesc_ServerListEntry_2eproto();
  friend void protobuf_ShutdownFile_ServerListEntry_2eproto();

  void InitAsDefaultInstance();
  static ServerListEntry* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerListEntry_Update

// required fixed32 status = 1;
inline bool ServerListEntry_Update::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerListEntry_Update::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerListEntry_Update::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerListEntry_Update::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ServerListEntry_Update::status() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.Update.status)
  return status_;
}
inline void ServerListEntry_Update::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.Update.status)
}

// required uint64 version = 2;
inline bool ServerListEntry_Update::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerListEntry_Update::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerListEntry_Update::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerListEntry_Update::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 ServerListEntry_Update::version() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.Update.version)
  return version_;
}
inline void ServerListEntry_Update::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.Update.version)
}

// required uint64 sequence_number = 3;
inline bool ServerListEntry_Update::has_sequence_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerListEntry_Update::set_has_sequence_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerListEntry_Update::clear_has_sequence_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerListEntry_Update::clear_sequence_number() {
  sequence_number_ = GOOGLE_ULONGLONG(0);
  clear_has_sequence_number();
}
inline ::google::protobuf::uint64 ServerListEntry_Update::sequence_number() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.Update.sequence_number)
  return sequence_number_;
}
inline void ServerListEntry_Update::set_sequence_number(::google::protobuf::uint64 value) {
  set_has_sequence_number();
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.Update.sequence_number)
}

// -------------------------------------------------------------------

// ServerListEntry

// required fixed32 services = 1;
inline bool ServerListEntry::has_services() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerListEntry::set_has_services() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerListEntry::clear_has_services() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerListEntry::clear_services() {
  services_ = 0u;
  clear_has_services();
}
inline ::google::protobuf::uint32 ServerListEntry::services() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.services)
  return services_;
}
inline void ServerListEntry::set_services(::google::protobuf::uint32 value) {
  set_has_services();
  services_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.services)
}

// required fixed64 server_id = 2;
inline bool ServerListEntry::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerListEntry::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerListEntry::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerListEntry::clear_server_id() {
  server_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_id();
}
inline ::google::protobuf::uint64 ServerListEntry::server_id() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.server_id)
  return server_id_;
}
inline void ServerListEntry::set_server_id(::google::protobuf::uint64 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.server_id)
}

// required string service_locator = 3;
inline bool ServerListEntry::has_service_locator() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerListEntry::set_has_service_locator() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerListEntry::clear_has_service_locator() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerListEntry::clear_service_locator() {
  service_locator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_service_locator();
}
inline const ::std::string& ServerListEntry::service_locator() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
  return service_locator_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerListEntry::set_service_locator(const ::std::string& value) {
  set_has_service_locator();
  service_locator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
}
inline void ServerListEntry::set_service_locator(const char* value) {
  set_has_service_locator();
  service_locator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
}
inline void ServerListEntry::set_service_locator(const char* value, size_t size) {
  set_has_service_locator();
  service_locator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
}
inline ::std::string* ServerListEntry::mutable_service_locator() {
  set_has_service_locator();
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
  return service_locator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerListEntry::release_service_locator() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
  clear_has_service_locator();
  return service_locator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerListEntry::set_allocated_service_locator(::std::string* service_locator) {
  if (service_locator != NULL) {
    set_has_service_locator();
  } else {
    clear_has_service_locator();
  }
  service_locator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_locator);
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.ServerListEntry.service_locator)
}

// required fixed32 expected_read_mbytes_per_sec = 4;
inline bool ServerListEntry::has_expected_read_mbytes_per_sec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerListEntry::set_has_expected_read_mbytes_per_sec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerListEntry::clear_has_expected_read_mbytes_per_sec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerListEntry::clear_expected_read_mbytes_per_sec() {
  expected_read_mbytes_per_sec_ = 0u;
  clear_has_expected_read_mbytes_per_sec();
}
inline ::google::protobuf::uint32 ServerListEntry::expected_read_mbytes_per_sec() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.expected_read_mbytes_per_sec)
  return expected_read_mbytes_per_sec_;
}
inline void ServerListEntry::set_expected_read_mbytes_per_sec(::google::protobuf::uint32 value) {
  set_has_expected_read_mbytes_per_sec();
  expected_read_mbytes_per_sec_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.expected_read_mbytes_per_sec)
}

// required fixed32 status = 5;
inline bool ServerListEntry::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerListEntry::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerListEntry::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerListEntry::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ServerListEntry::status() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.status)
  return status_;
}
inline void ServerListEntry::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.status)
}

// required fixed64 replication_id = 6;
inline bool ServerListEntry::has_replication_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServerListEntry::set_has_replication_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServerListEntry::clear_has_replication_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServerListEntry::clear_replication_id() {
  replication_id_ = GOOGLE_ULONGLONG(0);
  clear_has_replication_id();
}
inline ::google::protobuf::uint64 ServerListEntry::replication_id() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.replication_id)
  return replication_id_;
}
inline void ServerListEntry::set_replication_id(::google::protobuf::uint64 value) {
  set_has_replication_id();
  replication_id_ = value;
  // @@protoc_insertion_point(field_set:RAMCloud.ProtoBuf.ServerListEntry.replication_id)
}

// required .RAMCloud.ProtoBuf.MasterRecoveryInfo master_recovery_info = 7;
inline bool ServerListEntry::has_master_recovery_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServerListEntry::set_has_master_recovery_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServerListEntry::clear_has_master_recovery_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServerListEntry::clear_master_recovery_info() {
  if (master_recovery_info_ != NULL) master_recovery_info_->::RAMCloud::ProtoBuf::MasterRecoveryInfo::Clear();
  clear_has_master_recovery_info();
}
inline const ::RAMCloud::ProtoBuf::MasterRecoveryInfo& ServerListEntry::master_recovery_info() const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.master_recovery_info)
  return master_recovery_info_ != NULL ? *master_recovery_info_ : *default_instance_->master_recovery_info_;
}
inline ::RAMCloud::ProtoBuf::MasterRecoveryInfo* ServerListEntry::mutable_master_recovery_info() {
  set_has_master_recovery_info();
  if (master_recovery_info_ == NULL) {
    master_recovery_info_ = new ::RAMCloud::ProtoBuf::MasterRecoveryInfo;
  }
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.ServerListEntry.master_recovery_info)
  return master_recovery_info_;
}
inline ::RAMCloud::ProtoBuf::MasterRecoveryInfo* ServerListEntry::release_master_recovery_info() {
  // @@protoc_insertion_point(field_release:RAMCloud.ProtoBuf.ServerListEntry.master_recovery_info)
  clear_has_master_recovery_info();
  ::RAMCloud::ProtoBuf::MasterRecoveryInfo* temp = master_recovery_info_;
  master_recovery_info_ = NULL;
  return temp;
}
inline void ServerListEntry::set_allocated_master_recovery_info(::RAMCloud::ProtoBuf::MasterRecoveryInfo* master_recovery_info) {
  delete master_recovery_info_;
  master_recovery_info_ = master_recovery_info;
  if (master_recovery_info) {
    set_has_master_recovery_info();
  } else {
    clear_has_master_recovery_info();
  }
  // @@protoc_insertion_point(field_set_allocated:RAMCloud.ProtoBuf.ServerListEntry.master_recovery_info)
}

// repeated .RAMCloud.ProtoBuf.ServerListEntry.Update update = 8;
inline int ServerListEntry::update_size() const {
  return update_.size();
}
inline void ServerListEntry::clear_update() {
  update_.Clear();
}
inline const ::RAMCloud::ProtoBuf::ServerListEntry_Update& ServerListEntry::update(int index) const {
  // @@protoc_insertion_point(field_get:RAMCloud.ProtoBuf.ServerListEntry.update)
  return update_.Get(index);
}
inline ::RAMCloud::ProtoBuf::ServerListEntry_Update* ServerListEntry::mutable_update(int index) {
  // @@protoc_insertion_point(field_mutable:RAMCloud.ProtoBuf.ServerListEntry.update)
  return update_.Mutable(index);
}
inline ::RAMCloud::ProtoBuf::ServerListEntry_Update* ServerListEntry::add_update() {
  // @@protoc_insertion_point(field_add:RAMCloud.ProtoBuf.ServerListEntry.update)
  return update_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RAMCloud::ProtoBuf::ServerListEntry_Update >*
ServerListEntry::mutable_update() {
  // @@protoc_insertion_point(field_mutable_list:RAMCloud.ProtoBuf.ServerListEntry.update)
  return &update_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RAMCloud::ProtoBuf::ServerListEntry_Update >&
ServerListEntry::update() const {
  // @@protoc_insertion_point(field_list:RAMCloud.ProtoBuf.ServerListEntry.update)
  return update_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf
}  // namespace RAMCloud

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ServerListEntry_2eproto__INCLUDED
// RAMCloud pragma [GCCWARN=0]

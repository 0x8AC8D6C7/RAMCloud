/* Copyright (c) 2010 Stanford University
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR(S) DISCLAIM ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL AUTHORS BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

package RAMCloud.ProtoBuf;

// A set of tablets (contiguous ranges of tables).
message Tablets {
  message Tablet {
    enum State {
      /// The tablet is available.
      NORMAL = 0;
      /// The tablet is being recovered, so it's not available.
      RECOVERING = 1;
    }
    /// The id of the containing table.
    required uint64 table_id = 1;
    /// The smallest object id that is in this tablet.
    required uint64 start_object_id = 2;
    /// The largest object id that is in this tablet.
    required uint64 end_object_id = 3;
    /// The state of the tablet, see above.
    required State state = 4;
    /// The ID of the master owning this tablet.
    optional fixed64 server_id = 5;
    /// The service locator for the master owning this tablet.
    optional string service_locator = 6;
    /// An opaque field which happens to be large enough for a pointer.
    optional fixed64 user_data = 7;
  }
  /// The tablets.
  repeated Tablet tablet = 1;
}
